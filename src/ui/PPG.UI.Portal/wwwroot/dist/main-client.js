/******/ (function(modules) { // webpackBootstrap
/******/ 	function hotDisposeChunk(chunkId) {
/******/ 		delete installedChunks[chunkId];
/******/ 	}
/******/ 	var parentHotUpdateCallback = this["webpackHotUpdate"];
/******/ 	this["webpackHotUpdate"] = 
/******/ 	function webpackHotUpdateCallback(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		hotAddUpdateChunk(chunkId, moreModules);
/******/ 		if(parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
/******/ 	} ;
/******/ 	
/******/ 	function hotDownloadUpdateChunk(chunkId) { // eslint-disable-line no-unused-vars
/******/ 		var head = document.getElementsByTagName("head")[0];
/******/ 		var script = document.createElement("script");
/******/ 		script.type = "text/javascript";
/******/ 		script.charset = "utf-8";
/******/ 		script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
/******/ 		head.appendChild(script);
/******/ 	}
/******/ 	
/******/ 	function hotDownloadManifest() { // eslint-disable-line no-unused-vars
/******/ 		return new Promise(function(resolve, reject) {
/******/ 			if(typeof XMLHttpRequest === "undefined")
/******/ 				return reject(new Error("No browser support"));
/******/ 			try {
/******/ 				var request = new XMLHttpRequest();
/******/ 				var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
/******/ 				request.open("GET", requestPath, true);
/******/ 				request.timeout = 10000;
/******/ 				request.send(null);
/******/ 			} catch(err) {
/******/ 				return reject(err);
/******/ 			}
/******/ 			request.onreadystatechange = function() {
/******/ 				if(request.readyState !== 4) return;
/******/ 				if(request.status === 0) {
/******/ 					// timeout
/******/ 					reject(new Error("Manifest request to " + requestPath + " timed out."));
/******/ 				} else if(request.status === 404) {
/******/ 					// no update available
/******/ 					resolve();
/******/ 				} else if(request.status !== 200 && request.status !== 304) {
/******/ 					// other failure
/******/ 					reject(new Error("Manifest request to " + requestPath + " failed."));
/******/ 				} else {
/******/ 					// success
/******/ 					try {
/******/ 						var update = JSON.parse(request.responseText);
/******/ 					} catch(e) {
/******/ 						reject(e);
/******/ 						return;
/******/ 					}
/******/ 					resolve(update);
/******/ 				}
/******/ 			};
/******/ 		});
/******/ 	}
/******/
/******/ 	
/******/ 	
/******/ 	var hotApplyOnUpdate = true;
/******/ 	var hotCurrentHash = "e60f72684d8f4c74a3d8"; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentModuleData = {};
/******/ 	var hotCurrentChildModule; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParents = []; // eslint-disable-line no-unused-vars
/******/ 	var hotCurrentParentsTemp = []; // eslint-disable-line no-unused-vars
/******/ 	
/******/ 	function hotCreateRequire(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var me = installedModules[moduleId];
/******/ 		if(!me) return __webpack_require__;
/******/ 		var fn = function(request) {
/******/ 			if(me.hot.active) {
/******/ 				if(installedModules[request]) {
/******/ 					if(installedModules[request].parents.indexOf(moduleId) < 0)
/******/ 						installedModules[request].parents.push(moduleId);
/******/ 				} else {
/******/ 					hotCurrentParents = [moduleId];
/******/ 					hotCurrentChildModule = request;
/******/ 				}
/******/ 				if(me.children.indexOf(request) < 0)
/******/ 					me.children.push(request);
/******/ 			} else {
/******/ 				console.warn("[HMR] unexpected require(" + request + ") from disposed module " + moduleId);
/******/ 				hotCurrentParents = [];
/******/ 			}
/******/ 			return __webpack_require__(request);
/******/ 		};
/******/ 		var ObjectFactory = function ObjectFactory(name) {
/******/ 			return {
/******/ 				configurable: true,
/******/ 				enumerable: true,
/******/ 				get: function() {
/******/ 					return __webpack_require__[name];
/******/ 				},
/******/ 				set: function(value) {
/******/ 					__webpack_require__[name] = value;
/******/ 				}
/******/ 			};
/******/ 		};
/******/ 		for(var name in __webpack_require__) {
/******/ 			if(Object.prototype.hasOwnProperty.call(__webpack_require__, name) && name !== "e") {
/******/ 				Object.defineProperty(fn, name, ObjectFactory(name));
/******/ 			}
/******/ 		}
/******/ 		fn.e = function(chunkId) {
/******/ 			if(hotStatus === "ready")
/******/ 				hotSetStatus("prepare");
/******/ 			hotChunksLoading++;
/******/ 			return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
/******/ 				finishChunkLoading();
/******/ 				throw err;
/******/ 			});
/******/ 	
/******/ 			function finishChunkLoading() {
/******/ 				hotChunksLoading--;
/******/ 				if(hotStatus === "prepare") {
/******/ 					if(!hotWaitingFilesMap[chunkId]) {
/******/ 						hotEnsureUpdateChunk(chunkId);
/******/ 					}
/******/ 					if(hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 						hotUpdateDownloaded();
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 		return fn;
/******/ 	}
/******/ 	
/******/ 	function hotCreateModule(moduleId) { // eslint-disable-line no-unused-vars
/******/ 		var hot = {
/******/ 			// private stuff
/******/ 			_acceptedDependencies: {},
/******/ 			_declinedDependencies: {},
/******/ 			_selfAccepted: false,
/******/ 			_selfDeclined: false,
/******/ 			_disposeHandlers: [],
/******/ 			_main: hotCurrentChildModule !== moduleId,
/******/ 	
/******/ 			// Module API
/******/ 			active: true,
/******/ 			accept: function(dep, callback) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfAccepted = true;
/******/ 				else if(typeof dep === "function")
/******/ 					hot._selfAccepted = dep;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._acceptedDependencies[dep[i]] = callback || function() {};
/******/ 				else
/******/ 					hot._acceptedDependencies[dep] = callback || function() {};
/******/ 			},
/******/ 			decline: function(dep) {
/******/ 				if(typeof dep === "undefined")
/******/ 					hot._selfDeclined = true;
/******/ 				else if(typeof dep === "object")
/******/ 					for(var i = 0; i < dep.length; i++)
/******/ 						hot._declinedDependencies[dep[i]] = true;
/******/ 				else
/******/ 					hot._declinedDependencies[dep] = true;
/******/ 			},
/******/ 			dispose: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			addDisposeHandler: function(callback) {
/******/ 				hot._disposeHandlers.push(callback);
/******/ 			},
/******/ 			removeDisposeHandler: function(callback) {
/******/ 				var idx = hot._disposeHandlers.indexOf(callback);
/******/ 				if(idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			// Management API
/******/ 			check: hotCheck,
/******/ 			apply: hotApply,
/******/ 			status: function(l) {
/******/ 				if(!l) return hotStatus;
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			addStatusHandler: function(l) {
/******/ 				hotStatusHandlers.push(l);
/******/ 			},
/******/ 			removeStatusHandler: function(l) {
/******/ 				var idx = hotStatusHandlers.indexOf(l);
/******/ 				if(idx >= 0) hotStatusHandlers.splice(idx, 1);
/******/ 			},
/******/ 	
/******/ 			//inherit from previous dispose call
/******/ 			data: hotCurrentModuleData[moduleId]
/******/ 		};
/******/ 		hotCurrentChildModule = undefined;
/******/ 		return hot;
/******/ 	}
/******/ 	
/******/ 	var hotStatusHandlers = [];
/******/ 	var hotStatus = "idle";
/******/ 	
/******/ 	function hotSetStatus(newStatus) {
/******/ 		hotStatus = newStatus;
/******/ 		for(var i = 0; i < hotStatusHandlers.length; i++)
/******/ 			hotStatusHandlers[i].call(null, newStatus);
/******/ 	}
/******/ 	
/******/ 	// while downloading
/******/ 	var hotWaitingFiles = 0;
/******/ 	var hotChunksLoading = 0;
/******/ 	var hotWaitingFilesMap = {};
/******/ 	var hotRequestedFilesMap = {};
/******/ 	var hotAvailableFilesMap = {};
/******/ 	var hotDeferred;
/******/ 	
/******/ 	// The update info
/******/ 	var hotUpdate, hotUpdateNewHash;
/******/ 	
/******/ 	function toModuleId(id) {
/******/ 		var isNumber = (+id) + "" === id;
/******/ 		return isNumber ? +id : id;
/******/ 	}
/******/ 	
/******/ 	function hotCheck(apply) {
/******/ 		if(hotStatus !== "idle") throw new Error("check() is only allowed in idle status");
/******/ 		hotApplyOnUpdate = apply;
/******/ 		hotSetStatus("check");
/******/ 		return hotDownloadManifest().then(function(update) {
/******/ 			if(!update) {
/******/ 				hotSetStatus("idle");
/******/ 				return null;
/******/ 			}
/******/ 			hotRequestedFilesMap = {};
/******/ 			hotWaitingFilesMap = {};
/******/ 			hotAvailableFilesMap = update.c;
/******/ 			hotUpdateNewHash = update.h;
/******/ 	
/******/ 			hotSetStatus("prepare");
/******/ 			var promise = new Promise(function(resolve, reject) {
/******/ 				hotDeferred = {
/******/ 					resolve: resolve,
/******/ 					reject: reject
/******/ 				};
/******/ 			});
/******/ 			hotUpdate = {};
/******/ 			var chunkId = 0;
/******/ 			{ // eslint-disable-line no-lone-blocks
/******/ 				/*globals chunkId */
/******/ 				hotEnsureUpdateChunk(chunkId);
/******/ 			}
/******/ 			if(hotStatus === "prepare" && hotChunksLoading === 0 && hotWaitingFiles === 0) {
/******/ 				hotUpdateDownloaded();
/******/ 			}
/******/ 			return promise;
/******/ 		});
/******/ 	}
/******/ 	
/******/ 	function hotAddUpdateChunk(chunkId, moreModules) { // eslint-disable-line no-unused-vars
/******/ 		if(!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
/******/ 			return;
/******/ 		hotRequestedFilesMap[chunkId] = false;
/******/ 		for(var moduleId in moreModules) {
/******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
/******/ 				hotUpdate[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 		}
/******/ 		if(--hotWaitingFiles === 0 && hotChunksLoading === 0) {
/******/ 			hotUpdateDownloaded();
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotEnsureUpdateChunk(chunkId) {
/******/ 		if(!hotAvailableFilesMap[chunkId]) {
/******/ 			hotWaitingFilesMap[chunkId] = true;
/******/ 		} else {
/******/ 			hotRequestedFilesMap[chunkId] = true;
/******/ 			hotWaitingFiles++;
/******/ 			hotDownloadUpdateChunk(chunkId);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotUpdateDownloaded() {
/******/ 		hotSetStatus("ready");
/******/ 		var deferred = hotDeferred;
/******/ 		hotDeferred = null;
/******/ 		if(!deferred) return;
/******/ 		if(hotApplyOnUpdate) {
/******/ 			hotApply(hotApplyOnUpdate).then(function(result) {
/******/ 				deferred.resolve(result);
/******/ 			}, function(err) {
/******/ 				deferred.reject(err);
/******/ 			});
/******/ 		} else {
/******/ 			var outdatedModules = [];
/******/ 			for(var id in hotUpdate) {
/******/ 				if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 					outdatedModules.push(toModuleId(id));
/******/ 				}
/******/ 			}
/******/ 			deferred.resolve(outdatedModules);
/******/ 		}
/******/ 	}
/******/ 	
/******/ 	function hotApply(options) {
/******/ 		if(hotStatus !== "ready") throw new Error("apply() is only allowed in ready status");
/******/ 		options = options || {};
/******/ 	
/******/ 		var cb;
/******/ 		var i;
/******/ 		var j;
/******/ 		var module;
/******/ 		var moduleId;
/******/ 	
/******/ 		function getAffectedStuff(updateModuleId) {
/******/ 			var outdatedModules = [updateModuleId];
/******/ 			var outdatedDependencies = {};
/******/ 	
/******/ 			var queue = outdatedModules.slice().map(function(id) {
/******/ 				return {
/******/ 					chain: [id],
/******/ 					id: id
/******/ 				};
/******/ 			});
/******/ 			while(queue.length > 0) {
/******/ 				var queueItem = queue.pop();
/******/ 				var moduleId = queueItem.id;
/******/ 				var chain = queueItem.chain;
/******/ 				module = installedModules[moduleId];
/******/ 				if(!module || module.hot._selfAccepted)
/******/ 					continue;
/******/ 				if(module.hot._selfDeclined) {
/******/ 					return {
/******/ 						type: "self-declined",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				if(module.hot._main) {
/******/ 					return {
/******/ 						type: "unaccepted",
/******/ 						chain: chain,
/******/ 						moduleId: moduleId
/******/ 					};
/******/ 				}
/******/ 				for(var i = 0; i < module.parents.length; i++) {
/******/ 					var parentId = module.parents[i];
/******/ 					var parent = installedModules[parentId];
/******/ 					if(!parent) continue;
/******/ 					if(parent.hot._declinedDependencies[moduleId]) {
/******/ 						return {
/******/ 							type: "declined",
/******/ 							chain: chain.concat([parentId]),
/******/ 							moduleId: moduleId,
/******/ 							parentId: parentId
/******/ 						};
/******/ 					}
/******/ 					if(outdatedModules.indexOf(parentId) >= 0) continue;
/******/ 					if(parent.hot._acceptedDependencies[moduleId]) {
/******/ 						if(!outdatedDependencies[parentId])
/******/ 							outdatedDependencies[parentId] = [];
/******/ 						addAllToSet(outdatedDependencies[parentId], [moduleId]);
/******/ 						continue;
/******/ 					}
/******/ 					delete outdatedDependencies[parentId];
/******/ 					outdatedModules.push(parentId);
/******/ 					queue.push({
/******/ 						chain: chain.concat([parentId]),
/******/ 						id: parentId
/******/ 					});
/******/ 				}
/******/ 			}
/******/ 	
/******/ 			return {
/******/ 				type: "accepted",
/******/ 				moduleId: updateModuleId,
/******/ 				outdatedModules: outdatedModules,
/******/ 				outdatedDependencies: outdatedDependencies
/******/ 			};
/******/ 		}
/******/ 	
/******/ 		function addAllToSet(a, b) {
/******/ 			for(var i = 0; i < b.length; i++) {
/******/ 				var item = b[i];
/******/ 				if(a.indexOf(item) < 0)
/******/ 					a.push(item);
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// at begin all updates modules are outdated
/******/ 		// the "outdated" status can propagate to parents if they don't accept the children
/******/ 		var outdatedDependencies = {};
/******/ 		var outdatedModules = [];
/******/ 		var appliedUpdate = {};
/******/ 	
/******/ 		var warnUnexpectedRequire = function warnUnexpectedRequire() {
/******/ 			console.warn("[HMR] unexpected require(" + result.moduleId + ") to disposed module");
/******/ 		};
/******/ 	
/******/ 		for(var id in hotUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
/******/ 				moduleId = toModuleId(id);
/******/ 				var result;
/******/ 				if(hotUpdate[id]) {
/******/ 					result = getAffectedStuff(moduleId);
/******/ 				} else {
/******/ 					result = {
/******/ 						type: "disposed",
/******/ 						moduleId: id
/******/ 					};
/******/ 				}
/******/ 				var abortError = false;
/******/ 				var doApply = false;
/******/ 				var doDispose = false;
/******/ 				var chainInfo = "";
/******/ 				if(result.chain) {
/******/ 					chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
/******/ 				}
/******/ 				switch(result.type) {
/******/ 					case "self-declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of self decline: " + result.moduleId + chainInfo);
/******/ 						break;
/******/ 					case "declined":
/******/ 						if(options.onDeclined)
/******/ 							options.onDeclined(result);
/******/ 						if(!options.ignoreDeclined)
/******/ 							abortError = new Error("Aborted because of declined dependency: " + result.moduleId + " in " + result.parentId + chainInfo);
/******/ 						break;
/******/ 					case "unaccepted":
/******/ 						if(options.onUnaccepted)
/******/ 							options.onUnaccepted(result);
/******/ 						if(!options.ignoreUnaccepted)
/******/ 							abortError = new Error("Aborted because " + moduleId + " is not accepted" + chainInfo);
/******/ 						break;
/******/ 					case "accepted":
/******/ 						if(options.onAccepted)
/******/ 							options.onAccepted(result);
/******/ 						doApply = true;
/******/ 						break;
/******/ 					case "disposed":
/******/ 						if(options.onDisposed)
/******/ 							options.onDisposed(result);
/******/ 						doDispose = true;
/******/ 						break;
/******/ 					default:
/******/ 						throw new Error("Unexception type " + result.type);
/******/ 				}
/******/ 				if(abortError) {
/******/ 					hotSetStatus("abort");
/******/ 					return Promise.reject(abortError);
/******/ 				}
/******/ 				if(doApply) {
/******/ 					appliedUpdate[moduleId] = hotUpdate[moduleId];
/******/ 					addAllToSet(outdatedModules, result.outdatedModules);
/******/ 					for(moduleId in result.outdatedDependencies) {
/******/ 						if(Object.prototype.hasOwnProperty.call(result.outdatedDependencies, moduleId)) {
/******/ 							if(!outdatedDependencies[moduleId])
/******/ 								outdatedDependencies[moduleId] = [];
/******/ 							addAllToSet(outdatedDependencies[moduleId], result.outdatedDependencies[moduleId]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 				if(doDispose) {
/******/ 					addAllToSet(outdatedModules, [result.moduleId]);
/******/ 					appliedUpdate[moduleId] = warnUnexpectedRequire;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Store self accepted outdated modules to require them later by the module system
/******/ 		var outdatedSelfAcceptedModules = [];
/******/ 		for(i = 0; i < outdatedModules.length; i++) {
/******/ 			moduleId = outdatedModules[i];
/******/ 			if(installedModules[moduleId] && installedModules[moduleId].hot._selfAccepted)
/******/ 				outdatedSelfAcceptedModules.push({
/******/ 					module: moduleId,
/******/ 					errorHandler: installedModules[moduleId].hot._selfAccepted
/******/ 				});
/******/ 		}
/******/ 	
/******/ 		// Now in "dispose" phase
/******/ 		hotSetStatus("dispose");
/******/ 		Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
/******/ 			if(hotAvailableFilesMap[chunkId] === false) {
/******/ 				hotDisposeChunk(chunkId);
/******/ 			}
/******/ 		});
/******/ 	
/******/ 		var idx;
/******/ 		var queue = outdatedModules.slice();
/******/ 		while(queue.length > 0) {
/******/ 			moduleId = queue.pop();
/******/ 			module = installedModules[moduleId];
/******/ 			if(!module) continue;
/******/ 	
/******/ 			var data = {};
/******/ 	
/******/ 			// Call dispose handlers
/******/ 			var disposeHandlers = module.hot._disposeHandlers;
/******/ 			for(j = 0; j < disposeHandlers.length; j++) {
/******/ 				cb = disposeHandlers[j];
/******/ 				cb(data);
/******/ 			}
/******/ 			hotCurrentModuleData[moduleId] = data;
/******/ 	
/******/ 			// disable module (this disables requires from this module)
/******/ 			module.hot.active = false;
/******/ 	
/******/ 			// remove module from cache
/******/ 			delete installedModules[moduleId];
/******/ 	
/******/ 			// remove "parents" references from all children
/******/ 			for(j = 0; j < module.children.length; j++) {
/******/ 				var child = installedModules[module.children[j]];
/******/ 				if(!child) continue;
/******/ 				idx = child.parents.indexOf(moduleId);
/******/ 				if(idx >= 0) {
/******/ 					child.parents.splice(idx, 1);
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// remove outdated dependency from module children
/******/ 		var dependency;
/******/ 		var moduleOutdatedDependencies;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				if(module) {
/******/ 					moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 					for(j = 0; j < moduleOutdatedDependencies.length; j++) {
/******/ 						dependency = moduleOutdatedDependencies[j];
/******/ 						idx = module.children.indexOf(dependency);
/******/ 						if(idx >= 0) module.children.splice(idx, 1);
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Not in "apply" phase
/******/ 		hotSetStatus("apply");
/******/ 	
/******/ 		hotCurrentHash = hotUpdateNewHash;
/******/ 	
/******/ 		// insert new code
/******/ 		for(moduleId in appliedUpdate) {
/******/ 			if(Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
/******/ 				modules[moduleId] = appliedUpdate[moduleId];
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// call accept handlers
/******/ 		var error = null;
/******/ 		for(moduleId in outdatedDependencies) {
/******/ 			if(Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)) {
/******/ 				module = installedModules[moduleId];
/******/ 				moduleOutdatedDependencies = outdatedDependencies[moduleId];
/******/ 				var callbacks = [];
/******/ 				for(i = 0; i < moduleOutdatedDependencies.length; i++) {
/******/ 					dependency = moduleOutdatedDependencies[i];
/******/ 					cb = module.hot._acceptedDependencies[dependency];
/******/ 					if(callbacks.indexOf(cb) >= 0) continue;
/******/ 					callbacks.push(cb);
/******/ 				}
/******/ 				for(i = 0; i < callbacks.length; i++) {
/******/ 					cb = callbacks[i];
/******/ 					try {
/******/ 						cb(moduleOutdatedDependencies);
/******/ 					} catch(err) {
/******/ 						if(options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "accept-errored",
/******/ 								moduleId: moduleId,
/******/ 								dependencyId: moduleOutdatedDependencies[i],
/******/ 								error: err
/******/ 							});
/******/ 						}
/******/ 						if(!options.ignoreErrored) {
/******/ 							if(!error)
/******/ 								error = err;
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// Load self accepted modules
/******/ 		for(i = 0; i < outdatedSelfAcceptedModules.length; i++) {
/******/ 			var item = outdatedSelfAcceptedModules[i];
/******/ 			moduleId = item.module;
/******/ 			hotCurrentParents = [moduleId];
/******/ 			try {
/******/ 				__webpack_require__(moduleId);
/******/ 			} catch(err) {
/******/ 				if(typeof item.errorHandler === "function") {
/******/ 					try {
/******/ 						item.errorHandler(err);
/******/ 					} catch(err2) {
/******/ 						if(options.onErrored) {
/******/ 							options.onErrored({
/******/ 								type: "self-accept-error-handler-errored",
/******/ 								moduleId: moduleId,
/******/ 								error: err2,
/******/ 								orginalError: err
/******/ 							});
/******/ 						}
/******/ 						if(!options.ignoreErrored) {
/******/ 							if(!error)
/******/ 								error = err2;
/******/ 						}
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				} else {
/******/ 					if(options.onErrored) {
/******/ 						options.onErrored({
/******/ 							type: "self-accept-errored",
/******/ 							moduleId: moduleId,
/******/ 							error: err
/******/ 						});
/******/ 					}
/******/ 					if(!options.ignoreErrored) {
/******/ 						if(!error)
/******/ 							error = err;
/******/ 					}
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 	
/******/ 		// handle errors in accept handlers and self accepted module load
/******/ 		if(error) {
/******/ 			hotSetStatus("fail");
/******/ 			return Promise.reject(error);
/******/ 		}
/******/ 	
/******/ 		hotSetStatus("idle");
/******/ 		return new Promise(function(resolve) {
/******/ 			resolve(outdatedModules);
/******/ 		});
/******/ 	}
/******/
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {},
/******/ 			hot: hotCreateModule(moduleId),
/******/ 			parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
/******/ 			children: []
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, hotCreateRequire(moduleId));
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/dist/";
/******/
/******/ 	// __webpack_hash__
/******/ 	__webpack_require__.h = function() { return hotCurrentHash; };
/******/
/******/ 	// Load entry module and return exports
/******/ 	return hotCreateRequire(367)(__webpack_require__.s = 367);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {var require;//! moment.js
//! version : 2.19.3
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
     true ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

var hookCallback;

function hooks () {
    return hookCallback.apply(null, arguments);
}

// This is done to register the method called with moment()
// without creating circular dependencies.
function setHookCallback (callback) {
    hookCallback = callback;
}

function isArray(input) {
    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';
}

function isObject(input) {
    // IE8 will treat undefined and null as object if it wasn't for
    // input != null
    return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function isObjectEmpty(obj) {
    if (Object.getOwnPropertyNames) {
        return (Object.getOwnPropertyNames(obj).length === 0);
    } else {
        var k;
        for (k in obj) {
            if (obj.hasOwnProperty(k)) {
                return false;
            }
        }
        return true;
    }
}

function isUndefined(input) {
    return input === void 0;
}

function isNumber(input) {
    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';
}

function isDate(input) {
    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';
}

function map(arr, fn) {
    var res = [], i;
    for (i = 0; i < arr.length; ++i) {
        res.push(fn(arr[i], i));
    }
    return res;
}

function hasOwnProp(a, b) {
    return Object.prototype.hasOwnProperty.call(a, b);
}

function extend(a, b) {
    for (var i in b) {
        if (hasOwnProp(b, i)) {
            a[i] = b[i];
        }
    }

    if (hasOwnProp(b, 'toString')) {
        a.toString = b.toString;
    }

    if (hasOwnProp(b, 'valueOf')) {
        a.valueOf = b.valueOf;
    }

    return a;
}

function createUTC (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, true).utc();
}

function defaultParsingFlags() {
    // We need to deep clone this object.
    return {
        empty           : false,
        unusedTokens    : [],
        unusedInput     : [],
        overflow        : -2,
        charsLeftOver   : 0,
        nullInput       : false,
        invalidMonth    : null,
        invalidFormat   : false,
        userInvalidated : false,
        iso             : false,
        parsedDateParts : [],
        meridiem        : null,
        rfc2822         : false,
        weekdayMismatch : false
    };
}

function getParsingFlags(m) {
    if (m._pf == null) {
        m._pf = defaultParsingFlags();
    }
    return m._pf;
}

var some;
if (Array.prototype.some) {
    some = Array.prototype.some;
} else {
    some = function (fun) {
        var t = Object(this);
        var len = t.length >>> 0;

        for (var i = 0; i < len; i++) {
            if (i in t && fun.call(this, t[i], i, t)) {
                return true;
            }
        }

        return false;
    };
}

function isValid(m) {
    if (m._isValid == null) {
        var flags = getParsingFlags(m);
        var parsedParts = some.call(flags.parsedDateParts, function (i) {
            return i != null;
        });
        var isNowValid = !isNaN(m._d.getTime()) &&
            flags.overflow < 0 &&
            !flags.empty &&
            !flags.invalidMonth &&
            !flags.invalidWeekday &&
            !flags.weekdayMismatch &&
            !flags.nullInput &&
            !flags.invalidFormat &&
            !flags.userInvalidated &&
            (!flags.meridiem || (flags.meridiem && parsedParts));

        if (m._strict) {
            isNowValid = isNowValid &&
                flags.charsLeftOver === 0 &&
                flags.unusedTokens.length === 0 &&
                flags.bigHour === undefined;
        }

        if (Object.isFrozen == null || !Object.isFrozen(m)) {
            m._isValid = isNowValid;
        }
        else {
            return isNowValid;
        }
    }
    return m._isValid;
}

function createInvalid (flags) {
    var m = createUTC(NaN);
    if (flags != null) {
        extend(getParsingFlags(m), flags);
    }
    else {
        getParsingFlags(m).userInvalidated = true;
    }

    return m;
}

// Plugins that add properties should also add the key here (null value),
// so we can properly clone ourselves.
var momentProperties = hooks.momentProperties = [];

function copyConfig(to, from) {
    var i, prop, val;

    if (!isUndefined(from._isAMomentObject)) {
        to._isAMomentObject = from._isAMomentObject;
    }
    if (!isUndefined(from._i)) {
        to._i = from._i;
    }
    if (!isUndefined(from._f)) {
        to._f = from._f;
    }
    if (!isUndefined(from._l)) {
        to._l = from._l;
    }
    if (!isUndefined(from._strict)) {
        to._strict = from._strict;
    }
    if (!isUndefined(from._tzm)) {
        to._tzm = from._tzm;
    }
    if (!isUndefined(from._isUTC)) {
        to._isUTC = from._isUTC;
    }
    if (!isUndefined(from._offset)) {
        to._offset = from._offset;
    }
    if (!isUndefined(from._pf)) {
        to._pf = getParsingFlags(from);
    }
    if (!isUndefined(from._locale)) {
        to._locale = from._locale;
    }

    if (momentProperties.length > 0) {
        for (i = 0; i < momentProperties.length; i++) {
            prop = momentProperties[i];
            val = from[prop];
            if (!isUndefined(val)) {
                to[prop] = val;
            }
        }
    }

    return to;
}

var updateInProgress = false;

// Moment prototype object
function Moment(config) {
    copyConfig(this, config);
    this._d = new Date(config._d != null ? config._d.getTime() : NaN);
    if (!this.isValid()) {
        this._d = new Date(NaN);
    }
    // Prevent infinite loop in case updateOffset creates new moment
    // objects.
    if (updateInProgress === false) {
        updateInProgress = true;
        hooks.updateOffset(this);
        updateInProgress = false;
    }
}

function isMoment (obj) {
    return obj instanceof Moment || (obj != null && obj._isAMomentObject != null);
}

function absFloor (number) {
    if (number < 0) {
        // -0 -> 0
        return Math.ceil(number) || 0;
    } else {
        return Math.floor(number);
    }
}

function toInt(argumentForCoercion) {
    var coercedNumber = +argumentForCoercion,
        value = 0;

    if (coercedNumber !== 0 && isFinite(coercedNumber)) {
        value = absFloor(coercedNumber);
    }

    return value;
}

// compare two arrays, return the number of differences
function compareArrays(array1, array2, dontConvert) {
    var len = Math.min(array1.length, array2.length),
        lengthDiff = Math.abs(array1.length - array2.length),
        diffs = 0,
        i;
    for (i = 0; i < len; i++) {
        if ((dontConvert && array1[i] !== array2[i]) ||
            (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {
            diffs++;
        }
    }
    return diffs + lengthDiff;
}

function warn(msg) {
    if (hooks.suppressDeprecationWarnings === false &&
            (typeof console !==  'undefined') && console.warn) {
        console.warn('Deprecation warning: ' + msg);
    }
}

function deprecate(msg, fn) {
    var firstTime = true;

    return extend(function () {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(null, msg);
        }
        if (firstTime) {
            var args = [];
            var arg;
            for (var i = 0; i < arguments.length; i++) {
                arg = '';
                if (typeof arguments[i] === 'object') {
                    arg += '\n[' + i + '] ';
                    for (var key in arguments[0]) {
                        arg += key + ': ' + arguments[0][key] + ', ';
                    }
                    arg = arg.slice(0, -2); // Remove trailing comma and space
                } else {
                    arg = arguments[i];
                }
                args.push(arg);
            }
            warn(msg + '\nArguments: ' + Array.prototype.slice.call(args).join('') + '\n' + (new Error()).stack);
            firstTime = false;
        }
        return fn.apply(this, arguments);
    }, fn);
}

var deprecations = {};

function deprecateSimple(name, msg) {
    if (hooks.deprecationHandler != null) {
        hooks.deprecationHandler(name, msg);
    }
    if (!deprecations[name]) {
        warn(msg);
        deprecations[name] = true;
    }
}

hooks.suppressDeprecationWarnings = false;
hooks.deprecationHandler = null;

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}

function set (config) {
    var prop, i;
    for (i in config) {
        prop = config[i];
        if (isFunction(prop)) {
            this[i] = prop;
        } else {
            this['_' + i] = prop;
        }
    }
    this._config = config;
    // Lenient ordinal parsing accepts just a number in addition to
    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
    // TODO: Remove "ordinalParse" fallback in next major release.
    this._dayOfMonthOrdinalParseLenient = new RegExp(
        (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
            '|' + (/\d{1,2}/).source);
}

function mergeConfigs(parentConfig, childConfig) {
    var res = extend({}, parentConfig), prop;
    for (prop in childConfig) {
        if (hasOwnProp(childConfig, prop)) {
            if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                res[prop] = {};
                extend(res[prop], parentConfig[prop]);
                extend(res[prop], childConfig[prop]);
            } else if (childConfig[prop] != null) {
                res[prop] = childConfig[prop];
            } else {
                delete res[prop];
            }
        }
    }
    for (prop in parentConfig) {
        if (hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])) {
            // make sure changes to properties don't modify parent config
            res[prop] = extend({}, res[prop]);
        }
    }
    return res;
}

function Locale(config) {
    if (config != null) {
        this.set(config);
    }
}

var keys;

if (Object.keys) {
    keys = Object.keys;
} else {
    keys = function (obj) {
        var i, res = [];
        for (i in obj) {
            if (hasOwnProp(obj, i)) {
                res.push(i);
            }
        }
        return res;
    };
}

var defaultCalendar = {
    sameDay : '[Today at] LT',
    nextDay : '[Tomorrow at] LT',
    nextWeek : 'dddd [at] LT',
    lastDay : '[Yesterday at] LT',
    lastWeek : '[Last] dddd [at] LT',
    sameElse : 'L'
};

function calendar (key, mom, now) {
    var output = this._calendar[key] || this._calendar['sameElse'];
    return isFunction(output) ? output.call(mom, now) : output;
}

var defaultLongDateFormat = {
    LTS  : 'h:mm:ss A',
    LT   : 'h:mm A',
    L    : 'MM/DD/YYYY',
    LL   : 'MMMM D, YYYY',
    LLL  : 'MMMM D, YYYY h:mm A',
    LLLL : 'dddd, MMMM D, YYYY h:mm A'
};

function longDateFormat (key) {
    var format = this._longDateFormat[key],
        formatUpper = this._longDateFormat[key.toUpperCase()];

    if (format || !formatUpper) {
        return format;
    }

    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {
        return val.slice(1);
    });

    return this._longDateFormat[key];
}

var defaultInvalidDate = 'Invalid date';

function invalidDate () {
    return this._invalidDate;
}

var defaultOrdinal = '%d';
var defaultDayOfMonthOrdinalParse = /\d{1,2}/;

function ordinal (number) {
    return this._ordinal.replace('%d', number);
}

var defaultRelativeTime = {
    future : 'in %s',
    past   : '%s ago',
    s  : 'a few seconds',
    ss : '%d seconds',
    m  : 'a minute',
    mm : '%d minutes',
    h  : 'an hour',
    hh : '%d hours',
    d  : 'a day',
    dd : '%d days',
    M  : 'a month',
    MM : '%d months',
    y  : 'a year',
    yy : '%d years'
};

function relativeTime (number, withoutSuffix, string, isFuture) {
    var output = this._relativeTime[string];
    return (isFunction(output)) ?
        output(number, withoutSuffix, string, isFuture) :
        output.replace(/%d/i, number);
}

function pastFuture (diff, output) {
    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
    return isFunction(format) ? format(output) : format.replace(/%s/i, output);
}

var aliases = {};

function addUnitAlias (unit, shorthand) {
    var lowerCase = unit.toLowerCase();
    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
}

function normalizeUnits(units) {
    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;
}

function normalizeObjectUnits(inputObject) {
    var normalizedInput = {},
        normalizedProp,
        prop;

    for (prop in inputObject) {
        if (hasOwnProp(inputObject, prop)) {
            normalizedProp = normalizeUnits(prop);
            if (normalizedProp) {
                normalizedInput[normalizedProp] = inputObject[prop];
            }
        }
    }

    return normalizedInput;
}

var priorities = {};

function addUnitPriority(unit, priority) {
    priorities[unit] = priority;
}

function getPrioritizedUnits(unitsObj) {
    var units = [];
    for (var u in unitsObj) {
        units.push({unit: u, priority: priorities[u]});
    }
    units.sort(function (a, b) {
        return a.priority - b.priority;
    });
    return units;
}

function zeroFill(number, targetLength, forceSign) {
    var absNumber = '' + Math.abs(number),
        zerosToFill = targetLength - absNumber.length,
        sign = number >= 0;
    return (sign ? (forceSign ? '+' : '') : '-') +
        Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;
}

var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;

var localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g;

var formatFunctions = {};

var formatTokenFunctions = {};

// token:    'M'
// padded:   ['MM', 2]
// ordinal:  'Mo'
// callback: function () { this.month() + 1 }
function addFormatToken (token, padded, ordinal, callback) {
    var func = callback;
    if (typeof callback === 'string') {
        func = function () {
            return this[callback]();
        };
    }
    if (token) {
        formatTokenFunctions[token] = func;
    }
    if (padded) {
        formatTokenFunctions[padded[0]] = function () {
            return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
        };
    }
    if (ordinal) {
        formatTokenFunctions[ordinal] = function () {
            return this.localeData().ordinal(func.apply(this, arguments), token);
        };
    }
}

function removeFormattingTokens(input) {
    if (input.match(/\[[\s\S]/)) {
        return input.replace(/^\[|\]$/g, '');
    }
    return input.replace(/\\/g, '');
}

function makeFormatFunction(format) {
    var array = format.match(formattingTokens), i, length;

    for (i = 0, length = array.length; i < length; i++) {
        if (formatTokenFunctions[array[i]]) {
            array[i] = formatTokenFunctions[array[i]];
        } else {
            array[i] = removeFormattingTokens(array[i]);
        }
    }

    return function (mom) {
        var output = '', i;
        for (i = 0; i < length; i++) {
            output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];
        }
        return output;
    };
}

// format date using native date object
function formatMoment(m, format) {
    if (!m.isValid()) {
        return m.localeData().invalidDate();
    }

    format = expandFormat(format, m.localeData());
    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);

    return formatFunctions[format](m);
}

function expandFormat(format, locale) {
    var i = 5;

    function replaceLongDateFormatTokens(input) {
        return locale.longDateFormat(input) || input;
    }

    localFormattingTokens.lastIndex = 0;
    while (i >= 0 && localFormattingTokens.test(format)) {
        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);
        localFormattingTokens.lastIndex = 0;
        i -= 1;
    }

    return format;
}

var match1         = /\d/;            //       0 - 9
var match2         = /\d\d/;          //      00 - 99
var match3         = /\d{3}/;         //     000 - 999
var match4         = /\d{4}/;         //    0000 - 9999
var match6         = /[+-]?\d{6}/;    // -999999 - 999999
var match1to2      = /\d\d?/;         //       0 - 99
var match3to4      = /\d\d\d\d?/;     //     999 - 9999
var match5to6      = /\d\d\d\d\d\d?/; //   99999 - 999999
var match1to3      = /\d{1,3}/;       //       0 - 999
var match1to4      = /\d{1,4}/;       //       0 - 9999
var match1to6      = /[+-]?\d{1,6}/;  // -999999 - 999999

var matchUnsigned  = /\d+/;           //       0 - inf
var matchSigned    = /[+-]?\d+/;      //    -inf - inf

var matchOffset    = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z
var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123

// any word (or two) characters or numbers including two/three word month in arabic.
// includes scottish gaelic two word and hyphenated months
var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;


var regexes = {};

function addRegexToken (token, regex, strictRegex) {
    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {
        return (isStrict && strictRegex) ? strictRegex : regex;
    };
}

function getParseRegexForToken (token, config) {
    if (!hasOwnProp(regexes, token)) {
        return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
}

// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
function unescapeFormat(s) {
    return regexEscape(s.replace('\\', '').replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
        return p1 || p2 || p3 || p4;
    }));
}

function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
}

var tokens = {};

function addParseToken (token, callback) {
    var i, func = callback;
    if (typeof token === 'string') {
        token = [token];
    }
    if (isNumber(callback)) {
        func = function (input, array) {
            array[callback] = toInt(input);
        };
    }
    for (i = 0; i < token.length; i++) {
        tokens[token[i]] = func;
    }
}

function addWeekParseToken (token, callback) {
    addParseToken(token, function (input, array, config, token) {
        config._w = config._w || {};
        callback(input, config._w, config, token);
    });
}

function addTimeToArrayFromToken(token, input, config) {
    if (input != null && hasOwnProp(tokens, token)) {
        tokens[token](input, config._a, config, token);
    }
}

var YEAR = 0;
var MONTH = 1;
var DATE = 2;
var HOUR = 3;
var MINUTE = 4;
var SECOND = 5;
var MILLISECOND = 6;
var WEEK = 7;
var WEEKDAY = 8;

// FORMATTING

addFormatToken('Y', 0, 0, function () {
    var y = this.year();
    return y <= 9999 ? '' + y : '+' + y;
});

addFormatToken(0, ['YY', 2], 0, function () {
    return this.year() % 100;
});

addFormatToken(0, ['YYYY',   4],       0, 'year');
addFormatToken(0, ['YYYYY',  5],       0, 'year');
addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

// ALIASES

addUnitAlias('year', 'y');

// PRIORITIES

addUnitPriority('year', 1);

// PARSING

addRegexToken('Y',      matchSigned);
addRegexToken('YY',     match1to2, match2);
addRegexToken('YYYY',   match1to4, match4);
addRegexToken('YYYYY',  match1to6, match6);
addRegexToken('YYYYYY', match1to6, match6);

addParseToken(['YYYYY', 'YYYYYY'], YEAR);
addParseToken('YYYY', function (input, array) {
    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
});
addParseToken('YY', function (input, array) {
    array[YEAR] = hooks.parseTwoDigitYear(input);
});
addParseToken('Y', function (input, array) {
    array[YEAR] = parseInt(input, 10);
});

// HELPERS

function daysInYear(year) {
    return isLeapYear(year) ? 366 : 365;
}

function isLeapYear(year) {
    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
}

// HOOKS

hooks.parseTwoDigitYear = function (input) {
    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
};

// MOMENTS

var getSetYear = makeGetSet('FullYear', true);

function getIsLeapYear () {
    return isLeapYear(this.year());
}

function makeGetSet (unit, keepTime) {
    return function (value) {
        if (value != null) {
            set$1(this, unit, value);
            hooks.updateOffset(this, keepTime);
            return this;
        } else {
            return get(this, unit);
        }
    };
}

function get (mom, unit) {
    return mom.isValid() ?
        mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;
}

function set$1 (mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
        if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));
        }
        else {
            mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
        }
    }
}

// MOMENTS

function stringGet (units) {
    units = normalizeUnits(units);
    if (isFunction(this[units])) {
        return this[units]();
    }
    return this;
}


function stringSet (units, value) {
    if (typeof units === 'object') {
        units = normalizeObjectUnits(units);
        var prioritized = getPrioritizedUnits(units);
        for (var i = 0; i < prioritized.length; i++) {
            this[prioritized[i].unit](units[prioritized[i].unit]);
        }
    } else {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units](value);
        }
    }
    return this;
}

function mod(n, x) {
    return ((n % x) + x) % x;
}

var indexOf;

if (Array.prototype.indexOf) {
    indexOf = Array.prototype.indexOf;
} else {
    indexOf = function (o) {
        // I know
        var i;
        for (i = 0; i < this.length; ++i) {
            if (this[i] === o) {
                return i;
            }
        }
        return -1;
    };
}

function daysInMonth(year, month) {
    if (isNaN(year) || isNaN(month)) {
        return NaN;
    }
    var modMonth = mod(month, 12);
    year += (month - modMonth) / 12;
    return modMonth === 1 ? (isLeapYear(year) ? 29 : 28) : (31 - modMonth % 7 % 2);
}

// FORMATTING

addFormatToken('M', ['MM', 2], 'Mo', function () {
    return this.month() + 1;
});

addFormatToken('MMM', 0, 0, function (format) {
    return this.localeData().monthsShort(this, format);
});

addFormatToken('MMMM', 0, 0, function (format) {
    return this.localeData().months(this, format);
});

// ALIASES

addUnitAlias('month', 'M');

// PRIORITY

addUnitPriority('month', 8);

// PARSING

addRegexToken('M',    match1to2);
addRegexToken('MM',   match1to2, match2);
addRegexToken('MMM',  function (isStrict, locale) {
    return locale.monthsShortRegex(isStrict);
});
addRegexToken('MMMM', function (isStrict, locale) {
    return locale.monthsRegex(isStrict);
});

addParseToken(['M', 'MM'], function (input, array) {
    array[MONTH] = toInt(input) - 1;
});

addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
    var month = config._locale.monthsParse(input, token, config._strict);
    // if we didn't find a month name, mark the date as invalid.
    if (month != null) {
        array[MONTH] = month;
    } else {
        getParsingFlags(config).invalidMonth = input;
    }
});

// LOCALES

var MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/;
var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');
function localeMonths (m, format) {
    if (!m) {
        return isArray(this._months) ? this._months :
            this._months['standalone'];
    }
    return isArray(this._months) ? this._months[m.month()] :
        this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];
}

var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');
function localeMonthsShort (m, format) {
    if (!m) {
        return isArray(this._monthsShort) ? this._monthsShort :
            this._monthsShort['standalone'];
    }
    return isArray(this._monthsShort) ? this._monthsShort[m.month()] :
        this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];
}

function handleStrictParse(monthName, format, strict) {
    var i, ii, mom, llc = monthName.toLocaleLowerCase();
    if (!this._monthsParse) {
        // this is not used
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
        for (i = 0; i < 12; ++i) {
            mom = createUTC([2000, i]);
            this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();
            this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'MMM') {
            ii = indexOf.call(this._shortMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._longMonthsParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._longMonthsParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortMonthsParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeMonthsParse (monthName, format, strict) {
    var i, mom, regex;

    if (this._monthsParseExact) {
        return handleStrictParse.call(this, monthName, format, strict);
    }

    if (!this._monthsParse) {
        this._monthsParse = [];
        this._longMonthsParse = [];
        this._shortMonthsParse = [];
    }

    // TODO: add sorting
    // Sorting makes sure if one month (or abbr) is a prefix of another
    // see sorting in computeMonthsParse
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        if (strict && !this._longMonthsParse[i]) {
            this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');
            this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');
        }
        if (!strict && !this._monthsParse[i]) {
            regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
            this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {
            return i;
        } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {
            return i;
        } else if (!strict && this._monthsParse[i].test(monthName)) {
            return i;
        }
    }
}

// MOMENTS

function setMonth (mom, value) {
    var dayOfMonth;

    if (!mom.isValid()) {
        // No op
        return mom;
    }

    if (typeof value === 'string') {
        if (/^\d+$/.test(value)) {
            value = toInt(value);
        } else {
            value = mom.localeData().monthsParse(value);
            // TODO: Another silent failure?
            if (!isNumber(value)) {
                return mom;
            }
        }
    }

    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
    return mom;
}

function getSetMonth (value) {
    if (value != null) {
        setMonth(this, value);
        hooks.updateOffset(this, true);
        return this;
    } else {
        return get(this, 'Month');
    }
}

function getDaysInMonth () {
    return daysInMonth(this.year(), this.month());
}

var defaultMonthsShortRegex = matchWord;
function monthsShortRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsShortStrictRegex;
        } else {
            return this._monthsShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsShortRegex')) {
            this._monthsShortRegex = defaultMonthsShortRegex;
        }
        return this._monthsShortStrictRegex && isStrict ?
            this._monthsShortStrictRegex : this._monthsShortRegex;
    }
}

var defaultMonthsRegex = matchWord;
function monthsRegex (isStrict) {
    if (this._monthsParseExact) {
        if (!hasOwnProp(this, '_monthsRegex')) {
            computeMonthsParse.call(this);
        }
        if (isStrict) {
            return this._monthsStrictRegex;
        } else {
            return this._monthsRegex;
        }
    } else {
        if (!hasOwnProp(this, '_monthsRegex')) {
            this._monthsRegex = defaultMonthsRegex;
        }
        return this._monthsStrictRegex && isStrict ?
            this._monthsStrictRegex : this._monthsRegex;
    }
}

function computeMonthsParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom;
    for (i = 0; i < 12; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, i]);
        shortPieces.push(this.monthsShort(mom, ''));
        longPieces.push(this.months(mom, ''));
        mixedPieces.push(this.months(mom, ''));
        mixedPieces.push(this.monthsShort(mom, ''));
    }
    // Sorting makes sure if one month (or abbr) is a prefix of another it
    // will match the longer piece.
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 12; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
    }
    for (i = 0; i < 24; i++) {
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._monthsShortRegex = this._monthsRegex;
    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
}

function createDate (y, m, d, h, M, s, ms) {
    // can't just apply() to create a date:
    // https://stackoverflow.com/q/181348
    var date = new Date(y, m, d, h, M, s, ms);

    // the date constructor remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {
        date.setFullYear(y);
    }
    return date;
}

function createUTCDate (y) {
    var date = new Date(Date.UTC.apply(null, arguments));

    // the Date.UTC function remaps years 0-99 to 1900-1999
    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {
        date.setUTCFullYear(y);
    }
    return date;
}

// start-of-first-week - start-of-year
function firstWeekOffset(year, dow, doy) {
    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        fwd = 7 + dow - doy,
        // first-week day local weekday -- which local weekday is fwd
        fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

    return -fwdlw + fwd - 1;
}

// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
    var localWeekday = (7 + weekday - dow) % 7,
        weekOffset = firstWeekOffset(year, dow, doy),
        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
        resYear, resDayOfYear;

    if (dayOfYear <= 0) {
        resYear = year - 1;
        resDayOfYear = daysInYear(resYear) + dayOfYear;
    } else if (dayOfYear > daysInYear(year)) {
        resYear = year + 1;
        resDayOfYear = dayOfYear - daysInYear(year);
    } else {
        resYear = year;
        resDayOfYear = dayOfYear;
    }

    return {
        year: resYear,
        dayOfYear: resDayOfYear
    };
}

function weekOfYear(mom, dow, doy) {
    var weekOffset = firstWeekOffset(mom.year(), dow, doy),
        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
        resWeek, resYear;

    if (week < 1) {
        resYear = mom.year() - 1;
        resWeek = week + weeksInYear(resYear, dow, doy);
    } else if (week > weeksInYear(mom.year(), dow, doy)) {
        resWeek = week - weeksInYear(mom.year(), dow, doy);
        resYear = mom.year() + 1;
    } else {
        resYear = mom.year();
        resWeek = week;
    }

    return {
        week: resWeek,
        year: resYear
    };
}

function weeksInYear(year, dow, doy) {
    var weekOffset = firstWeekOffset(year, dow, doy),
        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
}

// FORMATTING

addFormatToken('w', ['ww', 2], 'wo', 'week');
addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

// ALIASES

addUnitAlias('week', 'w');
addUnitAlias('isoWeek', 'W');

// PRIORITIES

addUnitPriority('week', 5);
addUnitPriority('isoWeek', 5);

// PARSING

addRegexToken('w',  match1to2);
addRegexToken('ww', match1to2, match2);
addRegexToken('W',  match1to2);
addRegexToken('WW', match1to2, match2);

addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {
    week[token.substr(0, 1)] = toInt(input);
});

// HELPERS

// LOCALES

function localeWeek (mom) {
    return weekOfYear(mom, this._week.dow, this._week.doy).week;
}

var defaultLocaleWeek = {
    dow : 0, // Sunday is the first day of the week.
    doy : 6  // The week that contains Jan 1st is the first week of the year.
};

function localeFirstDayOfWeek () {
    return this._week.dow;
}

function localeFirstDayOfYear () {
    return this._week.doy;
}

// MOMENTS

function getSetWeek (input) {
    var week = this.localeData().week(this);
    return input == null ? week : this.add((input - week) * 7, 'd');
}

function getSetISOWeek (input) {
    var week = weekOfYear(this, 1, 4).week;
    return input == null ? week : this.add((input - week) * 7, 'd');
}

// FORMATTING

addFormatToken('d', 0, 'do', 'day');

addFormatToken('dd', 0, 0, function (format) {
    return this.localeData().weekdaysMin(this, format);
});

addFormatToken('ddd', 0, 0, function (format) {
    return this.localeData().weekdaysShort(this, format);
});

addFormatToken('dddd', 0, 0, function (format) {
    return this.localeData().weekdays(this, format);
});

addFormatToken('e', 0, 0, 'weekday');
addFormatToken('E', 0, 0, 'isoWeekday');

// ALIASES

addUnitAlias('day', 'd');
addUnitAlias('weekday', 'e');
addUnitAlias('isoWeekday', 'E');

// PRIORITY
addUnitPriority('day', 11);
addUnitPriority('weekday', 11);
addUnitPriority('isoWeekday', 11);

// PARSING

addRegexToken('d',    match1to2);
addRegexToken('e',    match1to2);
addRegexToken('E',    match1to2);
addRegexToken('dd',   function (isStrict, locale) {
    return locale.weekdaysMinRegex(isStrict);
});
addRegexToken('ddd',   function (isStrict, locale) {
    return locale.weekdaysShortRegex(isStrict);
});
addRegexToken('dddd',   function (isStrict, locale) {
    return locale.weekdaysRegex(isStrict);
});

addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
    var weekday = config._locale.weekdaysParse(input, token, config._strict);
    // if we didn't get a weekday name, mark the date as invalid
    if (weekday != null) {
        week.d = weekday;
    } else {
        getParsingFlags(config).invalidWeekday = input;
    }
});

addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
    week[token] = toInt(input);
});

// HELPERS

function parseWeekday(input, locale) {
    if (typeof input !== 'string') {
        return input;
    }

    if (!isNaN(input)) {
        return parseInt(input, 10);
    }

    input = locale.weekdaysParse(input);
    if (typeof input === 'number') {
        return input;
    }

    return null;
}

function parseIsoWeekday(input, locale) {
    if (typeof input === 'string') {
        return locale.weekdaysParse(input) % 7 || 7;
    }
    return isNaN(input) ? null : input;
}

// LOCALES

var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');
function localeWeekdays (m, format) {
    if (!m) {
        return isArray(this._weekdays) ? this._weekdays :
            this._weekdays['standalone'];
    }
    return isArray(this._weekdays) ? this._weekdays[m.day()] :
        this._weekdays[this._weekdays.isFormat.test(format) ? 'format' : 'standalone'][m.day()];
}

var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');
function localeWeekdaysShort (m) {
    return (m) ? this._weekdaysShort[m.day()] : this._weekdaysShort;
}

var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');
function localeWeekdaysMin (m) {
    return (m) ? this._weekdaysMin[m.day()] : this._weekdaysMin;
}

function handleStrictParse$1(weekdayName, format, strict) {
    var i, ii, mom, llc = weekdayName.toLocaleLowerCase();
    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._minWeekdaysParse = [];

        for (i = 0; i < 7; ++i) {
            mom = createUTC([2000, 1]).day(i);
            this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();
            this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();
            this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
        }
    }

    if (strict) {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    } else {
        if (format === 'dddd') {
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else if (format === 'ddd') {
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._minWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        } else {
            ii = indexOf.call(this._minWeekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._weekdaysParse, llc);
            if (ii !== -1) {
                return ii;
            }
            ii = indexOf.call(this._shortWeekdaysParse, llc);
            return ii !== -1 ? ii : null;
        }
    }
}

function localeWeekdaysParse (weekdayName, format, strict) {
    var i, mom, regex;

    if (this._weekdaysParseExact) {
        return handleStrictParse$1.call(this, weekdayName, format, strict);
    }

    if (!this._weekdaysParse) {
        this._weekdaysParse = [];
        this._minWeekdaysParse = [];
        this._shortWeekdaysParse = [];
        this._fullWeekdaysParse = [];
    }

    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already

        mom = createUTC([2000, 1]).day(i);
        if (strict && !this._fullWeekdaysParse[i]) {
            this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\.?') + '$', 'i');
            this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\.?') + '$', 'i');
            this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\.?') + '$', 'i');
        }
        if (!this._weekdaysParse[i]) {
            regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');
            this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
        }
        // test the regex
        if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {
            return i;
        } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
            return i;
        }
    }
}

// MOMENTS

function getSetDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
    if (input != null) {
        input = parseWeekday(input, this.localeData());
        return this.add(input - day, 'd');
    } else {
        return day;
    }
}

function getSetLocaleDayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
    return input == null ? weekday : this.add(input - weekday, 'd');
}

function getSetISODayOfWeek (input) {
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }

    // behaves the same as moment#day except
    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
    // as a setter, sunday should belong to the previous week.

    if (input != null) {
        var weekday = parseIsoWeekday(input, this.localeData());
        return this.day(this.day() % 7 ? weekday : weekday - 7);
    } else {
        return this.day() || 7;
    }
}

var defaultWeekdaysRegex = matchWord;
function weekdaysRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysStrictRegex;
        } else {
            return this._weekdaysRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            this._weekdaysRegex = defaultWeekdaysRegex;
        }
        return this._weekdaysStrictRegex && isStrict ?
            this._weekdaysStrictRegex : this._weekdaysRegex;
    }
}

var defaultWeekdaysShortRegex = matchWord;
function weekdaysShortRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysShortStrictRegex;
        } else {
            return this._weekdaysShortRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysShortRegex')) {
            this._weekdaysShortRegex = defaultWeekdaysShortRegex;
        }
        return this._weekdaysShortStrictRegex && isStrict ?
            this._weekdaysShortStrictRegex : this._weekdaysShortRegex;
    }
}

var defaultWeekdaysMinRegex = matchWord;
function weekdaysMinRegex (isStrict) {
    if (this._weekdaysParseExact) {
        if (!hasOwnProp(this, '_weekdaysRegex')) {
            computeWeekdaysParse.call(this);
        }
        if (isStrict) {
            return this._weekdaysMinStrictRegex;
        } else {
            return this._weekdaysMinRegex;
        }
    } else {
        if (!hasOwnProp(this, '_weekdaysMinRegex')) {
            this._weekdaysMinRegex = defaultWeekdaysMinRegex;
        }
        return this._weekdaysMinStrictRegex && isStrict ?
            this._weekdaysMinStrictRegex : this._weekdaysMinRegex;
    }
}


function computeWeekdaysParse () {
    function cmpLenRev(a, b) {
        return b.length - a.length;
    }

    var minPieces = [], shortPieces = [], longPieces = [], mixedPieces = [],
        i, mom, minp, shortp, longp;
    for (i = 0; i < 7; i++) {
        // make the regex if we don't have it already
        mom = createUTC([2000, 1]).day(i);
        minp = this.weekdaysMin(mom, '');
        shortp = this.weekdaysShort(mom, '');
        longp = this.weekdays(mom, '');
        minPieces.push(minp);
        shortPieces.push(shortp);
        longPieces.push(longp);
        mixedPieces.push(minp);
        mixedPieces.push(shortp);
        mixedPieces.push(longp);
    }
    // Sorting makes sure if one weekday (or abbr) is a prefix of another it
    // will match the longer piece.
    minPieces.sort(cmpLenRev);
    shortPieces.sort(cmpLenRev);
    longPieces.sort(cmpLenRev);
    mixedPieces.sort(cmpLenRev);
    for (i = 0; i < 7; i++) {
        shortPieces[i] = regexEscape(shortPieces[i]);
        longPieces[i] = regexEscape(longPieces[i]);
        mixedPieces[i] = regexEscape(mixedPieces[i]);
    }

    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
    this._weekdaysShortRegex = this._weekdaysRegex;
    this._weekdaysMinRegex = this._weekdaysRegex;

    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');
    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');
    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');
}

// FORMATTING

function hFormat() {
    return this.hours() % 12 || 12;
}

function kFormat() {
    return this.hours() || 24;
}

addFormatToken('H', ['HH', 2], 0, 'hour');
addFormatToken('h', ['hh', 2], 0, hFormat);
addFormatToken('k', ['kk', 2], 0, kFormat);

addFormatToken('hmm', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
});

addFormatToken('hmmss', 0, 0, function () {
    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

addFormatToken('Hmm', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2);
});

addFormatToken('Hmmss', 0, 0, function () {
    return '' + this.hours() + zeroFill(this.minutes(), 2) +
        zeroFill(this.seconds(), 2);
});

function meridiem (token, lowercase) {
    addFormatToken(token, 0, 0, function () {
        return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);
    });
}

meridiem('a', true);
meridiem('A', false);

// ALIASES

addUnitAlias('hour', 'h');

// PRIORITY
addUnitPriority('hour', 13);

// PARSING

function matchMeridiem (isStrict, locale) {
    return locale._meridiemParse;
}

addRegexToken('a',  matchMeridiem);
addRegexToken('A',  matchMeridiem);
addRegexToken('H',  match1to2);
addRegexToken('h',  match1to2);
addRegexToken('k',  match1to2);
addRegexToken('HH', match1to2, match2);
addRegexToken('hh', match1to2, match2);
addRegexToken('kk', match1to2, match2);

addRegexToken('hmm', match3to4);
addRegexToken('hmmss', match5to6);
addRegexToken('Hmm', match3to4);
addRegexToken('Hmmss', match5to6);

addParseToken(['H', 'HH'], HOUR);
addParseToken(['k', 'kk'], function (input, array, config) {
    var kInput = toInt(input);
    array[HOUR] = kInput === 24 ? 0 : kInput;
});
addParseToken(['a', 'A'], function (input, array, config) {
    config._isPm = config._locale.isPM(input);
    config._meridiem = input;
});
addParseToken(['h', 'hh'], function (input, array, config) {
    array[HOUR] = toInt(input);
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
    getParsingFlags(config).bigHour = true;
});
addParseToken('hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
    getParsingFlags(config).bigHour = true;
});
addParseToken('Hmm', function (input, array, config) {
    var pos = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos));
    array[MINUTE] = toInt(input.substr(pos));
});
addParseToken('Hmmss', function (input, array, config) {
    var pos1 = input.length - 4;
    var pos2 = input.length - 2;
    array[HOUR] = toInt(input.substr(0, pos1));
    array[MINUTE] = toInt(input.substr(pos1, 2));
    array[SECOND] = toInt(input.substr(pos2));
});

// LOCALES

function localeIsPM (input) {
    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
    // Using charAt should be more compatible.
    return ((input + '').toLowerCase().charAt(0) === 'p');
}

var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i;
function localeMeridiem (hours, minutes, isLower) {
    if (hours > 11) {
        return isLower ? 'pm' : 'PM';
    } else {
        return isLower ? 'am' : 'AM';
    }
}


// MOMENTS

// Setting the hour should keep the time, because the user explicitly
// specified which hour he wants. So trying to maintain the same hour (in
// a new timezone) makes sense. Adding/subtracting hours does not follow
// this rule.
var getSetHour = makeGetSet('Hours', true);

// months
// week
// weekdays
// meridiem
var baseConfig = {
    calendar: defaultCalendar,
    longDateFormat: defaultLongDateFormat,
    invalidDate: defaultInvalidDate,
    ordinal: defaultOrdinal,
    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
    relativeTime: defaultRelativeTime,

    months: defaultLocaleMonths,
    monthsShort: defaultLocaleMonthsShort,

    week: defaultLocaleWeek,

    weekdays: defaultLocaleWeekdays,
    weekdaysMin: defaultLocaleWeekdaysMin,
    weekdaysShort: defaultLocaleWeekdaysShort,

    meridiemParse: defaultLocaleMeridiemParse
};

// internal storage for locale config files
var locales = {};
var localeFamilies = {};
var globalLocale;

function normalizeLocale(key) {
    return key ? key.toLowerCase().replace('_', '-') : key;
}

// pick the locale from the array
// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
// substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
function chooseLocale(names) {
    var i = 0, j, next, locale, split;

    while (i < names.length) {
        split = normalizeLocale(names[i]).split('-');
        j = split.length;
        next = normalizeLocale(names[i + 1]);
        next = next ? next.split('-') : null;
        while (j > 0) {
            locale = loadLocale(split.slice(0, j).join('-'));
            if (locale) {
                return locale;
            }
            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {
                //the next array item is better than a shallower substring of this one
                break;
            }
            j--;
        }
        i++;
    }
    return null;
}

function loadLocale(name) {
    var oldLocale = null;
    // TODO: Find a better way to register and load all the locales in Node
    if (!locales[name] && (typeof module !== 'undefined') &&
            module && module.exports) {
        try {
            oldLocale = globalLocale._abbr;
            var aliasedRequire = require;
            __webpack_require__(346)("./" + name);
            getSetGlobalLocale(oldLocale);
        } catch (e) {}
    }
    return locales[name];
}

// This function will load locale and then set the global locale.  If
// no arguments are passed in, it will simply return the current global
// locale key.
function getSetGlobalLocale (key, values) {
    var data;
    if (key) {
        if (isUndefined(values)) {
            data = getLocale(key);
        }
        else {
            data = defineLocale(key, values);
        }

        if (data) {
            // moment.duration._locale = moment._locale = data;
            globalLocale = data;
        }
    }

    return globalLocale._abbr;
}

function defineLocale (name, config) {
    if (config !== null) {
        var parentConfig = baseConfig;
        config.abbr = name;
        if (locales[name] != null) {
            deprecateSimple('defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                    'an existing locale. moment.defineLocale(localeName, ' +
                    'config) should only be used for creating a new locale ' +
                    'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');
            parentConfig = locales[name]._config;
        } else if (config.parentLocale != null) {
            if (locales[config.parentLocale] != null) {
                parentConfig = locales[config.parentLocale]._config;
            } else {
                if (!localeFamilies[config.parentLocale]) {
                    localeFamilies[config.parentLocale] = [];
                }
                localeFamilies[config.parentLocale].push({
                    name: name,
                    config: config
                });
                return null;
            }
        }
        locales[name] = new Locale(mergeConfigs(parentConfig, config));

        if (localeFamilies[name]) {
            localeFamilies[name].forEach(function (x) {
                defineLocale(x.name, x.config);
            });
        }

        // backwards compat for now: also set the locale
        // make sure we set the locale AFTER all child locales have been
        // created, so we won't end up with the child locale set.
        getSetGlobalLocale(name);


        return locales[name];
    } else {
        // useful for testing
        delete locales[name];
        return null;
    }
}

function updateLocale(name, config) {
    if (config != null) {
        var locale, tmpLocale, parentConfig = baseConfig;
        // MERGE
        tmpLocale = loadLocale(name);
        if (tmpLocale != null) {
            parentConfig = tmpLocale._config;
        }
        config = mergeConfigs(parentConfig, config);
        locale = new Locale(config);
        locale.parentLocale = locales[name];
        locales[name] = locale;

        // backwards compat for now: also set the locale
        getSetGlobalLocale(name);
    } else {
        // pass null for config to unupdate, useful for tests
        if (locales[name] != null) {
            if (locales[name].parentLocale != null) {
                locales[name] = locales[name].parentLocale;
            } else if (locales[name] != null) {
                delete locales[name];
            }
        }
    }
    return locales[name];
}

// returns locale data
function getLocale (key) {
    var locale;

    if (key && key._locale && key._locale._abbr) {
        key = key._locale._abbr;
    }

    if (!key) {
        return globalLocale;
    }

    if (!isArray(key)) {
        //short-circuit everything else
        locale = loadLocale(key);
        if (locale) {
            return locale;
        }
        key = [key];
    }

    return chooseLocale(key);
}

function listLocales() {
    return keys(locales);
}

function checkOverflow (m) {
    var overflow;
    var a = m._a;

    if (a && getParsingFlags(m).overflow === -2) {
        overflow =
            a[MONTH]       < 0 || a[MONTH]       > 11  ? MONTH :
            a[DATE]        < 1 || a[DATE]        > daysInMonth(a[YEAR], a[MONTH]) ? DATE :
            a[HOUR]        < 0 || a[HOUR]        > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :
            a[MINUTE]      < 0 || a[MINUTE]      > 59  ? MINUTE :
            a[SECOND]      < 0 || a[SECOND]      > 59  ? SECOND :
            a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :
            -1;

        if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {
            overflow = DATE;
        }
        if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
            overflow = WEEK;
        }
        if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
            overflow = WEEKDAY;
        }

        getParsingFlags(m).overflow = overflow;
    }

    return m;
}

// Pick the first defined of two or three arguments.
function defaults(a, b, c) {
    if (a != null) {
        return a;
    }
    if (b != null) {
        return b;
    }
    return c;
}

function currentDateArray(config) {
    // hooks is actually the exported moment object
    var nowValue = new Date(hooks.now());
    if (config._useUTC) {
        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];
    }
    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
}

// convert an array to a date.
// the array should mirror the parameters below
// note: all values past the year are optional and will default to the lowest possible value.
// [year, month, day , hour, minute, second, millisecond]
function configFromArray (config) {
    var i, date, input = [], currentDate, yearToUse;

    if (config._d) {
        return;
    }

    currentDate = currentDateArray(config);

    //compute day of the year from weeks and weekdays
    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
        dayOfYearFromWeekInfo(config);
    }

    //if the day of the year is set, figure out what it is
    if (config._dayOfYear != null) {
        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {
            getParsingFlags(config)._overflowDayOfYear = true;
        }

        date = createUTCDate(yearToUse, 0, config._dayOfYear);
        config._a[MONTH] = date.getUTCMonth();
        config._a[DATE] = date.getUTCDate();
    }

    // Default to current date.
    // * if no year, month, day of month are given, default to today
    // * if day of month is given, default month and year
    // * if month is given, default only year
    // * if year is given, don't default anything
    for (i = 0; i < 3 && config._a[i] == null; ++i) {
        config._a[i] = input[i] = currentDate[i];
    }

    // Zero out whatever was not defaulted, including time
    for (; i < 7; i++) {
        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];
    }

    // Check for 24:00:00.000
    if (config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0) {
        config._nextDay = true;
        config._a[HOUR] = 0;
    }

    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);
    // Apply timezone offset from input. The actual utcOffset can be changed
    // with parseZone.
    if (config._tzm != null) {
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
    }

    if (config._nextDay) {
        config._a[HOUR] = 24;
    }

    // check for mismatching day of week
    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== config._d.getDay()) {
        getParsingFlags(config).weekdayMismatch = true;
    }
}

function dayOfYearFromWeekInfo(config) {
    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;

    w = config._w;
    if (w.GG != null || w.W != null || w.E != null) {
        dow = 1;
        doy = 4;

        // TODO: We need to take the current isoWeekYear, but that depends on
        // how we interpret now (local, utc, fixed offset). So create
        // a now version of current config (take local/utc/offset flags, and
        // create now).
        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);
        week = defaults(w.W, 1);
        weekday = defaults(w.E, 1);
        if (weekday < 1 || weekday > 7) {
            weekdayOverflow = true;
        }
    } else {
        dow = config._locale._week.dow;
        doy = config._locale._week.doy;

        var curWeek = weekOfYear(createLocal(), dow, doy);

        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

        // Default to current week.
        week = defaults(w.w, curWeek.week);

        if (w.d != null) {
            // weekday -- low day numbers are considered next week
            weekday = w.d;
            if (weekday < 0 || weekday > 6) {
                weekdayOverflow = true;
            }
        } else if (w.e != null) {
            // local weekday -- counting starts from begining of week
            weekday = w.e + dow;
            if (w.e < 0 || w.e > 6) {
                weekdayOverflow = true;
            }
        } else {
            // default to begining of week
            weekday = dow;
        }
    }
    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
        getParsingFlags(config)._overflowWeeks = true;
    } else if (weekdayOverflow != null) {
        getParsingFlags(config)._overflowWeekday = true;
    } else {
        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
        config._a[YEAR] = temp.year;
        config._dayOfYear = temp.dayOfYear;
    }
}

// iso 8601 regex
// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;
var basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/;

var tzRegex = /Z|[+-]\d\d(?::?\d\d)?/;

var isoDates = [
    ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
    ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
    ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
    ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
    ['YYYY-DDD', /\d{4}-\d{3}/],
    ['YYYY-MM', /\d{4}-\d\d/, false],
    ['YYYYYYMMDD', /[+-]\d{10}/],
    ['YYYYMMDD', /\d{8}/],
    // YYYYMM is NOT allowed by the standard
    ['GGGG[W]WWE', /\d{4}W\d{3}/],
    ['GGGG[W]WW', /\d{4}W\d{2}/, false],
    ['YYYYDDD', /\d{7}/]
];

// iso time formats and regexes
var isoTimes = [
    ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
    ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
    ['HH:mm:ss', /\d\d:\d\d:\d\d/],
    ['HH:mm', /\d\d:\d\d/],
    ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
    ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
    ['HHmmss', /\d\d\d\d\d\d/],
    ['HHmm', /\d\d\d\d/],
    ['HH', /\d\d/]
];

var aspNetJsonRegex = /^\/?Date\((\-?\d+)/i;

// date from iso format
function configFromISO(config) {
    var i, l,
        string = config._i,
        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
        allowTime, dateFormat, timeFormat, tzFormat;

    if (match) {
        getParsingFlags(config).iso = true;

        for (i = 0, l = isoDates.length; i < l; i++) {
            if (isoDates[i][1].exec(match[1])) {
                dateFormat = isoDates[i][0];
                allowTime = isoDates[i][2] !== false;
                break;
            }
        }
        if (dateFormat == null) {
            config._isValid = false;
            return;
        }
        if (match[3]) {
            for (i = 0, l = isoTimes.length; i < l; i++) {
                if (isoTimes[i][1].exec(match[3])) {
                    // match[2] should be 'T' or space
                    timeFormat = (match[2] || ' ') + isoTimes[i][0];
                    break;
                }
            }
            if (timeFormat == null) {
                config._isValid = false;
                return;
            }
        }
        if (!allowTime && timeFormat != null) {
            config._isValid = false;
            return;
        }
        if (match[4]) {
            if (tzRegex.exec(match[4])) {
                tzFormat = 'Z';
            } else {
                config._isValid = false;
                return;
            }
        }
        config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
        configFromStringAndFormat(config);
    } else {
        config._isValid = false;
    }
}

// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/;

function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {
    var result = [
        untruncateYear(yearStr),
        defaultLocaleMonthsShort.indexOf(monthStr),
        parseInt(dayStr, 10),
        parseInt(hourStr, 10),
        parseInt(minuteStr, 10)
    ];

    if (secondStr) {
        result.push(parseInt(secondStr, 10));
    }

    return result;
}

function untruncateYear(yearStr) {
    var year = parseInt(yearStr, 10);
    if (year <= 49) {
        return 2000 + year;
    } else if (year <= 999) {
        return 1900 + year;
    }
    return year;
}

function preprocessRFC2822(s) {
    // Remove comments and folding whitespace and replace multiple-spaces with a single space
    return s.replace(/\([^)]*\)|[\n\t]/g, ' ').replace(/(\s\s+)/g, ' ').trim();
}

function checkWeekday(weekdayStr, parsedInput, config) {
    if (weekdayStr) {
        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.
        var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
            weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();
        if (weekdayProvided !== weekdayActual) {
            getParsingFlags(config).weekdayMismatch = true;
            config._isValid = false;
            return false;
        }
    }
    return true;
}

var obsOffsets = {
    UT: 0,
    GMT: 0,
    EDT: -4 * 60,
    EST: -5 * 60,
    CDT: -5 * 60,
    CST: -6 * 60,
    MDT: -6 * 60,
    MST: -7 * 60,
    PDT: -7 * 60,
    PST: -8 * 60
};

function calculateOffset(obsOffset, militaryOffset, numOffset) {
    if (obsOffset) {
        return obsOffsets[obsOffset];
    } else if (militaryOffset) {
        // the only allowed military tz is Z
        return 0;
    } else {
        var hm = parseInt(numOffset, 10);
        var m = hm % 100, h = (hm - m) / 100;
        return h * 60 + m;
    }
}

// date and time from ref 2822 format
function configFromRFC2822(config) {
    var match = rfc2822.exec(preprocessRFC2822(config._i));
    if (match) {
        var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);
        if (!checkWeekday(match[1], parsedArray, config)) {
            return;
        }

        config._a = parsedArray;
        config._tzm = calculateOffset(match[8], match[9], match[10]);

        config._d = createUTCDate.apply(null, config._a);
        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

        getParsingFlags(config).rfc2822 = true;
    } else {
        config._isValid = false;
    }
}

// date from iso format or fallback
function configFromString(config) {
    var matched = aspNetJsonRegex.exec(config._i);

    if (matched !== null) {
        config._d = new Date(+matched[1]);
        return;
    }

    configFromISO(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    configFromRFC2822(config);
    if (config._isValid === false) {
        delete config._isValid;
    } else {
        return;
    }

    // Final attempt, use Input Fallback
    hooks.createFromInputFallback(config);
}

hooks.createFromInputFallback = deprecate(
    'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
    'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
    'discouraged and will be removed in an upcoming major release. Please refer to ' +
    'http://momentjs.com/guides/#/warnings/js-date/ for more info.',
    function (config) {
        config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
    }
);

// constant that refers to the ISO standard
hooks.ISO_8601 = function () {};

// constant that refers to the RFC 2822 form
hooks.RFC_2822 = function () {};

// date from string and format string
function configFromStringAndFormat(config) {
    // TODO: Move this to another part of the creation flow to prevent circular deps
    if (config._f === hooks.ISO_8601) {
        configFromISO(config);
        return;
    }
    if (config._f === hooks.RFC_2822) {
        configFromRFC2822(config);
        return;
    }
    config._a = [];
    getParsingFlags(config).empty = true;

    // This array is used to make a Date, either with `new Date` or `Date.UTC`
    var string = '' + config._i,
        i, parsedInput, tokens, token, skipped,
        stringLength = string.length,
        totalParsedInputLength = 0;

    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];

    for (i = 0; i < tokens.length; i++) {
        token = tokens[i];
        parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0];
        // console.log('token', token, 'parsedInput', parsedInput,
        //         'regex', getParseRegexForToken(token, config));
        if (parsedInput) {
            skipped = string.substr(0, string.indexOf(parsedInput));
            if (skipped.length > 0) {
                getParsingFlags(config).unusedInput.push(skipped);
            }
            string = string.slice(string.indexOf(parsedInput) + parsedInput.length);
            totalParsedInputLength += parsedInput.length;
        }
        // don't parse if it's not a known token
        if (formatTokenFunctions[token]) {
            if (parsedInput) {
                getParsingFlags(config).empty = false;
            }
            else {
                getParsingFlags(config).unusedTokens.push(token);
            }
            addTimeToArrayFromToken(token, parsedInput, config);
        }
        else if (config._strict && !parsedInput) {
            getParsingFlags(config).unusedTokens.push(token);
        }
    }

    // add remaining unparsed input length to the string
    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;
    if (string.length > 0) {
        getParsingFlags(config).unusedInput.push(string);
    }

    // clear _12h flag if hour is <= 12
    if (config._a[HOUR] <= 12 &&
        getParsingFlags(config).bigHour === true &&
        config._a[HOUR] > 0) {
        getParsingFlags(config).bigHour = undefined;
    }

    getParsingFlags(config).parsedDateParts = config._a.slice(0);
    getParsingFlags(config).meridiem = config._meridiem;
    // handle meridiem
    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);

    configFromArray(config);
    checkOverflow(config);
}


function meridiemFixWrap (locale, hour, meridiem) {
    var isPm;

    if (meridiem == null) {
        // nothing to do
        return hour;
    }
    if (locale.meridiemHour != null) {
        return locale.meridiemHour(hour, meridiem);
    } else if (locale.isPM != null) {
        // Fallback
        isPm = locale.isPM(meridiem);
        if (isPm && hour < 12) {
            hour += 12;
        }
        if (!isPm && hour === 12) {
            hour = 0;
        }
        return hour;
    } else {
        // this is not supposed to happen
        return hour;
    }
}

// date from string and array of format strings
function configFromStringAndArray(config) {
    var tempConfig,
        bestMoment,

        scoreToBeat,
        i,
        currentScore;

    if (config._f.length === 0) {
        getParsingFlags(config).invalidFormat = true;
        config._d = new Date(NaN);
        return;
    }

    for (i = 0; i < config._f.length; i++) {
        currentScore = 0;
        tempConfig = copyConfig({}, config);
        if (config._useUTC != null) {
            tempConfig._useUTC = config._useUTC;
        }
        tempConfig._f = config._f[i];
        configFromStringAndFormat(tempConfig);

        if (!isValid(tempConfig)) {
            continue;
        }

        // if there is any input that was not parsed add a penalty for that format
        currentScore += getParsingFlags(tempConfig).charsLeftOver;

        //or tokens
        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

        getParsingFlags(tempConfig).score = currentScore;

        if (scoreToBeat == null || currentScore < scoreToBeat) {
            scoreToBeat = currentScore;
            bestMoment = tempConfig;
        }
    }

    extend(config, bestMoment || tempConfig);
}

function configFromObject(config) {
    if (config._d) {
        return;
    }

    var i = normalizeObjectUnits(config._i);
    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {
        return obj && parseInt(obj, 10);
    });

    configFromArray(config);
}

function createFromConfig (config) {
    var res = new Moment(checkOverflow(prepareConfig(config)));
    if (res._nextDay) {
        // Adding is smart enough around DST
        res.add(1, 'd');
        res._nextDay = undefined;
    }

    return res;
}

function prepareConfig (config) {
    var input = config._i,
        format = config._f;

    config._locale = config._locale || getLocale(config._l);

    if (input === null || (format === undefined && input === '')) {
        return createInvalid({nullInput: true});
    }

    if (typeof input === 'string') {
        config._i = input = config._locale.preparse(input);
    }

    if (isMoment(input)) {
        return new Moment(checkOverflow(input));
    } else if (isDate(input)) {
        config._d = input;
    } else if (isArray(format)) {
        configFromStringAndArray(config);
    } else if (format) {
        configFromStringAndFormat(config);
    }  else {
        configFromInput(config);
    }

    if (!isValid(config)) {
        config._d = null;
    }

    return config;
}

function configFromInput(config) {
    var input = config._i;
    if (isUndefined(input)) {
        config._d = new Date(hooks.now());
    } else if (isDate(input)) {
        config._d = new Date(input.valueOf());
    } else if (typeof input === 'string') {
        configFromString(config);
    } else if (isArray(input)) {
        config._a = map(input.slice(0), function (obj) {
            return parseInt(obj, 10);
        });
        configFromArray(config);
    } else if (isObject(input)) {
        configFromObject(config);
    } else if (isNumber(input)) {
        // from milliseconds
        config._d = new Date(input);
    } else {
        hooks.createFromInputFallback(config);
    }
}

function createLocalOrUTC (input, format, locale, strict, isUTC) {
    var c = {};

    if (locale === true || locale === false) {
        strict = locale;
        locale = undefined;
    }

    if ((isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)) {
        input = undefined;
    }
    // object construction must be done this way.
    // https://github.com/moment/moment/issues/1423
    c._isAMomentObject = true;
    c._useUTC = c._isUTC = isUTC;
    c._l = locale;
    c._i = input;
    c._f = format;
    c._strict = strict;

    return createFromConfig(c);
}

function createLocal (input, format, locale, strict) {
    return createLocalOrUTC(input, format, locale, strict, false);
}

var prototypeMin = deprecate(
    'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other < this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

var prototypeMax = deprecate(
    'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
    function () {
        var other = createLocal.apply(null, arguments);
        if (this.isValid() && other.isValid()) {
            return other > this ? this : other;
        } else {
            return createInvalid();
        }
    }
);

// Pick a moment m from moments so that m[fn](other) is true for all
// other. This relies on the function fn to be transitive.
//
// moments should either be an array of moment objects or an array, whose
// first element is an array of moment objects.
function pickBy(fn, moments) {
    var res, i;
    if (moments.length === 1 && isArray(moments[0])) {
        moments = moments[0];
    }
    if (!moments.length) {
        return createLocal();
    }
    res = moments[0];
    for (i = 1; i < moments.length; ++i) {
        if (!moments[i].isValid() || moments[i][fn](res)) {
            res = moments[i];
        }
    }
    return res;
}

// TODO: Use [].sort instead?
function min () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isBefore', args);
}

function max () {
    var args = [].slice.call(arguments, 0);

    return pickBy('isAfter', args);
}

var now = function () {
    return Date.now ? Date.now() : +(new Date());
};

var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];

function isDurationValid(m) {
    for (var key in m) {
        if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {
            return false;
        }
    }

    var unitHasDecimal = false;
    for (var i = 0; i < ordering.length; ++i) {
        if (m[ordering[i]]) {
            if (unitHasDecimal) {
                return false; // only allow non-integers for smallest unit
            }
            if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                unitHasDecimal = true;
            }
        }
    }

    return true;
}

function isValid$1() {
    return this._isValid;
}

function createInvalid$1() {
    return createDuration(NaN);
}

function Duration (duration) {
    var normalizedInput = normalizeObjectUnits(duration),
        years = normalizedInput.year || 0,
        quarters = normalizedInput.quarter || 0,
        months = normalizedInput.month || 0,
        weeks = normalizedInput.week || 0,
        days = normalizedInput.day || 0,
        hours = normalizedInput.hour || 0,
        minutes = normalizedInput.minute || 0,
        seconds = normalizedInput.second || 0,
        milliseconds = normalizedInput.millisecond || 0;

    this._isValid = isDurationValid(normalizedInput);

    // representation for dateAddRemove
    this._milliseconds = +milliseconds +
        seconds * 1e3 + // 1000
        minutes * 6e4 + // 1000 * 60
        hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
    // Because of dateAddRemove treats 24 hours as different from a
    // day when working around DST, we need to store them separately
    this._days = +days +
        weeks * 7;
    // It is impossible to translate months into days without knowing
    // which months you are are talking about, so we have to store
    // it separately.
    this._months = +months +
        quarters * 3 +
        years * 12;

    this._data = {};

    this._locale = getLocale();

    this._bubble();
}

function isDuration (obj) {
    return obj instanceof Duration;
}

function absRound (number) {
    if (number < 0) {
        return Math.round(-1 * number) * -1;
    } else {
        return Math.round(number);
    }
}

// FORMATTING

function offset (token, separator) {
    addFormatToken(token, 0, 0, function () {
        var offset = this.utcOffset();
        var sign = '+';
        if (offset < 0) {
            offset = -offset;
            sign = '-';
        }
        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);
    });
}

offset('Z', ':');
offset('ZZ', '');

// PARSING

addRegexToken('Z',  matchShortOffset);
addRegexToken('ZZ', matchShortOffset);
addParseToken(['Z', 'ZZ'], function (input, array, config) {
    config._useUTC = true;
    config._tzm = offsetFromString(matchShortOffset, input);
});

// HELPERS

// timezone chunker
// '+10:00' > ['10',  '00']
// '-1530'  > ['-15', '30']
var chunkOffset = /([\+\-]|\d\d)/gi;

function offsetFromString(matcher, string) {
    var matches = (string || '').match(matcher);

    if (matches === null) {
        return null;
    }

    var chunk   = matches[matches.length - 1] || [];
    var parts   = (chunk + '').match(chunkOffset) || ['-', 0, 0];
    var minutes = +(parts[1] * 60) + toInt(parts[2]);

    return minutes === 0 ?
      0 :
      parts[0] === '+' ? minutes : -minutes;
}

// Return a moment from input, that is local/utc/zone equivalent to model.
function cloneWithOffset(input, model) {
    var res, diff;
    if (model._isUTC) {
        res = model.clone();
        diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf();
        // Use low-level api, because this fn is low-level api.
        res._d.setTime(res._d.valueOf() + diff);
        hooks.updateOffset(res, false);
        return res;
    } else {
        return createLocal(input).local();
    }
}

function getDateOffset (m) {
    // On Firefox.24 Date#getTimezoneOffset returns a floating point.
    // https://github.com/moment/moment/pull/1871
    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;
}

// HOOKS

// This function will be called whenever a moment is mutated.
// It is intended to keep the offset in sync with the timezone.
hooks.updateOffset = function () {};

// MOMENTS

// keepLocalTime = true means only change the timezone, without
// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
// +0200, so we adjust the time as needed, to be valid.
//
// Keeping the time actually adds/subtracts (one hour)
// from the actual represented time. That is why we call updateOffset
// a second time. In case it wants us to change the offset again
// _changeInProgress == true case, then we have to adjust, because
// there is no such time in the given timezone.
function getSetOffset (input, keepLocalTime, keepMinutes) {
    var offset = this._offset || 0,
        localAdjust;
    if (!this.isValid()) {
        return input != null ? this : NaN;
    }
    if (input != null) {
        if (typeof input === 'string') {
            input = offsetFromString(matchShortOffset, input);
            if (input === null) {
                return this;
            }
        } else if (Math.abs(input) < 16 && !keepMinutes) {
            input = input * 60;
        }
        if (!this._isUTC && keepLocalTime) {
            localAdjust = getDateOffset(this);
        }
        this._offset = input;
        this._isUTC = true;
        if (localAdjust != null) {
            this.add(localAdjust, 'm');
        }
        if (offset !== input) {
            if (!keepLocalTime || this._changeInProgress) {
                addSubtract(this, createDuration(input - offset, 'm'), 1, false);
            } else if (!this._changeInProgress) {
                this._changeInProgress = true;
                hooks.updateOffset(this, true);
                this._changeInProgress = null;
            }
        }
        return this;
    } else {
        return this._isUTC ? offset : getDateOffset(this);
    }
}

function getSetZone (input, keepLocalTime) {
    if (input != null) {
        if (typeof input !== 'string') {
            input = -input;
        }

        this.utcOffset(input, keepLocalTime);

        return this;
    } else {
        return -this.utcOffset();
    }
}

function setOffsetToUTC (keepLocalTime) {
    return this.utcOffset(0, keepLocalTime);
}

function setOffsetToLocal (keepLocalTime) {
    if (this._isUTC) {
        this.utcOffset(0, keepLocalTime);
        this._isUTC = false;

        if (keepLocalTime) {
            this.subtract(getDateOffset(this), 'm');
        }
    }
    return this;
}

function setOffsetToParsedOffset () {
    if (this._tzm != null) {
        this.utcOffset(this._tzm, false, true);
    } else if (typeof this._i === 'string') {
        var tZone = offsetFromString(matchOffset, this._i);
        if (tZone != null) {
            this.utcOffset(tZone);
        }
        else {
            this.utcOffset(0, true);
        }
    }
    return this;
}

function hasAlignedHourOffset (input) {
    if (!this.isValid()) {
        return false;
    }
    input = input ? createLocal(input).utcOffset() : 0;

    return (this.utcOffset() - input) % 60 === 0;
}

function isDaylightSavingTime () {
    return (
        this.utcOffset() > this.clone().month(0).utcOffset() ||
        this.utcOffset() > this.clone().month(5).utcOffset()
    );
}

function isDaylightSavingTimeShifted () {
    if (!isUndefined(this._isDSTShifted)) {
        return this._isDSTShifted;
    }

    var c = {};

    copyConfig(c, this);
    c = prepareConfig(c);

    if (c._a) {
        var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
        this._isDSTShifted = this.isValid() &&
            compareArrays(c._a, other.toArray()) > 0;
    } else {
        this._isDSTShifted = false;
    }

    return this._isDSTShifted;
}

function isLocal () {
    return this.isValid() ? !this._isUTC : false;
}

function isUtcOffset () {
    return this.isValid() ? this._isUTC : false;
}

function isUtc () {
    return this.isValid() ? this._isUTC && this._offset === 0 : false;
}

// ASP.NET json date format regex
var aspNetRegex = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/;

// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
// and further modified to allow for strings containing both week and day
var isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

function createDuration (input, key) {
    var duration = input,
        // matching against regexp is expensive, do it on demand
        match = null,
        sign,
        ret,
        diffRes;

    if (isDuration(input)) {
        duration = {
            ms : input._milliseconds,
            d  : input._days,
            M  : input._months
        };
    } else if (isNumber(input)) {
        duration = {};
        if (key) {
            duration[key] = input;
        } else {
            duration.milliseconds = input;
        }
    } else if (!!(match = aspNetRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : 1;
        duration = {
            y  : 0,
            d  : toInt(match[DATE])                         * sign,
            h  : toInt(match[HOUR])                         * sign,
            m  : toInt(match[MINUTE])                       * sign,
            s  : toInt(match[SECOND])                       * sign,
            ms : toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match
        };
    } else if (!!(match = isoRegex.exec(input))) {
        sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;
        duration = {
            y : parseIso(match[2], sign),
            M : parseIso(match[3], sign),
            w : parseIso(match[4], sign),
            d : parseIso(match[5], sign),
            h : parseIso(match[6], sign),
            m : parseIso(match[7], sign),
            s : parseIso(match[8], sign)
        };
    } else if (duration == null) {// checks for null or undefined
        duration = {};
    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {
        diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));

        duration = {};
        duration.ms = diffRes.milliseconds;
        duration.M = diffRes.months;
    }

    ret = new Duration(duration);

    if (isDuration(input) && hasOwnProp(input, '_locale')) {
        ret._locale = input._locale;
    }

    return ret;
}

createDuration.fn = Duration.prototype;
createDuration.invalid = createInvalid$1;

function parseIso (inp, sign) {
    // We'd normally use ~~inp for this, but unfortunately it also
    // converts floats to ints.
    // inp may be undefined, so careful calling replace on it.
    var res = inp && parseFloat(inp.replace(',', '.'));
    // apply sign while we're at it
    return (isNaN(res) ? 0 : res) * sign;
}

function positiveMomentsDifference(base, other) {
    var res = {milliseconds: 0, months: 0};

    res.months = other.month() - base.month() +
        (other.year() - base.year()) * 12;
    if (base.clone().add(res.months, 'M').isAfter(other)) {
        --res.months;
    }

    res.milliseconds = +other - +(base.clone().add(res.months, 'M'));

    return res;
}

function momentsDifference(base, other) {
    var res;
    if (!(base.isValid() && other.isValid())) {
        return {milliseconds: 0, months: 0};
    }

    other = cloneWithOffset(other, base);
    if (base.isBefore(other)) {
        res = positiveMomentsDifference(base, other);
    } else {
        res = positiveMomentsDifference(other, base);
        res.milliseconds = -res.milliseconds;
        res.months = -res.months;
    }

    return res;
}

// TODO: remove 'name' arg after deprecation is removed
function createAdder(direction, name) {
    return function (val, period) {
        var dur, tmp;
        //invert the arguments, but complain about it
        if (period !== null && !isNaN(+period)) {
            deprecateSimple(name, 'moment().' + name  + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' +
            'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');
            tmp = val; val = period; period = tmp;
        }

        val = typeof val === 'string' ? +val : val;
        dur = createDuration(val, period);
        addSubtract(this, dur, direction);
        return this;
    };
}

function addSubtract (mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = absRound(duration._days),
        months = absRound(duration._months);

    if (!mom.isValid()) {
        // No op
        return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
        setMonth(mom, get(mom, 'Month') + months * isAdding);
    }
    if (days) {
        set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
    }
    if (milliseconds) {
        mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }
    if (updateOffset) {
        hooks.updateOffset(mom, days || months);
    }
}

var add      = createAdder(1, 'add');
var subtract = createAdder(-1, 'subtract');

function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, 'days', true);
    return diff < -6 ? 'sameElse' :
            diff < -1 ? 'lastWeek' :
            diff < 0 ? 'lastDay' :
            diff < 1 ? 'sameDay' :
            diff < 2 ? 'nextDay' :
            diff < 7 ? 'nextWeek' : 'sameElse';
}

function calendar$1 (time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || createLocal(),
        sod = cloneWithOffset(now, this).startOf('day'),
        format = hooks.calendarFormat(this, sod) || 'sameElse';

    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);

    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));
}

function clone () {
    return new Moment(this);
}

function isAfter (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() > localInput.valueOf();
    } else {
        return localInput.valueOf() < this.clone().startOf(units).valueOf();
    }
}

function isBefore (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input);
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(!isUndefined(units) ? units : 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() < localInput.valueOf();
    } else {
        return this.clone().endOf(units).valueOf() < localInput.valueOf();
    }
}

function isBetween (from, to, units, inclusivity) {
    inclusivity = inclusivity || '()';
    return (inclusivity[0] === '(' ? this.isAfter(from, units) : !this.isBefore(from, units)) &&
        (inclusivity[1] === ')' ? this.isBefore(to, units) : !this.isAfter(to, units));
}

function isSame (input, units) {
    var localInput = isMoment(input) ? input : createLocal(input),
        inputMs;
    if (!(this.isValid() && localInput.isValid())) {
        return false;
    }
    units = normalizeUnits(units || 'millisecond');
    if (units === 'millisecond') {
        return this.valueOf() === localInput.valueOf();
    } else {
        inputMs = localInput.valueOf();
        return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();
    }
}

function isSameOrAfter (input, units) {
    return this.isSame(input, units) || this.isAfter(input,units);
}

function isSameOrBefore (input, units) {
    return this.isSame(input, units) || this.isBefore(input,units);
}

function diff (input, units, asFloat) {
    var that,
        zoneDelta,
        delta, output;

    if (!this.isValid()) {
        return NaN;
    }

    that = cloneWithOffset(input, this);

    if (!that.isValid()) {
        return NaN;
    }

    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

    units = normalizeUnits(units);

    switch (units) {
        case 'year': output = monthDiff(this, that) / 12; break;
        case 'month': output = monthDiff(this, that); break;
        case 'quarter': output = monthDiff(this, that) / 3; break;
        case 'second': output = (this - that) / 1e3; break; // 1000
        case 'minute': output = (this - that) / 6e4; break; // 1000 * 60
        case 'hour': output = (this - that) / 36e5; break; // 1000 * 60 * 60
        case 'day': output = (this - that - zoneDelta) / 864e5; break; // 1000 * 60 * 60 * 24, negate dst
        case 'week': output = (this - that - zoneDelta) / 6048e5; break; // 1000 * 60 * 60 * 24 * 7, negate dst
        default: output = this - that;
    }

    return asFloat ? output : absFloor(output);
}

function monthDiff (a, b) {
    // difference in months
    var wholeMonthDiff = ((b.year() - a.year()) * 12) + (b.month() - a.month()),
        // b is in (anchor - 1 month, anchor + 1 month)
        anchor = a.clone().add(wholeMonthDiff, 'months'),
        anchor2, adjust;

    if (b - anchor < 0) {
        anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor - anchor2);
    } else {
        anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
        // linear across the month
        adjust = (b - anchor) / (anchor2 - anchor);
    }

    //check for negative zero, return zero if negative zero
    return -(wholeMonthDiff + adjust) || 0;
}

hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

function toString () {
    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
}

function toISOString() {
    if (!this.isValid()) {
        return null;
    }
    var m = this.clone().utc();
    if (m.year() < 0 || m.year() > 9999) {
        return formatMoment(m, 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
    }
    if (isFunction(Date.prototype.toISOString)) {
        // native implementation is ~50x faster, use it when we can
        return this.toDate().toISOString();
    }
    return formatMoment(m, 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]');
}

/**
 * Return a human readable representation of a moment that can
 * also be evaluated to get a new moment which is the same
 *
 * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
 */
function inspect () {
    if (!this.isValid()) {
        return 'moment.invalid(/* ' + this._i + ' */)';
    }
    var func = 'moment';
    var zone = '';
    if (!this.isLocal()) {
        func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
        zone = 'Z';
    }
    var prefix = '[' + func + '("]';
    var year = (0 <= this.year() && this.year() <= 9999) ? 'YYYY' : 'YYYYYY';
    var datetime = '-MM-DD[T]HH:mm:ss.SSS';
    var suffix = zone + '[")]';

    return this.format(prefix + year + datetime + suffix);
}

function format (inputString) {
    if (!inputString) {
        inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;
    }
    var output = formatMoment(this, inputString);
    return this.localeData().postformat(output);
}

function from (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({to: this, from: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function fromNow (withoutSuffix) {
    return this.from(createLocal(), withoutSuffix);
}

function to (time, withoutSuffix) {
    if (this.isValid() &&
            ((isMoment(time) && time.isValid()) ||
             createLocal(time).isValid())) {
        return createDuration({from: this, to: time}).locale(this.locale()).humanize(!withoutSuffix);
    } else {
        return this.localeData().invalidDate();
    }
}

function toNow (withoutSuffix) {
    return this.to(createLocal(), withoutSuffix);
}

// If passed a locale key, it will set the locale for this
// instance.  Otherwise, it will return the locale configuration
// variables for this instance.
function locale (key) {
    var newLocaleData;

    if (key === undefined) {
        return this._locale._abbr;
    } else {
        newLocaleData = getLocale(key);
        if (newLocaleData != null) {
            this._locale = newLocaleData;
        }
        return this;
    }
}

var lang = deprecate(
    'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
    function (key) {
        if (key === undefined) {
            return this.localeData();
        } else {
            return this.locale(key);
        }
    }
);

function localeData () {
    return this._locale;
}

function startOf (units) {
    units = normalizeUnits(units);
    // the following switch intentionally omits break keywords
    // to utilize falling through the cases.
    switch (units) {
        case 'year':
            this.month(0);
            /* falls through */
        case 'quarter':
        case 'month':
            this.date(1);
            /* falls through */
        case 'week':
        case 'isoWeek':
        case 'day':
        case 'date':
            this.hours(0);
            /* falls through */
        case 'hour':
            this.minutes(0);
            /* falls through */
        case 'minute':
            this.seconds(0);
            /* falls through */
        case 'second':
            this.milliseconds(0);
    }

    // weeks are a special case
    if (units === 'week') {
        this.weekday(0);
    }
    if (units === 'isoWeek') {
        this.isoWeekday(1);
    }

    // quarters are also special
    if (units === 'quarter') {
        this.month(Math.floor(this.month() / 3) * 3);
    }

    return this;
}

function endOf (units) {
    units = normalizeUnits(units);
    if (units === undefined || units === 'millisecond') {
        return this;
    }

    // 'date' is an alias for 'day', so it should be considered as such.
    if (units === 'date') {
        units = 'day';
    }

    return this.startOf(units).add(1, (units === 'isoWeek' ? 'week' : units)).subtract(1, 'ms');
}

function valueOf () {
    return this._d.valueOf() - ((this._offset || 0) * 60000);
}

function unix () {
    return Math.floor(this.valueOf() / 1000);
}

function toDate () {
    return new Date(this.valueOf());
}

function toArray () {
    var m = this;
    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];
}

function toObject () {
    var m = this;
    return {
        years: m.year(),
        months: m.month(),
        date: m.date(),
        hours: m.hours(),
        minutes: m.minutes(),
        seconds: m.seconds(),
        milliseconds: m.milliseconds()
    };
}

function toJSON () {
    // new Date(NaN).toJSON() === null
    return this.isValid() ? this.toISOString() : null;
}

function isValid$2 () {
    return isValid(this);
}

function parsingFlags () {
    return extend({}, getParsingFlags(this));
}

function invalidAt () {
    return getParsingFlags(this).overflow;
}

function creationData() {
    return {
        input: this._i,
        format: this._f,
        locale: this._locale,
        isUTC: this._isUTC,
        strict: this._strict
    };
}

// FORMATTING

addFormatToken(0, ['gg', 2], 0, function () {
    return this.weekYear() % 100;
});

addFormatToken(0, ['GG', 2], 0, function () {
    return this.isoWeekYear() % 100;
});

function addWeekYearFormatToken (token, getter) {
    addFormatToken(0, [token, token.length], 0, getter);
}

addWeekYearFormatToken('gggg',     'weekYear');
addWeekYearFormatToken('ggggg',    'weekYear');
addWeekYearFormatToken('GGGG',  'isoWeekYear');
addWeekYearFormatToken('GGGGG', 'isoWeekYear');

// ALIASES

addUnitAlias('weekYear', 'gg');
addUnitAlias('isoWeekYear', 'GG');

// PRIORITY

addUnitPriority('weekYear', 1);
addUnitPriority('isoWeekYear', 1);


// PARSING

addRegexToken('G',      matchSigned);
addRegexToken('g',      matchSigned);
addRegexToken('GG',     match1to2, match2);
addRegexToken('gg',     match1to2, match2);
addRegexToken('GGGG',   match1to4, match4);
addRegexToken('gggg',   match1to4, match4);
addRegexToken('GGGGG',  match1to6, match6);
addRegexToken('ggggg',  match1to6, match6);

addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {
    week[token.substr(0, 2)] = toInt(input);
});

addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
    week[token] = hooks.parseTwoDigitYear(input);
});

// MOMENTS

function getSetWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy);
}

function getSetISOWeekYear (input) {
    return getSetWeekYearHelper.call(this,
            input, this.isoWeek(), this.isoWeekday(), 1, 4);
}

function getISOWeeksInYear () {
    return weeksInYear(this.year(), 1, 4);
}

function getWeeksInYear () {
    var weekInfo = this.localeData()._week;
    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
}

function getSetWeekYearHelper(input, week, weekday, dow, doy) {
    var weeksTarget;
    if (input == null) {
        return weekOfYear(this, dow, doy).year;
    } else {
        weeksTarget = weeksInYear(input, dow, doy);
        if (week > weeksTarget) {
            week = weeksTarget;
        }
        return setWeekAll.call(this, input, week, weekday, dow, doy);
    }
}

function setWeekAll(weekYear, week, weekday, dow, doy) {
    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

    this.year(date.getUTCFullYear());
    this.month(date.getUTCMonth());
    this.date(date.getUTCDate());
    return this;
}

// FORMATTING

addFormatToken('Q', 0, 'Qo', 'quarter');

// ALIASES

addUnitAlias('quarter', 'Q');

// PRIORITY

addUnitPriority('quarter', 7);

// PARSING

addRegexToken('Q', match1);
addParseToken('Q', function (input, array) {
    array[MONTH] = (toInt(input) - 1) * 3;
});

// MOMENTS

function getSetQuarter (input) {
    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);
}

// FORMATTING

addFormatToken('D', ['DD', 2], 'Do', 'date');

// ALIASES

addUnitAlias('date', 'D');

// PRIOROITY
addUnitPriority('date', 9);

// PARSING

addRegexToken('D',  match1to2);
addRegexToken('DD', match1to2, match2);
addRegexToken('Do', function (isStrict, locale) {
    // TODO: Remove "ordinalParse" fallback in next major release.
    return isStrict ?
      (locale._dayOfMonthOrdinalParse || locale._ordinalParse) :
      locale._dayOfMonthOrdinalParseLenient;
});

addParseToken(['D', 'DD'], DATE);
addParseToken('Do', function (input, array) {
    array[DATE] = toInt(input.match(match1to2)[0], 10);
});

// MOMENTS

var getSetDayOfMonth = makeGetSet('Date', true);

// FORMATTING

addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

// ALIASES

addUnitAlias('dayOfYear', 'DDD');

// PRIORITY
addUnitPriority('dayOfYear', 4);

// PARSING

addRegexToken('DDD',  match1to3);
addRegexToken('DDDD', match3);
addParseToken(['DDD', 'DDDD'], function (input, array, config) {
    config._dayOfYear = toInt(input);
});

// HELPERS

// MOMENTS

function getSetDayOfYear (input) {
    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;
    return input == null ? dayOfYear : this.add((input - dayOfYear), 'd');
}

// FORMATTING

addFormatToken('m', ['mm', 2], 0, 'minute');

// ALIASES

addUnitAlias('minute', 'm');

// PRIORITY

addUnitPriority('minute', 14);

// PARSING

addRegexToken('m',  match1to2);
addRegexToken('mm', match1to2, match2);
addParseToken(['m', 'mm'], MINUTE);

// MOMENTS

var getSetMinute = makeGetSet('Minutes', false);

// FORMATTING

addFormatToken('s', ['ss', 2], 0, 'second');

// ALIASES

addUnitAlias('second', 's');

// PRIORITY

addUnitPriority('second', 15);

// PARSING

addRegexToken('s',  match1to2);
addRegexToken('ss', match1to2, match2);
addParseToken(['s', 'ss'], SECOND);

// MOMENTS

var getSetSecond = makeGetSet('Seconds', false);

// FORMATTING

addFormatToken('S', 0, 0, function () {
    return ~~(this.millisecond() / 100);
});

addFormatToken(0, ['SS', 2], 0, function () {
    return ~~(this.millisecond() / 10);
});

addFormatToken(0, ['SSS', 3], 0, 'millisecond');
addFormatToken(0, ['SSSS', 4], 0, function () {
    return this.millisecond() * 10;
});
addFormatToken(0, ['SSSSS', 5], 0, function () {
    return this.millisecond() * 100;
});
addFormatToken(0, ['SSSSSS', 6], 0, function () {
    return this.millisecond() * 1000;
});
addFormatToken(0, ['SSSSSSS', 7], 0, function () {
    return this.millisecond() * 10000;
});
addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
    return this.millisecond() * 100000;
});
addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
    return this.millisecond() * 1000000;
});


// ALIASES

addUnitAlias('millisecond', 'ms');

// PRIORITY

addUnitPriority('millisecond', 16);

// PARSING

addRegexToken('S',    match1to3, match1);
addRegexToken('SS',   match1to3, match2);
addRegexToken('SSS',  match1to3, match3);

var token;
for (token = 'SSSS'; token.length <= 9; token += 'S') {
    addRegexToken(token, matchUnsigned);
}

function parseMs(input, array) {
    array[MILLISECOND] = toInt(('0.' + input) * 1000);
}

for (token = 'S'; token.length <= 9; token += 'S') {
    addParseToken(token, parseMs);
}
// MOMENTS

var getSetMillisecond = makeGetSet('Milliseconds', false);

// FORMATTING

addFormatToken('z',  0, 0, 'zoneAbbr');
addFormatToken('zz', 0, 0, 'zoneName');

// MOMENTS

function getZoneAbbr () {
    return this._isUTC ? 'UTC' : '';
}

function getZoneName () {
    return this._isUTC ? 'Coordinated Universal Time' : '';
}

var proto = Moment.prototype;

proto.add               = add;
proto.calendar          = calendar$1;
proto.clone             = clone;
proto.diff              = diff;
proto.endOf             = endOf;
proto.format            = format;
proto.from              = from;
proto.fromNow           = fromNow;
proto.to                = to;
proto.toNow             = toNow;
proto.get               = stringGet;
proto.invalidAt         = invalidAt;
proto.isAfter           = isAfter;
proto.isBefore          = isBefore;
proto.isBetween         = isBetween;
proto.isSame            = isSame;
proto.isSameOrAfter     = isSameOrAfter;
proto.isSameOrBefore    = isSameOrBefore;
proto.isValid           = isValid$2;
proto.lang              = lang;
proto.locale            = locale;
proto.localeData        = localeData;
proto.max               = prototypeMax;
proto.min               = prototypeMin;
proto.parsingFlags      = parsingFlags;
proto.set               = stringSet;
proto.startOf           = startOf;
proto.subtract          = subtract;
proto.toArray           = toArray;
proto.toObject          = toObject;
proto.toDate            = toDate;
proto.toISOString       = toISOString;
proto.inspect           = inspect;
proto.toJSON            = toJSON;
proto.toString          = toString;
proto.unix              = unix;
proto.valueOf           = valueOf;
proto.creationData      = creationData;

// Year
proto.year       = getSetYear;
proto.isLeapYear = getIsLeapYear;

// Week Year
proto.weekYear    = getSetWeekYear;
proto.isoWeekYear = getSetISOWeekYear;

// Quarter
proto.quarter = proto.quarters = getSetQuarter;

// Month
proto.month       = getSetMonth;
proto.daysInMonth = getDaysInMonth;

// Week
proto.week           = proto.weeks        = getSetWeek;
proto.isoWeek        = proto.isoWeeks     = getSetISOWeek;
proto.weeksInYear    = getWeeksInYear;
proto.isoWeeksInYear = getISOWeeksInYear;

// Day
proto.date       = getSetDayOfMonth;
proto.day        = proto.days             = getSetDayOfWeek;
proto.weekday    = getSetLocaleDayOfWeek;
proto.isoWeekday = getSetISODayOfWeek;
proto.dayOfYear  = getSetDayOfYear;

// Hour
proto.hour = proto.hours = getSetHour;

// Minute
proto.minute = proto.minutes = getSetMinute;

// Second
proto.second = proto.seconds = getSetSecond;

// Millisecond
proto.millisecond = proto.milliseconds = getSetMillisecond;

// Offset
proto.utcOffset            = getSetOffset;
proto.utc                  = setOffsetToUTC;
proto.local                = setOffsetToLocal;
proto.parseZone            = setOffsetToParsedOffset;
proto.hasAlignedHourOffset = hasAlignedHourOffset;
proto.isDST                = isDaylightSavingTime;
proto.isLocal              = isLocal;
proto.isUtcOffset          = isUtcOffset;
proto.isUtc                = isUtc;
proto.isUTC                = isUtc;

// Timezone
proto.zoneAbbr = getZoneAbbr;
proto.zoneName = getZoneName;

// Deprecations
proto.dates  = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);
proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);
proto.years  = deprecate('years accessor is deprecated. Use year instead', getSetYear);
proto.zone   = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);
proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);

function createUnix (input) {
    return createLocal(input * 1000);
}

function createInZone () {
    return createLocal.apply(null, arguments).parseZone();
}

function preParsePostFormat (string) {
    return string;
}

var proto$1 = Locale.prototype;

proto$1.calendar        = calendar;
proto$1.longDateFormat  = longDateFormat;
proto$1.invalidDate     = invalidDate;
proto$1.ordinal         = ordinal;
proto$1.preparse        = preParsePostFormat;
proto$1.postformat      = preParsePostFormat;
proto$1.relativeTime    = relativeTime;
proto$1.pastFuture      = pastFuture;
proto$1.set             = set;

// Month
proto$1.months            =        localeMonths;
proto$1.monthsShort       =        localeMonthsShort;
proto$1.monthsParse       =        localeMonthsParse;
proto$1.monthsRegex       = monthsRegex;
proto$1.monthsShortRegex  = monthsShortRegex;

// Week
proto$1.week = localeWeek;
proto$1.firstDayOfYear = localeFirstDayOfYear;
proto$1.firstDayOfWeek = localeFirstDayOfWeek;

// Day of Week
proto$1.weekdays       =        localeWeekdays;
proto$1.weekdaysMin    =        localeWeekdaysMin;
proto$1.weekdaysShort  =        localeWeekdaysShort;
proto$1.weekdaysParse  =        localeWeekdaysParse;

proto$1.weekdaysRegex       =        weekdaysRegex;
proto$1.weekdaysShortRegex  =        weekdaysShortRegex;
proto$1.weekdaysMinRegex    =        weekdaysMinRegex;

// Hours
proto$1.isPM = localeIsPM;
proto$1.meridiem = localeMeridiem;

function get$1 (format, index, field, setter) {
    var locale = getLocale();
    var utc = createUTC().set(setter, index);
    return locale[field](utc, format);
}

function listMonthsImpl (format, index, field) {
    if (isNumber(format)) {
        index = format;
        format = undefined;
    }

    format = format || '';

    if (index != null) {
        return get$1(format, index, field, 'month');
    }

    var i;
    var out = [];
    for (i = 0; i < 12; i++) {
        out[i] = get$1(format, i, field, 'month');
    }
    return out;
}

// ()
// (5)
// (fmt, 5)
// (fmt)
// (true)
// (true, 5)
// (true, fmt, 5)
// (true, fmt)
function listWeekdaysImpl (localeSorted, format, index, field) {
    if (typeof localeSorted === 'boolean') {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    } else {
        format = localeSorted;
        index = format;
        localeSorted = false;

        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';
    }

    var locale = getLocale(),
        shift = localeSorted ? locale._week.dow : 0;

    if (index != null) {
        return get$1(format, (index + shift) % 7, field, 'day');
    }

    var i;
    var out = [];
    for (i = 0; i < 7; i++) {
        out[i] = get$1(format, (i + shift) % 7, field, 'day');
    }
    return out;
}

function listMonths (format, index) {
    return listMonthsImpl(format, index, 'months');
}

function listMonthsShort (format, index) {
    return listMonthsImpl(format, index, 'monthsShort');
}

function listWeekdays (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
}

function listWeekdaysShort (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
}

function listWeekdaysMin (localeSorted, format, index) {
    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
}

getSetGlobalLocale('en', {
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (toInt(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

// Side effect imports
hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);
hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);

var mathAbs = Math.abs;

function abs () {
    var data           = this._data;

    this._milliseconds = mathAbs(this._milliseconds);
    this._days         = mathAbs(this._days);
    this._months       = mathAbs(this._months);

    data.milliseconds  = mathAbs(data.milliseconds);
    data.seconds       = mathAbs(data.seconds);
    data.minutes       = mathAbs(data.minutes);
    data.hours         = mathAbs(data.hours);
    data.months        = mathAbs(data.months);
    data.years         = mathAbs(data.years);

    return this;
}

function addSubtract$1 (duration, input, value, direction) {
    var other = createDuration(input, value);

    duration._milliseconds += direction * other._milliseconds;
    duration._days         += direction * other._days;
    duration._months       += direction * other._months;

    return duration._bubble();
}

// supports only 2.0-style add(1, 's') or add(duration)
function add$1 (input, value) {
    return addSubtract$1(this, input, value, 1);
}

// supports only 2.0-style subtract(1, 's') or subtract(duration)
function subtract$1 (input, value) {
    return addSubtract$1(this, input, value, -1);
}

function absCeil (number) {
    if (number < 0) {
        return Math.floor(number);
    } else {
        return Math.ceil(number);
    }
}

function bubble () {
    var milliseconds = this._milliseconds;
    var days         = this._days;
    var months       = this._months;
    var data         = this._data;
    var seconds, minutes, hours, years, monthsFromDays;

    // if we have a mix of positive and negative values, bubble down first
    // check: https://github.com/moment/moment/issues/2166
    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||
            (milliseconds <= 0 && days <= 0 && months <= 0))) {
        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
        days = 0;
        months = 0;
    }

    // The following code bubbles up values, see the tests for
    // examples of what that means.
    data.milliseconds = milliseconds % 1000;

    seconds           = absFloor(milliseconds / 1000);
    data.seconds      = seconds % 60;

    minutes           = absFloor(seconds / 60);
    data.minutes      = minutes % 60;

    hours             = absFloor(minutes / 60);
    data.hours        = hours % 24;

    days += absFloor(hours / 24);

    // convert days to months
    monthsFromDays = absFloor(daysToMonths(days));
    months += monthsFromDays;
    days -= absCeil(monthsToDays(monthsFromDays));

    // 12 months -> 1 year
    years = absFloor(months / 12);
    months %= 12;

    data.days   = days;
    data.months = months;
    data.years  = years;

    return this;
}

function daysToMonths (days) {
    // 400 years have 146097 days (taking into account leap year rules)
    // 400 years have 12 months === 4800
    return days * 4800 / 146097;
}

function monthsToDays (months) {
    // the reverse of daysToMonths
    return months * 146097 / 4800;
}

function as (units) {
    if (!this.isValid()) {
        return NaN;
    }
    var days;
    var months;
    var milliseconds = this._milliseconds;

    units = normalizeUnits(units);

    if (units === 'month' || units === 'year') {
        days   = this._days   + milliseconds / 864e5;
        months = this._months + daysToMonths(days);
        return units === 'month' ? months : months / 12;
    } else {
        // handle milliseconds separately because of floating point math errors (issue #1867)
        days = this._days + Math.round(monthsToDays(this._months));
        switch (units) {
            case 'week'   : return days / 7     + milliseconds / 6048e5;
            case 'day'    : return days         + milliseconds / 864e5;
            case 'hour'   : return days * 24    + milliseconds / 36e5;
            case 'minute' : return days * 1440  + milliseconds / 6e4;
            case 'second' : return days * 86400 + milliseconds / 1000;
            // Math.floor prevents floating point math errors here
            case 'millisecond': return Math.floor(days * 864e5) + milliseconds;
            default: throw new Error('Unknown unit ' + units);
        }
    }
}

// TODO: Use this.as('ms')?
function valueOf$1 () {
    if (!this.isValid()) {
        return NaN;
    }
    return (
        this._milliseconds +
        this._days * 864e5 +
        (this._months % 12) * 2592e6 +
        toInt(this._months / 12) * 31536e6
    );
}

function makeAs (alias) {
    return function () {
        return this.as(alias);
    };
}

var asMilliseconds = makeAs('ms');
var asSeconds      = makeAs('s');
var asMinutes      = makeAs('m');
var asHours        = makeAs('h');
var asDays         = makeAs('d');
var asWeeks        = makeAs('w');
var asMonths       = makeAs('M');
var asYears        = makeAs('y');

function clone$1 () {
    return createDuration(this);
}

function get$2 (units) {
    units = normalizeUnits(units);
    return this.isValid() ? this[units + 's']() : NaN;
}

function makeGetter(name) {
    return function () {
        return this.isValid() ? this._data[name] : NaN;
    };
}

var milliseconds = makeGetter('milliseconds');
var seconds      = makeGetter('seconds');
var minutes      = makeGetter('minutes');
var hours        = makeGetter('hours');
var days         = makeGetter('days');
var months       = makeGetter('months');
var years        = makeGetter('years');

function weeks () {
    return absFloor(this.days() / 7);
}

var round = Math.round;
var thresholds = {
    ss: 44,         // a few seconds to seconds
    s : 45,         // seconds to minute
    m : 45,         // minutes to hour
    h : 22,         // hours to day
    d : 26,         // days to month
    M : 11          // months to year
};

// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
}

function relativeTime$1 (posNegDuration, withoutSuffix, locale) {
    var duration = createDuration(posNegDuration).abs();
    var seconds  = round(duration.as('s'));
    var minutes  = round(duration.as('m'));
    var hours    = round(duration.as('h'));
    var days     = round(duration.as('d'));
    var months   = round(duration.as('M'));
    var years    = round(duration.as('y'));

    var a = seconds <= thresholds.ss && ['s', seconds]  ||
            seconds < thresholds.s   && ['ss', seconds] ||
            minutes <= 1             && ['m']           ||
            minutes < thresholds.m   && ['mm', minutes] ||
            hours   <= 1             && ['h']           ||
            hours   < thresholds.h   && ['hh', hours]   ||
            days    <= 1             && ['d']           ||
            days    < thresholds.d   && ['dd', days]    ||
            months  <= 1             && ['M']           ||
            months  < thresholds.M   && ['MM', months]  ||
            years   <= 1             && ['y']           || ['yy', years];

    a[2] = withoutSuffix;
    a[3] = +posNegDuration > 0;
    a[4] = locale;
    return substituteTimeAgo.apply(null, a);
}

// This function allows you to set the rounding function for relative time strings
function getSetRelativeTimeRounding (roundingFunction) {
    if (roundingFunction === undefined) {
        return round;
    }
    if (typeof(roundingFunction) === 'function') {
        round = roundingFunction;
        return true;
    }
    return false;
}

// This function allows you to set a threshold for relative time strings
function getSetRelativeTimeThreshold (threshold, limit) {
    if (thresholds[threshold] === undefined) {
        return false;
    }
    if (limit === undefined) {
        return thresholds[threshold];
    }
    thresholds[threshold] = limit;
    if (threshold === 's') {
        thresholds.ss = limit - 1;
    }
    return true;
}

function humanize (withSuffix) {
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var locale = this.localeData();
    var output = relativeTime$1(this, !withSuffix, locale);

    if (withSuffix) {
        output = locale.pastFuture(+this, output);
    }

    return locale.postformat(output);
}

var abs$1 = Math.abs;

function sign(x) {
    return ((x > 0) - (x < 0)) || +x;
}

function toISOString$1() {
    // for ISO strings we do not use the normal bubbling rules:
    //  * milliseconds bubble up until they become hours
    //  * days do not bubble at all
    //  * months bubble up until they become years
    // This is because there is no context-free conversion between hours and days
    // (think of clock changes)
    // and also not between days and months (28-31 days per month)
    if (!this.isValid()) {
        return this.localeData().invalidDate();
    }

    var seconds = abs$1(this._milliseconds) / 1000;
    var days         = abs$1(this._days);
    var months       = abs$1(this._months);
    var minutes, hours, years;

    // 3600 seconds -> 60 minutes -> 1 hour
    minutes           = absFloor(seconds / 60);
    hours             = absFloor(minutes / 60);
    seconds %= 60;
    minutes %= 60;

    // 12 months -> 1 year
    years  = absFloor(months / 12);
    months %= 12;


    // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
    var Y = years;
    var M = months;
    var D = days;
    var h = hours;
    var m = minutes;
    var s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';
    var total = this.asSeconds();

    if (!total) {
        // this is the same as C#'s (Noda) and python (isodate)...
        // but not other JS (goog.date)
        return 'P0D';
    }

    var totalSign = total < 0 ? '-' : '';
    var ymSign = sign(this._months) !== sign(total) ? '-' : '';
    var daysSign = sign(this._days) !== sign(total) ? '-' : '';
    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

    return totalSign + 'P' +
        (Y ? ymSign + Y + 'Y' : '') +
        (M ? ymSign + M + 'M' : '') +
        (D ? daysSign + D + 'D' : '') +
        ((h || m || s) ? 'T' : '') +
        (h ? hmsSign + h + 'H' : '') +
        (m ? hmsSign + m + 'M' : '') +
        (s ? hmsSign + s + 'S' : '');
}

var proto$2 = Duration.prototype;

proto$2.isValid        = isValid$1;
proto$2.abs            = abs;
proto$2.add            = add$1;
proto$2.subtract       = subtract$1;
proto$2.as             = as;
proto$2.asMilliseconds = asMilliseconds;
proto$2.asSeconds      = asSeconds;
proto$2.asMinutes      = asMinutes;
proto$2.asHours        = asHours;
proto$2.asDays         = asDays;
proto$2.asWeeks        = asWeeks;
proto$2.asMonths       = asMonths;
proto$2.asYears        = asYears;
proto$2.valueOf        = valueOf$1;
proto$2._bubble        = bubble;
proto$2.clone          = clone$1;
proto$2.get            = get$2;
proto$2.milliseconds   = milliseconds;
proto$2.seconds        = seconds;
proto$2.minutes        = minutes;
proto$2.hours          = hours;
proto$2.days           = days;
proto$2.weeks          = weeks;
proto$2.months         = months;
proto$2.years          = years;
proto$2.humanize       = humanize;
proto$2.toISOString    = toISOString$1;
proto$2.toString       = toISOString$1;
proto$2.toJSON         = toISOString$1;
proto$2.locale         = locale;
proto$2.localeData     = localeData;

// Deprecations
proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);
proto$2.lang = lang;

// Side effect imports

// FORMATTING

addFormatToken('X', 0, 0, 'unix');
addFormatToken('x', 0, 0, 'valueOf');

// PARSING

addRegexToken('x', matchSigned);
addRegexToken('X', matchTimestamp);
addParseToken('X', function (input, array, config) {
    config._d = new Date(parseFloat(input, 10) * 1000);
});
addParseToken('x', function (input, array, config) {
    config._d = new Date(toInt(input));
});

// Side effect imports


hooks.version = '2.19.3';

setHookCallback(createLocal);

hooks.fn                    = proto;
hooks.min                   = min;
hooks.max                   = max;
hooks.now                   = now;
hooks.utc                   = createUTC;
hooks.unix                  = createUnix;
hooks.months                = listMonths;
hooks.isDate                = isDate;
hooks.locale                = getSetGlobalLocale;
hooks.invalid               = createInvalid;
hooks.duration              = createDuration;
hooks.isMoment              = isMoment;
hooks.weekdays              = listWeekdays;
hooks.parseZone             = createInZone;
hooks.localeData            = getLocale;
hooks.isDuration            = isDuration;
hooks.monthsShort           = listMonthsShort;
hooks.weekdaysMin           = listWeekdaysMin;
hooks.defineLocale          = defineLocale;
hooks.updateLocale          = updateLocale;
hooks.locales               = listLocales;
hooks.weekdaysShort         = listWeekdaysShort;
hooks.normalizeUnits        = normalizeUnits;
hooks.relativeTimeRounding  = getSetRelativeTimeRounding;
hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
hooks.calendarFormat        = getCalendarFormat;
hooks.prototype             = proto;

return hooks;

})));

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(219)(module)))

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(0);

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var platform_browser_1 = __webpack_require__(18);
var router_1 = __webpack_require__(3);
var rxjs_1 = __webpack_require__(31);
var cookies_service_1 = __webpack_require__(55);
/**
 * The state service manages all authentication/authorization capabilities
 */
var StateService = (function () {
    function StateService(API_BASE, API_VERSION, _cookieService, _http, _title, _router) {
        this.API_BASE = API_BASE;
        this.API_VERSION = API_VERSION;
        this._cookieService = _cookieService;
        this._http = _http;
        this._title = _title;
        this._router = _router;
        this.apiUrl = API_BASE + '/api';
        var userToken = this._cookieService.get('user_token');
        if (userToken) {
            var parsedToken = this.parseToken(userToken); //User = this.parseToken(userToken);
            this.currentUser = parsedToken;
        }
    }
    StateService.prototype.parseToken = function (jwt) {
        var base64Url = jwt.split('.')[1];
        if (base64Url != null) {
            var base64 = base64Url.replace('-', '+').replace('_', '/');
            return JSON.parse(window.atob(base64));
        }
        return null;
    };
    /**
     * Attempts to refresh the JWT auth token with the refresh token
     */
    StateService.prototype.refreshToken = function () {
        var _this = this;
        var refreshToken = this._cookieService.get('refresh_token');
        if (refreshToken) {
            var refreshHeader = new http_1.Headers();
            refreshHeader.append('Authorization', 'Bearer ' + refreshToken);
            refreshHeader.append("api-version", this.API_VERSION);
            return this._http.post(this.apiUrl + '/auth/refresh/' + refreshToken, null, { headers: refreshHeader })
                .map(function (res) {
                var jwt = res.json();
                _this.setToken(jwt).subscribe(function (s) {
                    var headers = new http_1.Headers();
                    headers.append("content-type", "application/json");
                    headers.append("api-version", _this.API_VERSION);
                    headers.append('Authorization', 'Bearer ' + jwt.access_token);
                    return headers;
                });
            }).catch(function (err) {
                _this.removeToken();
                return rxjs_1.Observable.throw(err);
            });
        }
        else {
            return new rxjs_1.Observable(function (obs) {
                _this.removeToken();
                obs.error(new Error('No refresh token available.'));
            });
        }
    };
    /**
     * Gets a Header object with the Authorization: Bearer {token}
     */
    StateService.prototype.getAuthHeader = function () {
        var token = this._cookieService.get('user_token');
        if (token) {
            var params = this.parseToken(token);
            if (params && Math.round(new Date().getTime() / 1000) <= params.exp) {
                var headers = new http_1.Headers();
                headers.append("content-type", "application/json");
                headers.append("api-version", this.API_VERSION);
                headers.append('Authorization', 'Bearer ' + token);
                return rxjs_1.Observable.of(headers);
            }
        }
        return this.refreshToken();
    };
    /**
     * Saves JWT authentication/authorization token to cookies and sets
     * current user object.
     * @param jwt
     */
    StateService.prototype.setToken = function (jwt) {
        var oneYearFromNow = new Date();
        oneYearFromNow.setFullYear(oneYearFromNow.getFullYear() + 1);
        this.currentUser = this.parseToken(jwt.access_token);
        this._cookieService.put('user_token', jwt.access_token, { expires: oneYearFromNow });
        if (jwt.refresh_token) {
            this._cookieService.put('refresh_token', jwt.refresh_token, { expires: oneYearFromNow });
        }
        return this.loadPermissions();
    };
    /**
     * Removes the current token to de-authenticate the current user
     */
    StateService.prototype.removeToken = function () {
        this.currentUser = null;
        this.permissions = null;
        this._cookieService.removeAll();
        this._router.navigate(['/auth']);
    };
    /**
     * Validates whether the current user has access to the route for the menu item
     * @param {MenuItem} menuItem The menu item to validate relative to the users privileges
     */
    StateService.prototype.canTraverseRoute = function (menuItem) {
        if (this.currentUser == null) {
            return false;
        }
        // user is authenticated and the route requires no special privilege
        if (menuItem.requiredPrivileges == null || menuItem.requiredPrivileges.length == 0) {
            return true;
        }
        else {
            var privileges = menuItem.requiredPrivileges;
            var permissions_1 = this.permissions;
            if (permissions_1) {
                return privileges.some(function (v) {
                    return permissions_1.indexOf(v) >= 0;
                });
            }
        }
        return false;
    };
    /**
     * Validates whether the current user has the requested privilege
     * @param {string} privilege The privilege required of the current user
     */
    StateService.prototype.hasPrivilege = function (privilege) {
        if (this.currentUser == null) {
            return false;
        }
        var permissions = this.permissions;
        if (permissions) {
            return permissions.indexOf(privilege) >= 0;
        }
        return false;
    };
    StateService.prototype.loadPermissions = function () {
        var _this = this;
        var headers = new http_1.Headers();
        return this.getAuthHeader()
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            var requestUrl = _this.apiUrl + '/common/access';
            return _this._http.get(requestUrl, { headers: authHeaders })
                .flatMap(function (s) {
                var perms = s.json();
                _this.permissions = perms;
                return rxjs_1.Observable.of(true);
            });
        });
    };
    return StateService;
}());
StateService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, cookies_service_1.CookieService,
        http_1.Http,
        platform_browser_1.Title,
        router_1.Router])
], StateService);
exports.StateService = StateService;


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(648);

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var rxjs_1 = __webpack_require__(31);
var notification_model_1 = __webpack_require__(276);
/**
 * The notification service is used by the notification bar
 * to display error/success/warning/info notices.
 */
var NotificationService = (function () {
    function NotificationService() {
        this.notificationSource = new rxjs_1.Subject();
        this.notifications$ = this.notificationSource.asObservable();
    }
    /**
     * Pushes a notification to the service to display in the UI
     * @param {string} type Type of notice to display
     * @param {string} message Message to display in the notification
     */
    NotificationService.prototype.notify = function (type, message) {
        this.notificationSource.next(new notification_model_1.Notification(message, type));
    };
    return NotificationService;
}());
NotificationService = __decorate([
    core_1.Injectable()
], NotificationService);
exports.NotificationService = NotificationService;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var _ = __webpack_require__(23);
/**
 * The modal service is used for modal windows throughout the UI
 */
var ModalService = (function () {
    function ModalService() {
        this.modals = [];
    }
    /**
     * Adds a modal window to the service
     * @param modal Modal to add
     */
    ModalService.prototype.add = function (modal) {
        // add modal to array of active modals
        this.modals.push(modal);
    };
    /**
     * Removes a modal window from the service
     * @param id Unique identifier of the modal to remove
     */
    ModalService.prototype.remove = function (id) {
        // remove modal from array of active modals
        var modalToRemove = this.get(id);
        this.modals = _.without(this.modals, modalToRemove);
    };
    /**
     * Opens a modal window with the record provided
     * @param {string} id Unique identifier of the modal to display
     * @param {any} [record] Optional record to use in modal
     */
    ModalService.prototype.open = function (id, record) {
        // open modal specified by id
        var modal = this.get(id);
        modal.record = record;
        modal.open();
    };
    /**
     * Close a modal window
     * @param {string} id Unique identifier of the modal to close
     */
    ModalService.prototype.close = function (id) {
        // close modal specified by id
        var modal = this.get(id);
        modal.record = null;
        modal.close();
    };
    /**
     * Retrieves a modal from the service
     * @param {string} id Unique identifier of the modal to retrieve
     */
    ModalService.prototype.get = function (id) {
        return _.find(this.modals, function (o) { return o.id == id; });
    };
    return ModalService;
}());
ModalService = __decorate([
    core_1.Injectable()
], ModalService);
exports.ModalService = ModalService;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var pagination_model_1 = __webpack_require__(11);
/**
 * Base class for components accessible by authenticated users
 */
var AuthenticatedComponentBase = (function () {
    function AuthenticatedComponentBase(modalService, notificationService, stateService) {
        this.modalService = modalService;
        this.notificationService = notificationService;
        this.stateService = stateService;
    }
    AuthenticatedComponentBase.prototype.ngOnInit = function () {
        this.currentUser = this.stateService.currentUser;
    };
    /**
     * Method for getting pagination out of a Response object
     * @param {Response} response Response object to pull pagination from
     */
    AuthenticatedComponentBase.prototype.getPagination = function (response) {
        return new pagination_model_1.Pagination(response);
    };
    /**
     * Calls ModalService to open modal window
     * @param {string} id Name of the modal to open
     */
    AuthenticatedComponentBase.prototype.openModal = function (id) {
        this.modalService.open(id);
    };
    /**
     * Calls ModalService to close modal window
     * @param {string} id Name of the modal to close
     */
    AuthenticatedComponentBase.prototype.closeModal = function (id) {
        this.modalService.close(id);
    };
    return AuthenticatedComponentBase;
}());
exports.AuthenticatedComponentBase = AuthenticatedComponentBase;


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(346);

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var DataTableConfig = (function () {
    function DataTableConfig(init) {
        this.entityTypeName = "entities";
        this.showPaging = true;
        this.showPager = true;
        this.sortDirection = SortDirection.asc;
        this.sortColumn = 'id';
        this.columns = new Array();
        Object.assign(this, init);
    }
    return DataTableConfig;
}());
exports.DataTableConfig = DataTableConfig;
var DataTableColumn = (function () {
    function DataTableColumn(init) {
        this.allowSorting = true;
        this.allowDownloadFile = false;
        this.allowSelect = false;
        Object.assign(this, init);
    }
    return DataTableColumn;
}());
exports.DataTableColumn = DataTableColumn;
var SortDirection;
(function (SortDirection) {
    SortDirection[SortDirection["asc"] = 0] = "asc";
    SortDirection[SortDirection["desc"] = 1] = "desc";
})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));


/***/ }),
/* 9 */
/***/ (function(module, exports) {

module.exports = vendor_a41749468b426a40b415;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var state_service_1 = __webpack_require__(2);
/**
 * Base class for services used by other services accessible after authentication
 */
var AuthenticatedServiceBase = (function () {
    function AuthenticatedServiceBase(API_BASE, API_VERSION, http, stateService) {
        this.http = http;
        this.stateService = stateService;
        this.headers = new http_1.Headers();
        this.headers.append("content-type", "application/json");
        this.headers.append("api-version", API_VERSION);
        this.apiUrl = API_BASE + '/api';
    }
    /**
     * Performs a GET request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {DataTableConfig} [config] Optional configuration for data tables
     * @param {Pagination} [pagination] Optional pagination info for data tables
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.get = function (url, config, pagination, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            var requestUrl = _this.apiUrl + url;
            var query = '';
            if (pagination) {
                query = query + '?pageIndex=' + pagination.pageIndex + '&pageSize=' + pagination.pageSize;
            }
            if (config) {
                query = query + (query.length > 0 ? '&' : '?') + 'sortBy=' + config.sortColumn + '&sortDirection=' + (config.sortDirection == 0 ? 'asc' : 'desc');
                if (config.filter) {
                    var filterRequest = config.filter();
                    if (filterRequest) {
                        query = query + '&filter=' + filterRequest;
                    }
                }
            }
            return _this.http
                .get(requestUrl + query, { headers: authHeaders });
        });
    };
    /**
     * Performs a PATCH request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {any} body Object to pass in body of request
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.patch = function (url, body, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            return _this.http
                .patch(_this.apiUrl + url, body, { headers: authHeaders });
        });
    };
    /**
     * Performs a POST request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {any} body Object to pass in body of request
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.post = function (url, body, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            return _this.http
                .post(_this.apiUrl + url, body, { headers: authHeaders });
        });
    };
    /**
     * Performs a PUT request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {any} body Object to pass in body of request
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.put = function (url, body, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            return _this.http
                .put(_this.apiUrl + url, body, { headers: authHeaders });
        });
    };
    /**
     * Performs a PUT request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {any} body Object to pass in body of request
     * @param {any} file Object to pass in body of request
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.putWithFile = function (url, body, file, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            authHeaders.delete('content-type');
            var formData = new FormData();
            formData.append('model', body);
            formData.append('file', file);
            return _this.http
                .put(_this.apiUrl + url, formData, { headers: authHeaders });
        });
    };
    /**
     * Performs a DELETE request on the provided URL and appends JWT to the header.
     * @param {string} url URL to call
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.delete = function (url, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            return _this.http
                .delete(_this.apiUrl + url, { headers: authHeaders });
        });
    };
    /**
     * Performs a POST request on the provided URL, appends JWT to the header and includes
     * the provided file.
     * @param {string} url URL to call
     * @param {any} file File to upload with request
     * @param {Headers} [headers = new Headers] Optional headers to include in request
     */
    AuthenticatedServiceBase.prototype.file = function (url, file, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            authHeaders.delete('content-type');
            var formData = new FormData();
            formData.append('file', file);
            return _this.http
                .post(_this.apiUrl + url, formData, { headers: authHeaders });
        });
    };
    AuthenticatedServiceBase.prototype.DownloadFile = function (url, filetype, headers) {
        var _this = this;
        if (headers === void 0) { headers = new http_1.Headers(); }
        return this.stateService.getAuthHeader()
            .map(function (res) { return res; })
            .flatMap(function (authHeaders) {
            var requestUrl = _this.apiUrl + url;
            headers.forEach(function (val, name) { return authHeaders.append(name, val[0]); });
            var options = new http_1.RequestOptions({ headers: authHeaders, responseType: http_1.ResponseContentType.Blob });
            return _this.http
                .get(requestUrl, options).map(function (res) {
                return new Blob([res.blob()], { type: filetype });
            });
        });
    };
    return AuthenticatedServiceBase;
}());
AuthenticatedServiceBase = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], AuthenticatedServiceBase);
exports.AuthenticatedServiceBase = AuthenticatedServiceBase;


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Pagination = (function () {
    function Pagination(response) {
        this.pageSize = 20;
        this.pageIndex = 0;
        if (response) {
            var headers = response.headers;
            if (headers.get('X-Pagination') != null) {
                var paginationHeader = JSON.parse(headers.get('X-Pagination'));
                this.totalCount = paginationHeader.totalCount;
                this.pageSize = paginationHeader.pageSize;
                this.pageIndex = paginationHeader.pageIndex;
                this.totalPages = paginationHeader.totalPages;
                this.calcStartingRecordNumber();
                this.calcEndingRecordNumber();
            }
        }
    }
    Pagination.prototype.calcStartingRecordNumber = function () {
        this.startingRecordNumber = (this.pageIndex * this.pageSize) + 1;
    };
    Pagination.prototype.calcEndingRecordNumber = function () {
        var maxCurrentPageCount = (this.pageIndex * this.pageSize) + this.pageSize;
        this.endingRecordNumber = Math.min(this.totalCount, maxCurrentPageCount);
    };
    return Pagination;
}());
exports.Pagination = Pagination;


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The client service is used to communicate with the API in handling
 * all transactions related to clients.
 */
var ClientService = (function (_super) {
    __extends(ClientService, _super);
    function ClientService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/clients';
        return _this;
    }
    /**
     * Gets all clients optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    ClientService.prototype.getClients = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific client from the API based on the provided id
     * @param {number} id Unique identifier of the client to retrieve
     */
    ClientService.prototype.getClient = function (clientId) {
        return this.get(this.baseUrl + '/' + clientId);
    };
    /**
     * Saves or creates an client depending on whether the client.id is specified and greater than zero
     * @param {Client} client The client object to save
     */
    ClientService.prototype.saveClient = function (client) {
        var body = JSON.stringify(client);
        // no client.id means we should add the client.
        if (client.id == null || client.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + client.id, body);
        }
    };
    /**
     * Deletes the client identified by the provided id
     * @param {number} clientId Unique identifier of the client to delete
     */
    ClientService.prototype.deleteClient = function (clientId) {
        return this.delete(this.baseUrl + '/' + clientId);
    };
    ClientService.prototype.getTransactions = function (clientId, config, pagination) {
        return this.get(this.baseUrl + '/' + clientId + '/transactions', config, pagination);
    };
    /* locations */
    ClientService.prototype.getLocations = function (clientId, config, pagination) {
        return this.get(this.baseUrl + '/' + clientId + '/locations', config, pagination);
    };
    ClientService.prototype.getLocation = function (clientId, locationId) {
        return this.get(this.baseUrl + '/' + clientId + '/locations/' + locationId);
    };
    ClientService.prototype.saveLocation = function (clientId, location) {
        var body = JSON.stringify(location);
        // no location.id means we should add the location.
        if (location.id == null || location.id == 0) {
            return this.post(this.baseUrl + '/' + clientId + '/locations/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + clientId + '/locations/' + location.id, body);
        }
    };
    ClientService.prototype.deleteLocation = function (clientId, locationId) {
        return this.delete(this.baseUrl + '/' + clientId + '/locations/' + locationId);
    };
    /* jobs */
    ClientService.prototype.getJobs = function (clientId, config, pagination) {
        return this.get(this.baseUrl + '/' + clientId + '/jobs', config, pagination);
    };
    ClientService.prototype.getJob = function (clientId, jobId) {
        return this.get(this.baseUrl + '/' + clientId + '/jobs/' + jobId);
    };
    ClientService.prototype.saveJob = function (clientId, job) {
        var body = JSON.stringify(job);
        // no job.id means we should add the job.
        if (job.id == null || job.id == 0) {
            return this.post(this.baseUrl + '/' + clientId + '/jobs/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + clientId + '/jobs/' + job.id, body);
        }
    };
    ClientService.prototype.deleteJob = function (clientId, jobId) {
        return this.delete(this.baseUrl + '/' + clientId + '/jobs/' + jobId);
    };
    /* contacts */
    ClientService.prototype.getContacts = function (clientId, config, pagination) {
        return this.get(this.baseUrl + '/' + clientId + '/contacts', config, pagination);
    };
    ClientService.prototype.getContact = function (clientId, contactId) {
        return this.get(this.baseUrl + '/' + clientId + '/contacts/' + contactId);
    };
    ClientService.prototype.saveContact = function (clientId, contact) {
        var body = JSON.stringify(contact);
        // no contact.id means we should add the contact.
        if (contact.id == null || contact.id == 0) {
            return this.post(this.baseUrl + '/' + clientId + '/contacts/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + clientId + '/contacts/' + contact.id, body);
        }
    };
    ClientService.prototype.deleteContact = function (clientId, contactId) {
        return this.delete(this.baseUrl + '/' + clientId + '/contacts/' + contactId);
    };
    return ClientService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
ClientService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], ClientService);
exports.ClientService = ClientService;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The job service is used to communicate with the API in handling
 * all transactions related to jobs.
 */
var JobServices = (function (_super) {
    __extends(JobServices, _super);
    function JobServices(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/jobs';
        return _this;
    }
    /**
     * Gets all jobs optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    JobServices.prototype.getJobs = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific job from the API based on the provided id
     * @param {number} id Unique identifier of the job to retrieve
     */
    JobServices.prototype.getJob = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates an job depending on whether the job.id is specified and greater than zero
     * @param {Job} job The job object to save
     */
    JobServices.prototype.saveJob = function (job) {
        var body = JSON.stringify(job);
        // no job.id means we should add the job.
        if (job.id == null || job.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + job.id, body);
        }
    };
    /**
     * Deletes the job identified by the provided id
     * @param {number} id Unique identifier of the job to delete
     */
    JobServices.prototype.deleteJob = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    /**
     * Gets transactions associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    JobServices.prototype.getTransactions = function (jobId, config, pagination) {
        return this.get(this.baseUrl + '/' + jobId + '/transactions', config, pagination);
    };
    /**
    * get job rates
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.getJobServices = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/rates');
    };
    /**
     * save job rate
     * @param {number} jobid - Unique identifier of the job
     * @param {JobService} JobService - JobService object for job rate data
     */
    JobServices.prototype.saveJobService = function (jobid, JobService) {
        var body = JSON.stringify(JobService);
        // no employee.id means we should add the employee.
        if (JobService.id == null || JobService.id == 0) {
            return this.post(this.baseUrl + '/' + jobid + '/rates', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobid + '/rates/' + JobService.id, body);
        }
    };
    /**
    * remove job rate
    * @param {number} jobid - Unique identifier of the job
    * @param {number} JobServiceId - Unique identifier of the job rate
    */
    JobServices.prototype.removeJobService = function (jobid, JobServiceId) {
        return this.delete(this.baseUrl + '/' + jobid + '/rates/' + JobServiceId);
    };
    /**
    * create job request if job status is new
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.createJobRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/request');
    };
    /**
    * approve job request if job status is requested
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.approveJobRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/approve');
    };
    /**
    * decline job request if job status is requested
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.declineJobRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/decline');
    };
    /**
    * create quote request if job status is quote needed
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.createQuoteRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/quote/request');
    };
    /**
    * approve quote request if job status is quote pending
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.approveQuoteRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/quote/approve');
    };
    /**
    * decline quote request if job status is quote pending
    * @param {number} jobid - Unique identifier of the job
    */
    JobServices.prototype.declineQuoteRequest = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/quote/decline');
    };
    /**
     * Retrieves the HelloSign URL for e-signing the quote PDF
     * @param {number} jobid - Unique identifier of the job
     */
    JobServices.prototype.fetchQuoteESignUrl = function (jobid) {
        return this.get(this.baseUrl + '/' + jobid + '/quote/esign');
    };
    /**
    * get job documents by job id
    * @param {number} jobid - Unique identifier of the job
    * @param {DataTableConfig?} config - Configuration object of data table layout
    * @param {Pagination?} pagination - Pagination object of data table layout
    */
    JobServices.prototype.getJobDocuments = function (jobid, config, pagination) {
        return this.get(this.baseUrl + '/' + jobid + '/documents', config, pagination);
    };
    /**
    * download document for job by document id
    * @param {number} jobid - Unique identifier of the job
    * @param {number} documentId - Unique identifier of the document
    */
    JobServices.prototype.fetchDocument = function (jobid, documentId) {
        return this.DownloadFile(this.baseUrl + '/' + jobid + '/documents/' + documentId + '/download', 'application/ pdf');
    };
    /**
   * get job Closure
   * @param {number} jobId - Unique identifier of the job
   */
    JobServices.prototype.getJobClosure = function (jobId) {
        return this.get(this.baseUrl + '/' + jobId + '/jobclosure');
    };
    /**
   * save job closure
   * @param {number} jobId - Unique identifier of the job
   * @param {JobClosure} JobClosure - JobClosure object for job rate data
   */
    JobServices.prototype.saveJobClosure = function (jobId, jobClosure) {
        var body = JSON.stringify(jobClosure);
        // no employee.id means we should add the employee.
        if (jobClosure.id == null || jobClosure.id == 0) {
            return this.post(this.baseUrl + '/' + jobId + '/jobclosure', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobId + '/jobclosure/' + jobClosure.id, body);
        }
    };
    /**
   * request job closure
   * @param {number} jobId - Unique identifier of the job
   * @param {number} jobClosureId - Unique identifier of the job closure
   */
    JobServices.prototype.requestJobClosure = function (jobId, jobClosureId) {
        return this.get(this.baseUrl + '/' + jobId + '/jobclosure/' + jobClosureId + '/request');
    };
    /**
     * approve job closure
     * @param {number} jobId - Unique identifier of the job
     * @param {number} jobClosureId - Unique identifier of the job closure
     */
    JobServices.prototype.approveJobClosure = function (jobId, jobClosureId) {
        return this.get(this.baseUrl + '/' + jobId + '/jobclosure/' + jobClosureId + '/approve');
    };
    /**
   * decline job closure
   * @param {number} jobId - Unique identifier of the job
   * @param {number} jobClosureId - Unique identifier of the job closure
   */
    JobServices.prototype.declineJobClosure = function (jobId, jobClosureId) {
        return this.get(this.baseUrl + '/' + jobId + '/jobclosure/' + jobClosureId + '/decline');
    };
    return JobServices;
}(authenticated_service_base_1.AuthenticatedServiceBase));
JobServices = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], JobServices);
exports.JobServices = JobServices;


/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Job = (function () {
    function Job() {
    }
    return Job;
}());
exports.Job = Job;
var jobstatuses;
(function (jobstatuses) {
    jobstatuses[jobstatuses["New"] = 0] = "New";
    jobstatuses[jobstatuses["Requested"] = 10] = "Requested";
    jobstatuses[jobstatuses["QuoteNeeded"] = 40] = "QuoteNeeded";
    jobstatuses[jobstatuses["QuotePending"] = 45] = "QuotePending";
    jobstatuses[jobstatuses["Active"] = 100] = "Active";
})(jobstatuses = exports.jobstatuses || (exports.jobstatuses = {}));
var jobtypes;
(function (jobtypes) {
    jobtypes[jobtypes["Sort_Rework"] = 10] = "Sort_Rework";
    jobtypes[jobtypes["Sort"] = 20] = "Sort";
    jobtypes[jobtypes["Rework"] = 30] = "Rework";
    jobtypes[jobtypes["Representation"] = 40] = "Representation";
})(jobtypes = exports.jobtypes || (exports.jobtypes = {}));
exports.jobStatuses = [
    { 'id': 0, 'name': 'New' },
    { 'id': 10, 'name': 'Requested' },
    { 'id': 40, 'name': 'Quote Needed' },
    { 'id': 45, 'name': 'Quote Pending' },
    { 'id': 100, 'name': 'Active' }
];
exports.jobTypes = [
    { 'id': 10, 'name': 'Sort/Rework' },
    { 'id': 20, 'name': 'Sort' },
    { 'id': 30, 'name': 'Rework' },
    { 'id': 40, 'name': 'Representation' }
];
exports.jobFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'jobs',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'jobCode',
            columnHeader: 'Code',
            routerLink: function (record) {
                return ['/jobs', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'jobTypeId',
            columnHeader: 'Type',
            formatter: function (record) {
                if (record.jobTypeId) {
                    var val = exports.jobTypes.filter(function (o) {
                        return o.id == record.jobTypeId;
                    });
                    if (val) {
                        return val[0].name;
                    }
                }
                return '';
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'jobStatusId',
            columnHeader: 'Status',
            formatter: function (record) {
                if (record.jobStatusId != null) {
                    var val = exports.jobStatuses.filter(function (o) {
                        return o.id == record.jobStatusId;
                    });
                    if (val) {
                        return val[0].name;
                    }
                }
                return '';
            }
        })
    ]
});


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Transaction = (function () {
    function Transaction() {
    }
    return Transaction;
}());
exports.Transaction = Transaction;
exports.transactionFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'transactions',
    sortColumn: 'transactionDate',
    sortDirection: data_table_config_model_1.SortDirection.desc,
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'transactionDate',
            columnHeader: 'Date'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'description',
            columnHeader: 'Description'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'userId',
            columnHeader: 'User'
        })
    ]
});


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var User = (function () {
    function User() {
    }
    return User;
}());
exports.User = User;
var usertypes;
(function (usertypes) {
    usertypes[usertypes["Employee"] = 1] = "Employee";
    usertypes[usertypes["Contact"] = 2] = "Contact";
})(usertypes = exports.usertypes || (exports.usertypes = {}));


/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var common_1 = __webpack_require__(54);
var forms_1 = __webpack_require__(22);
var http_1 = __webpack_require__(7);
var router_1 = __webpack_require__(3);
var ngx_perfect_scrollbar_1 = __webpack_require__(366);
var time_ago_pipe_1 = __webpack_require__(354);
var phoneNumber_pipe_1 = __webpack_require__(281);
var shortDescription_pipe_1 = __webpack_require__(282);
var address_component_1 = __webpack_require__(259);
var contact_component_1 = __webpack_require__(260);
var job_add_component_1 = __webpack_require__(261);
var location_component_1 = __webpack_require__(262);
var file_focus_component_1 = __webpack_require__(258);
var modal_component_1 = __webpack_require__(264);
var data_table_component_1 = __webpack_require__(257);
var in_progress_directive_1 = __webpack_require__(272);
var in_progress_component_1 = __webpack_require__(90);
var input_focus_component_1 = __webpack_require__(263);
var textarea_focus_component_1 = __webpack_require__(269);
var password_focus_component_1 = __webpack_require__(267);
var pagination_component_1 = __webpack_require__(266);
var pagination_summary_component_1 = __webpack_require__(265);
var permission_directive_1 = __webpack_require__(273);
var select_focus_component_1 = __webpack_require__(268);
var timeline_component_1 = __webpack_require__(271);
var timeline_item_component_1 = __webpack_require__(270);
var auth_guard_1 = __webpack_require__(21);
var PERFECT_SCROLLBAR_CONFIG = {
    suppressScrollX: true
};
var SharedModule = (function () {
    function SharedModule() {
    }
    return SharedModule;
}());
SharedModule = __decorate([
    core_1.NgModule({
        imports: [
            common_1.CommonModule,
            forms_1.FormsModule,
            http_1.HttpModule,
            router_1.RouterModule,
            ngx_perfect_scrollbar_1.PerfectScrollbarModule.forRoot(PERFECT_SCROLLBAR_CONFIG)
        ],
        declarations: [
            phoneNumber_pipe_1.PhoneNumberPipe,
            shortDescription_pipe_1.ShortDescriptionPipe,
            time_ago_pipe_1.TimeAgoPipe,
            address_component_1.AddressComponent,
            contact_component_1.ContactComponent,
            job_add_component_1.JobAddComponent,
            location_component_1.LocationComponent,
            permission_directive_1.NoPermissionDirective,
            file_focus_component_1.FileFocusComponent,
            data_table_component_1.DataTableComponent,
            in_progress_directive_1.InProgressDirective,
            in_progress_component_1.InProgressComponent,
            input_focus_component_1.InputFocusComponent,
            modal_component_1.ModalComponent,
            pagination_component_1.PaginationComponent,
            pagination_summary_component_1.PaginationSummaryComponent,
            password_focus_component_1.PasswordFocusComponent,
            permission_directive_1.PermissionDirective,
            select_focus_component_1.SelectFocusComponent,
            textarea_focus_component_1.TextAreaFocusComponent,
            timeline_component_1.TimeLineComponent,
            timeline_item_component_1.TimeLineItemComponent
        ],
        entryComponents: [
            in_progress_component_1.InProgressComponent
        ],
        exports: [
            common_1.CommonModule,
            forms_1.FormsModule,
            http_1.HttpModule,
            router_1.RouterModule,
            ngx_perfect_scrollbar_1.PerfectScrollbarModule,
            address_component_1.AddressComponent,
            contact_component_1.ContactComponent,
            job_add_component_1.JobAddComponent,
            location_component_1.LocationComponent,
            phoneNumber_pipe_1.PhoneNumberPipe,
            shortDescription_pipe_1.ShortDescriptionPipe,
            time_ago_pipe_1.TimeAgoPipe,
            in_progress_directive_1.InProgressDirective,
            input_focus_component_1.InputFocusComponent,
            permission_directive_1.PermissionDirective,
            permission_directive_1.NoPermissionDirective,
            file_focus_component_1.FileFocusComponent,
            data_table_component_1.DataTableComponent,
            modal_component_1.ModalComponent,
            pagination_component_1.PaginationComponent,
            pagination_summary_component_1.PaginationSummaryComponent,
            password_focus_component_1.PasswordFocusComponent,
            select_focus_component_1.SelectFocusComponent,
            textarea_focus_component_1.TextAreaFocusComponent,
            timeline_component_1.TimeLineComponent,
            timeline_item_component_1.TimeLineItemComponent
        ],
        providers: [
            auth_guard_1.AuthGuard
        ]
    })
], SharedModule);
exports.SharedModule = SharedModule;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(56);

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The employee service is used to communicate with the API in handling
 * all transactions related to employees.
 */
var EmployeeService = (function (_super) {
    __extends(EmployeeService, _super);
    function EmployeeService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/employees';
        return _this;
    }
    /**
     * Gets all employees optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    EmployeeService.prototype.getEmployees = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific employee from the API based on the provided id
     * @param {number} id Unique identifier of the employee to retrieve
     */
    EmployeeService.prototype.getEmployee = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates an employee depending on whether the employee.id is specified and greater than zero
     * @param {Employee} employee The employee object to save
     */
    EmployeeService.prototype.saveEmployee = function (employee) {
        var body = JSON.stringify(employee);
        // no employee.id means we should add the employee.
        if (employee.id == null || employee.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + employee.id, body);
        }
    };
    /**
     * Deletes the employee identified by the provided id
     * @param {number} id Unique identifier of the employee to delete
     */
    EmployeeService.prototype.deleteEmployee = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    /**
     * Gets all transactions related to the employee
     * @param {number} id Unique identifier of the employee
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    EmployeeService.prototype.getTransactions = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/transactions', config, pagination);
    };
    /**
     * Gets the address associated with the employee
     * @param {number} id Unique identifier of the employee
     */
    EmployeeService.prototype.getAddress = function (id) {
        return this.get(this.baseUrl + '/' + id + '/address');
    };
    /**
     * Saves or creates an address depending on whether the address.id is specified and greater than zero
     * @param {number} id Unique identifier of the employee to save the address to
     * @param {Address} address The address object to save
     */
    EmployeeService.prototype.saveAddress = function (id, address) {
        var body = JSON.stringify(address);
        // no address.id means we should add the address.
        if (address.id == null || address.id == 0) {
            return this.post(this.baseUrl + '/' + id + '/address', body);
        }
        else {
            return this.put(this.baseUrl + '/' + id + '/address', body);
        }
    };
    /**
     * Gets the user account associated with the employee
     * @param {number} id Unique identifier of the employee
     */
    EmployeeService.prototype.getUser = function (id) {
        return this.get(this.baseUrl + '/' + id + '/user');
    };
    /**
     * Saves or creates an user depending on whether the user.id is specified and greater than zero
     * @param {number} id Unique identifier of the employee to save the user to
     * @param {User} user The user object to save
     */
    EmployeeService.prototype.saveUser = function (id, user) {
        var body = JSON.stringify(user);
        // no location.id means we should add the location.
        if (user.id == null || user.id == 0) {
            return this.post(this.baseUrl + '/' + id + '/user', body);
        }
        else {
            return this.put(this.baseUrl + '/' + id + '/user', body);
        }
    };
    /**
     * Gets the user client location associated with the user
     * @param {number} id Unique identifier of the user
     */
    EmployeeService.prototype.getUserclientlocation = function (userId) {
        return this.get(this.baseUrl + '/userclientlocation/' + userId);
    };
    /**
     * Creates an userclientlocation
     * @param {UserClientLocation} userClientLocation The userclientlocation object to save
     */
    EmployeeService.prototype.createUserClientLocation = function (userClientLocation) {
        var body = JSON.stringify(userClientLocation);
        return this.post(this.baseUrl + '/userclientlocation', body);
    };
    /**
     * Creates an userclientlocation
     * @param {Array<UserClientLocation>} userClientLocation The userclientlocation object to save
     */
    EmployeeService.prototype.createUserClientLocations = function (userClientLocations) {
        var body = JSON.stringify(userClientLocations);
        return this.post(this.baseUrl + '/userclientlocations', body);
    };
    /**
     * Deletes an userclientlocation by client
     * @param {Array<number>} clients Array of unique identifier of the userclientlocation to remove
     * @param {number} userId Unique identifier of the userclientlocation to remove
     */
    EmployeeService.prototype.RemoveUserClientLocationByClient = function (clients, userId) {
        return this.post(this.baseUrl + '/userclientlocation/client/' + userId, clients);
    };
    /**
     * Deletes an userclientlocation by location
     * @param {Array<number>} locations Array of unique identifier of the userclientlocation to remove
     * @param {number} userId Unique identifier of the userclientlocation to remove
     */
    EmployeeService.prototype.RemoveUserClientLocationByLocation = function (locations, userId) {
        return this.post(this.baseUrl + '/userclientlocation/location/' + userId, locations);
    };
    /**
     * Deletes an userclientlocation
     * @param {number} userId Unique identifier of the userclientlocation to remove
     */
    EmployeeService.prototype.RemoveUserClientLocationByUser = function (userId) {
        return this.delete(this.baseUrl + '/userclientlocation' + '/' + userId);
    };
    return EmployeeService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
EmployeeService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], EmployeeService);
exports.EmployeeService = EmployeeService;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var setting_service_1 = __webpack_require__(26);
var state_service_1 = __webpack_require__(2);
var LayoutComponent = (function () {
    function LayoutComponent(stateService, settingService) {
        this.stateService = stateService;
        this.settingService = settingService;
    }
    return LayoutComponent;
}());
LayoutComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(325)
    }),
    __metadata("design:paramtypes", [state_service_1.StateService,
        setting_service_1.SettingService])
], LayoutComponent);
exports.LayoutComponent = LayoutComponent;


/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var state_service_1 = __webpack_require__(2);
var AuthGuard = (function () {
    function AuthGuard(router, stateService) {
        this.router = router;
        this.stateService = stateService;
    }
    AuthGuard.prototype.canActivate = function (route, state) {
        if (this.stateService.currentUser) {
            if (route.data && route.data.menuItem) {
                var menuItem = route.data.menuItem;
                return this.stateService.canTraverseRoute(menuItem);
            }
            return true;
        }
        // not logged in so redirect to login page with the return url
        this.router.navigate(['/auth/login'], { queryParams: { returnUrl: state.url } });
        return false;
    };
    AuthGuard.prototype.canActivateChild = function (route, state) {
        return this.canActivate(route, state);
    };
    return AuthGuard;
}());
AuthGuard = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [router_1.Router,
        state_service_1.StateService])
], AuthGuard);
exports.AuthGuard = AuthGuard;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(30);

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(654);

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The AR terms service is used to communicate with the API in handling
 * all transactions related to accounts receivable terms.
 */
var ARTermService = (function (_super) {
    __extends(ARTermService, _super);
    function ARTermService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/arterms';
        return _this;
    }
    /**
     * Gets all AR terms optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    ARTermService.prototype.getARTerms = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific AR term from the API based on the provided id
     * @param {number} id Unique identifier of the AR term to retrieve
     */
    ARTermService.prototype.getARTerm = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates an AR term depending on whether the arTerm.id is specified and greater than zero
     * @param {ARTerm} arTerm The AR term object to save
     */
    ARTermService.prototype.saveARTerm = function (arTerm) {
        var body = JSON.stringify(arTerm);
        // no arTerm.id means we should add the ARTerm.
        if (arTerm.id == null || arTerm.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + arTerm.id, body);
        }
    };
    /**
     * Deletes the AR term identified by the provided id
     * @param {number} id Unique identifier of the AR term to delete
     */
    ARTermService.prototype.deleteARTerm = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    return ARTermService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
ARTermService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], ARTermService);
exports.ARTermService = ARTermService;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The role service is used to communicate with the API in handling
 * all transactions related to roles.
 */
var RoleService = (function (_super) {
    __extends(RoleService, _super);
    function RoleService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/roles';
        return _this;
    }
    /**
     * Gets all roles optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    RoleService.prototype.getRoles = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific role from the API based on the provided id
     * @param {number} id Unique identifier of the role to retrieve
     */
    RoleService.prototype.getRole = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates a role depending on whether the role.id is specified and greater than zero
     * @param {Role} role The role object to save
     */
    RoleService.prototype.saveRole = function (role) {
        var body = JSON.stringify(role);
        // no role.id means we should add the role.
        if (role.id == null || role.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + role.id, body);
        }
    };
    /**
     * Deletes the role identified by the provided id
     * @param {number} id Unique identifier of the role to delete
     */
    RoleService.prototype.deleteRole = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    /**
     * Gets all users associated with the role
     * @param {number} id Unique identifier of the role
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    RoleService.prototype.getUsers = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/users', config, pagination);
    };
    /**
     * Gets all permissions associated with the role
     * @param {number} id Unique identifier of the role
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    RoleService.prototype.getPermissions = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/permissions', config, pagination);
    };
    /**
     * Adds a permission to the role
     * @param {number} roleId Unique identifier of the role to add the permission to
     * @param {Permission} permission The permission object to save
     */
    RoleService.prototype.addPermission = function (roleId, permission) {
        var body = JSON.stringify(permission);
        return this.post(this.baseUrl + '/' + roleId + '/permissions', body);
    };
    /**
     * Removes a permission from the role
     * @param {number} roleId Unique identifier of the role to remove the permission from
     * @param {number} permissionId Unique identifier of the permission to remove
     */
    RoleService.prototype.deletePermission = function (roleId, permissionId) {
        return this.delete(this.baseUrl + '/' + roleId + '/permissions/' + permissionId);
    };
    return RoleService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
RoleService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], RoleService);
exports.RoleService = RoleService;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
/**
 * The setting service stores a users UI settings
 */
var SettingService = (function () {
    function SettingService() {
        this.layout = {
            isCollapsed: false,
            isPinned: true
        };
    }
    /**
     * Gets a setting based on the provided name
     * @param {string} name Unique name of the setting to retrieve
     */
    SettingService.prototype.getSetting = function (name) {
        return name ? this.layout[name] : this.layout;
    };
    /**
     * Saves a setting based on the provided name
     * @param {string} name Unique name of the setting to retrieve
     * @param {any} value Value of the setting
     */
    SettingService.prototype.setSetting = function (name, value) {
        if (typeof this.layout[name] !== 'undefined') {
            return this.layout[name] = value;
        }
    };
    /**
     * Toggles the setting (Only usable on boolean settings)
     * @param {string} name Unique name of the setting to toggle
     */
    SettingService.prototype.toggleSetting = function (name) {
        return this.setSetting(name, !this.getSetting(name));
    };
    return SettingService;
}());
SettingService = __decorate([
    core_1.Injectable(),
    __metadata("design:paramtypes", [])
], SettingService);
exports.SettingService = SettingService;


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The workinstruction service is used to communicate with the API in handling
 * all transactions related to workinstructions.
 */
var WorkInstructionService = (function (_super) {
    __extends(WorkInstructionService, _super);
    function WorkInstructionService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/jobs';
        return _this;
    }
    /**
     * Gets work instructions associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    WorkInstructionService.prototype.getWorkInstructions = function (jobId, config, pagination) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions', config, pagination);
    };
    /**
     * Gets work instruction associated with the job specified by the jobId and workinstructionId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
    */
    WorkInstructionService.prototype.getWorkInstruction = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId);
    };
    /**
     * Clones workinstruction for workinstruction by the workinstructionid and jobid
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     */
    WorkInstructionService.prototype.cloneWorkInstruction = function (jobId, workInstructionId) {
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/clone', null);
    };
    /**
     * Gets transactions associated with the workinstruction specified by the jobId and workinstructionId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    WorkInstructionService.prototype.getTransactions = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/transactions', config, pagination);
    };
    /**
     * Gets defects associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    WorkInstructionService.prototype.getDefects = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects', config, pagination);
    };
    /**
     * Gets defect associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} defectId Unique identifier of the workinstructiondefect
     */
    WorkInstructionService.prototype.getDefect = function (jobId, workInstructionId, defectId) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects/' + defectId);
    };
    /**
    * Adds a defect to the job
    * @param {number} jobId Unique identifier of the job
    * @param {number} workInstructionId Unique identifier of the workinstruction
    * @param {WorkInstructionDefect} defect Defect to add to the job
    */
    WorkInstructionService.prototype.addDefect = function (jobId, workInstructionId, defect) {
        var body = JSON.stringify(defect);
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects', body);
    };
    /**
     * Updates a defect to the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {WorkInstructionDefect} defect defect to add to the job
     * @param {any} file file of defect to upload
     */
    WorkInstructionService.prototype.saveDefect = function (jobId, workInstructionId, defect, file) {
        var body = JSON.stringify(defect);
        return this.putWithFile(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects/' + defect.id, body, file);
    };
    /**
     * Removes a defect from the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} defectId Unique identifier of the defect to remove
     */
    WorkInstructionService.prototype.removeDefect = function (jobId, workInstructionId, defectId) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects/' + defectId);
    };
    /**
     * Gets defects associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    WorkInstructionService.prototype.getReworks = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/reworks', config, pagination);
    };
    /**
   * Adds a rework to the job
   * @param {number} jobId Unique identifier of the job
   * @param {number} workInstructionId Unique identifier of the workinstruction
   * @param {WorkInstructionRework} rework Rework to add to the job
   */
    WorkInstructionService.prototype.addRework = function (jobId, workInstructionId, rework) {
        var body = JSON.stringify(rework);
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/reworks', body);
    };
    /**
     * Updates a rework to the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {WorkInstructionRework} rework Rework to add to the job
     */
    WorkInstructionService.prototype.saveRework = function (jobId, workInstructionId, rework) {
        var body = JSON.stringify(rework);
        return this.put(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/reworks/' + rework.id, body);
    };
    /**
     * Removes a defect from the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} reworkId Unique identifier of the rework to remove
     */
    WorkInstructionService.prototype.removeRework = function (jobId, workInstructionId, reworkId) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/reworks/' + reworkId);
    };
    /**
  * Gets step associated with the job specified by the jobId
  * @param {number} jobId Unique identifier of the job
  * @param {number} workInstructionId Unique identifier of the workinstruction
  * @param {DataTableConfig} [config] Optional configuration settings for a data table
  * @param {Pagination} [pagination] Optional pagination data for the request
  */
    WorkInstructionService.prototype.getSteps = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/steps', config, pagination);
    };
    /**
     * Gets step associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} stepId Unique identifier of the workinstructiondefect
     */
    WorkInstructionService.prototype.getStep = function (jobId, workInstructionId, stepId) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/steps/' + stepId);
    };
    /**
    * Adds a step to the work instruction
    * @param {number} jobId Unique identifier of the job
    * @param {number} workInstructionId Unique identifier of the workinstruction
    * @param {WorkInstructionDefect} step Step to add to the job
    */
    WorkInstructionService.prototype.addStep = function (jobId, workInstructionId, step) {
        var body = JSON.stringify(step);
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/Steps', body);
    };
    /**
     * Saves the step
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {WorkInstructionStep} step Work instruction step to save
     * @param file image file to upload
     */
    WorkInstructionService.prototype.saveStep = function (jobId, workInstructionId, step, file) {
        var body = JSON.stringify(step);
        return this.putWithFile(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/Steps/' + step.id, body, file);
    };
    /**
     * Removes a step from the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} stepId Unique identifier of the defect to remove
     */
    WorkInstructionService.prototype.removeStep = function (jobId, workInstructionId, stepId) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/Steps/' + stepId);
    };
    /**
     * Clones workinstruction for workinstruction by the workinstructionid and jobid
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {Array<WorkInstructionDefect>} defects List of workinstruction defects
     */
    WorkInstructionService.prototype.updateWorkInstructionDefectSequence = function (jobId, workInstructionId, defects) {
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/defects/sequence', defects);
    };
    /**
    * Clones workinstruction for workinstruction by the workinstructionid and jobid
    * @param {number} jobId Unique identifier of the job
    * @param {number} workInstructionId Unique identifier of the workinstruction
    * @param {Array<WorkInstructionStep>} steps List of workinstruction steps
    */
    WorkInstructionService.prototype.updateWorkInstructionStepSequence = function (jobId, workInstructionId, steps) {
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/steps/sequence', steps);
    };
    /**
     * Gets part numbers associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    WorkInstructionService.prototype.getPartNumbers = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/part-numbers', config, pagination);
    };
    /**
     * Adds a part number to the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {WorkInstructionPartNumber} partNumber Part number to add to the job
     */
    WorkInstructionService.prototype.addPartNumber = function (jobId, workInstructionId, partNumber) {
        var body = JSON.stringify(partNumber);
        return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/part-numbers', body);
    };
    /**
     * Removes a part number from the job
     * @param {number} jobId Unique identifier of the job
     * @param {number} workInstructionId Unique identifier of the workinstruction
     * @param {number} partNumberId Unique identifier of the part number to remove
     */
    WorkInstructionService.prototype.removePartNumber = function (jobId, workInstructionId, partNumberId) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/part-numbers/' + partNumberId);
    };
    /**
   * get job documents by job id
   * @param {number} jobid - Unique identifier of the job
   * @param {number} workInstructionId Unique identifier of the workinstruction
   */
    WorkInstructionService.prototype.getWorkInstructionDocuments = function (jobid, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobid + '/work-instructions/' + workInstructionId + '/documents');
    };
    /**
    * download document for job by document id
    * @param {number} jobid - Unique identifier of the job
    * @param {number} workInstructionId Unique identifier of the workinstruction
    * @param {number} documentId - Unique identifier of the document
    */
    WorkInstructionService.prototype.fetchWorkInstructionDocument = function (jobid, workInstructionId, documentId) {
        return this.DownloadFile(this.baseUrl + '/' + jobid + '/work-instructions/' + workInstructionId + '/documents/' + documentId + '/download', 'application/ pdf');
    };
    /**
     * create work instruction for given job and work instruction id
     * @param jobId
     * @param workInstructionId
     */
    WorkInstructionService.prototype.createWorkInstructionRequest = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/request');
    };
    /**
     * approve work instruction for Job and work instruction
     * @param jobId
     * @param workInstructionId
     */
    WorkInstructionService.prototype.approveWorkInstructionRequest = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/approve');
    };
    /**
     * decline work instruction for Job and work instruction
     * @param jobId
     * @param workInstructionId
     */
    WorkInstructionService.prototype.declineWorkInstructionRequest = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/decline');
    };
    /**
     * Gets all Job Audits
     * @param {number} [jobId] Unique identifier of the job
     * @param {number} [workInstructionId] Unique identifier of the work instruction
     */
    WorkInstructionService.prototype.getJobAudits = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits');
    };
    /**
    * Gets specific Job Audit from the API based on the provided id
    * @param {number} [jobId] Unique identifier of the job
    * @param {number} [workInstructionId] Unique identifier of the work instruction
    * @param {number} [jobAuditId] Unique identifier of the job audit
    */
    WorkInstructionService.prototype.getJobAudit = function (jobId, workInstructionId, jobAuditId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits/' + jobAuditId);
    };
    /**
     * Saves or creates an Job Audit depending on whether the jobAudit.id is specified and greater than zero
     * @param {JobAudit} jobAudit  The Job Audit object to save
     */
    WorkInstructionService.prototype.saveJobAudit = function (jobId, workInstructionId, jobAudit) {
        var body = JSON.stringify(jobAudit);
        // no jobAudit.id means we should add the JobAudit.
        if (jobAudit.id == null || jobAudit.id == 0) {
            return this.post(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits/' + jobAudit.id, body);
        }
    };
    /**
     * Gets all Job Audit Questions
    */
    WorkInstructionService.prototype.getJobAuditQuestions = function () {
        return this.get(this.baseUrl + '/jobauditquestions');
    };
    /**
     * Gets specific Job Audit Responses from the API based on the provided id
     * @param {number} [jobId] Unique identifier of the job
     * @param {number} [workInstructionId] Unique identifier of the work instruction
     * @param {number} [jobAuditId] Unique identifier of the job audit
     */
    WorkInstructionService.prototype.getJobAuditResponses = function (jobId, workInstructionId, jobAuditId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits/' + jobAuditId + '/jobauditresponses');
    };
    /**
    * Saves or creates an Job Audit Response depending on whether the jobAuditResponse.id is specified and greater than zero
    * @param {JobAuditResponse} jobAuditResponse  The Job Audit Response object to save
    */
    WorkInstructionService.prototype.saveJobAuditResponse = function (jobId, workInstructionId, jobAuditId, jobAuditResponse) {
        var body = JSON.stringify(jobAuditResponse);
        // no jobAuditResponse.id means we should add the JobAuditResponse.
        if (jobAuditResponse.id == null || jobAuditResponse.id == 0) {
            return this.post(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits' + jobAuditId + '/jobauditresponses', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits/' + jobAuditId
                + '/jobauditresponses/' + jobAuditResponse.id, body);
        }
    };
    /**
     * Deletes the Job Audit Response identified by the provided id
     * @param {number} [jobId] Unique identifier of the job
     * @param {number} [workInstructionId] Unique identifier of the work instruction
     * @param {number} [jobAuditId] Unique identifier of the job audit
     * @param {number} [jobAuditResponseId] Unique identifier of the Job Audit Response to delete
     */
    WorkInstructionService.prototype.deleteJobAuditResponse = function (jobId, workInstructionId, jobAuditId, jobAuditResponseId) {
        return this.delete(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/jobaudits/' + jobAuditId
            + '/jobauditresponses/' + jobAuditResponseId);
    };
    return WorkInstructionService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
WorkInstructionService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], WorkInstructionService);
exports.WorkInstructionService = WorkInstructionService;


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Address = (function () {
    function Address() {
    }
    return Address;
}());
exports.Address = Address;
exports.addressFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'addresses',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'streetAddress1',
            columnHeader: 'Address',
            allowSelect: true
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'city',
            columnHeader: 'City'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'stateName',
            columnHeader: 'State'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'postalCode',
            columnHeader: 'Postal Code'
        })
    ]
});
exports.adminaddressFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'addresses',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'streetAddress1',
            columnHeader: 'Address',
            routerLink: function (record) {
                return ['/admin/addresses/', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'city',
            columnHeader: 'City'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'postalCode',
            columnHeader: 'Postal Code'
        })
    ]
});


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The address service is used to communicate with the API in handling
 * all transactions related to addresses.
 */
var AddressService = (function (_super) {
    __extends(AddressService, _super);
    function AddressService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/addresses';
        return _this;
    }
    /**
     * Gets all Addresses optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    AddressService.prototype.getAddresses = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Gets all Addresses in a postal code optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    AddressService.prototype.getAddressesByPostalCode = function (postalCode) {
        return this.get(this.baseUrl + '?filter=postalCode eq ' + postalCode);
    };
    /**
     * Gets address specified by the addressId
     * @param {number} addressId Unique identifier of the address
     */
    AddressService.prototype.getAddress = function (addressId) {
        return this.get(this.baseUrl + '/' + addressId);
    };
    /**
     * Saves or creates an address depending on whether the address.id is specified and greater than zero
     * @param {Address} address The address object to save
     */
    AddressService.prototype.saveAddress = function (address) {
        var body = JSON.stringify(address);
        // no address.id means we should add the address.
        if (address.id == null || address.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + address.id, body);
        }
    };
    /**
     * Deletes the address identified by the provided id
     * @param {number} addressId Unique identifier of the address
     */
    AddressService.prototype.deleteAddress = function (addressId) {
        return this.delete(this.baseUrl + '/' + addressId);
    };
    /**
     * Gets pass down logs associated with the address specified by the addressId
     * @param {number} addressId Unique identifier of the address
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    AddressService.prototype.getPassDownLogs = function (addressId, config, pagination) {
        return this.get(this.baseUrl + '/' + addressId + '/passdownlogs', config, pagination);
    };
    /**
     * Gets pass down logs associated with the address specified by the addressId and passDownLogId
     * @param {number} addressId Unique identifier of the job
     * @param {number} passDownLogId Unique identifier of the pass down log
    */
    AddressService.prototype.getPassDownLog = function (addressId, passDownLogId) {
        return this.get(this.baseUrl + '/' + addressId + '/passdownlogs' + passDownLogId);
    };
    /**
     * Saves or creates an Pass Down Log depending on whether the passDownLogId is specified and greater than zero
     * @param {PassDownLog} passDownLog The Pass Down Log object to save
     */
    AddressService.prototype.savePassDownLog = function (addressId, passDownLog) {
        var body = JSON.stringify(passDownLog);
        // no passDownLog.id means we should add the passDownLog.
        if (passDownLog.id == null || passDownLog.id == 0) {
            return this.post(this.baseUrl + '/' + addressId + '/passdownlogs', body);
        }
        else {
            return this.put(this.baseUrl + '/' + addressId + '/passdownlogs' + passDownLog.id, body);
        }
    };
    /**
    * Gets risk assessments associated with the address specified by the addressId
    * @param {number} addressId Unique identifier of the address
    */
    AddressService.prototype.getRiskAssessments = function (addressId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments');
    };
    /**
     * Gets risk assessment associated with the address specified by the addressId and workplaceRiskAssessmentId
     * @param {number} addressId Unique identifier of the address
     * @param {number} workplaceRiskAssessmentId Unique identifier of the risk assessment
     */
    AddressService.prototype.getRiskAssessment = function (addressId, workplaceRiskAssessmentId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId);
    };
    /**
    * Updates a risk assessment
    * @param {number} addressId Unique identifier of the address
    * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
    */
    AddressService.prototype.saveRiskAssessment = function (addressId, workplaceRiskAssessmentId, workplaceRiskAssessment) {
        var body = JSON.stringify(workplaceRiskAssessment);
        //If the workplaceRiskAssessment.id == null or 0 then POST the object, otherwise PUT using the workplaceRiskAssessment.id in the route.
        if (workplaceRiskAssessment.id == null || workplaceRiskAssessment.id == 0) {
            return this.post(this.baseUrl + '/' + addressId + '/risk-assessments', body);
        }
        else {
            return this.put(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId, body);
        }
    };
    /**
    * Removes a risk assessment
    * @param {number} addressId Unique identifier of the address
    * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
    */
    AddressService.prototype.deleteRiskAssessment = function (addressId, workplaceRiskAssessmentId) {
        return this.delete(this.baseUrl + "/" + addressId + '/risk-assessments/' + workplaceRiskAssessmentId);
    };
    /**
     * request a risk assessment
     * @param {number} addressId Unique identifier of the address
     * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
     */
    AddressService.prototype.requestRiskAssessment = function (addressId, workplaceRiskAssessmentId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/request');
    };
    /**
   * approve a risk assessment
   * @param {number} addressId Unique identifier of the address
   * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
   */
    AddressService.prototype.approveRiskAssessment = function (addressId, workplaceRiskAssessmentId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/approve');
    };
    /**
     * decline a risk assessment
     * @param {number} addressId Unique identifier of the address
     * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
    */
    AddressService.prototype.declineRiskAssessment = function (addressId, workplaceRiskAssessmentId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/decline');
    };
    /**
     * Gets risk assessments questions associated with the address specified by the addressId
     * @param {number} addressId Unique identifier of the address
     */
    AddressService.prototype.getRiskAssessmentQuestions = function (addressId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/questions');
    };
    /**
     * Gets risk assessment responses associated with the address specified by the addressId & workplaceRiskAssessmentId
     * @param {number} addressId Unique identifier of the address
     * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
     */
    AddressService.prototype.getRiskAssessmentResponses = function (addressId, workplaceRiskAssessmentId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/responses');
    };
    /**
     * Gets a risk assessment response associated with the address specified by the addressId & workplaceRiskAssessmentId
     * @param {number} addressId Unique identifier of the address
     * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
    */
    AddressService.prototype.getRiskAssessmentResponse = function (addressId, workplaceRiskAssessmentId, riskAssessmentResponseId) {
        return this.get(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/responses');
    };
    /**
   * Updates a risk assessment response
   * @param {number} addressId Unique identifier of the address
   * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
   */
    AddressService.prototype.saveRiskAssessmentResponse = function (addressId, workplaceRiskAssessmentId, workplaceRiskAssessmentResponseId, workplaceRiskAssessmentResponse) {
        var body = JSON.stringify(workplaceRiskAssessmentResponse);
        //If the workplaceRiskAssessmentResponse.id == null or 0 then POST the object, otherwise PUT using the workplaceRiskAssessmentResponse.id in the route.
        if (workplaceRiskAssessmentResponse.id == null || workplaceRiskAssessmentResponse.id == 0) {
            return this.post(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/responses/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/responses/' + workplaceRiskAssessmentResponse.id, body);
        }
    };
    /**
   * Removes a risk assessment response
   * @param {number} addressId Unique identifier of the address
   * @param {number} workplaceRiskAssessmentId Unique identifier of the workplace risk assessmentId
   */
    AddressService.prototype.deleteRiskAssessmentResponse = function (addressId, workplaceRiskAssessmentId, workplaceRiskAssessmentResponseId) {
        return this.delete(this.baseUrl + "/" + addressId + '/risk-assessments/' + workplaceRiskAssessmentId + '/responses/' + workplaceRiskAssessmentResponseId);
    };
    return AddressService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
AddressService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], AddressService);
exports.AddressService = AddressService;


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var moment = __webpack_require__(0);
var WorkInstruction = (function () {
    function WorkInstruction() {
    }
    return WorkInstruction;
}());
exports.WorkInstruction = WorkInstruction;
var workinstructionstatuses;
(function (workinstructionstatuses) {
    workinstructionstatuses[workinstructionstatuses["Draft"] = 10] = "Draft";
    workinstructionstatuses[workinstructionstatuses["Requested"] = 15] = "Requested";
    workinstructionstatuses[workinstructionstatuses["Active"] = 20] = "Active";
    workinstructionstatuses[workinstructionstatuses["Inactive"] = 30] = "Inactive";
})(workinstructionstatuses = exports.workinstructionstatuses || (exports.workinstructionstatuses = {}));
exports.workInstructionFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'work instructions',
    sortColumn: 'revision',
    sortDirection: data_table_config_model_1.SortDirection.desc,
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'revision',
            columnHeader: 'Revision',
            routerLink: function (record) {
                return ['/jobs/', record.jobId, 'work-instructions', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'WorkInstructionStatusId',
            columnHeader: 'Status',
            formatter: function (record) {
                if (record.workInstructionStatusId) {
                    return workinstructionstatuses[record.workInstructionStatusId];
                }
                return '';
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'activatedDateTime',
            columnHeader: 'Activated Date',
            formatter: function (record) {
                if (record.activatedDateTime) {
                    return moment(record.activatedDateTime).format('MM/DD/YYYY hh:mm A');
                }
                return '';
            }
        })
    ]
});


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(958);

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The contact service is used to communicate with the API in handling
 * all transactions related to contacts.
 */
var ContactService = (function (_super) {
    __extends(ContactService, _super);
    function ContactService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/contacts';
        return _this;
    }
    /**
     * Gets all contacts optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    ContactService.prototype.getContacts = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific contact from the API based on the provided id
     * @param {number} id Unique identifier of the contact to retrieve
     */
    ContactService.prototype.getContact = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates an contact depending on whether the contact.id is specified and greater than zero
     * @param {Contact} contact The contact object to save
     */
    ContactService.prototype.saveContact = function (contact) {
        var body = JSON.stringify(contact);
        // no contact.id means we should add the contact.
        if (contact.id == null || contact.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + contact.id, body);
        }
    };
    /**
     * Deletes the contact identified by the provided id
     * @param {number} id Unique identifier of the contact to delete
     */
    ContactService.prototype.deleteContact = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    /**
     * Gets all transactions related to the contact
     * @param {number} id Unique identifier of the contact
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    ContactService.prototype.getTransactions = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/transactions', config, pagination);
    };
    /**
     * Gets the user account associated with the contact
     * @param {number} id Unique identifier of the contact
     */
    ContactService.prototype.getUser = function (id) {
        return this.get(this.baseUrl + '/' + id + '/user');
    };
    /**
     * Saves or creates an user depending on whether the user.id is specified and greater than zero
     * @param {number} id Unique identifier of the contact to save the user to
     * @param {User} user The user object to save
     */
    ContactService.prototype.saveUser = function (id, user) {
        var body = JSON.stringify(user);
        // no location.id means we should add the location.
        if (user.id == null || user.id == 0) {
            return this.post(this.baseUrl + '/' + id + '/user', body);
        }
        else {
            return this.put(this.baseUrl + '/' + id + '/user', body);
        }
    };
    /**
     * Returns a specific contact from the API based on the provided user id
     * @param {number} userid Unique identifier of the user to retrieve contact
     */
    ContactService.prototype.getContactByUser = function (userid) {
        return this.get(this.baseUrl + '/user/' + userid);
    };
    return ContactService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
ContactService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], ContactService);
exports.ContactService = ContactService;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The location service is used to communicate with the API in handling
 * all transactions related to locations.
 */
var LocationService = (function (_super) {
    __extends(LocationService, _super);
    function LocationService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/locations';
        return _this;
    }
    /**
     * Gets all locations optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    LocationService.prototype.getLocations = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Returns a specific location from the API based on the provided id
     * @param {number} id Unique identifier of the location to retrieve
     */
    LocationService.prototype.getLocation = function (id) {
        return this.get(this.baseUrl + '/' + id);
    };
    /**
     * Saves or creates an location depending on whether the location.id is specified and greater than zero
     * @param {Location} location The employee object to save
     */
    LocationService.prototype.saveLocation = function (location) {
        var body = JSON.stringify(location);
        // no location.id means we should add the location.
        if (location.id == null || location.id == 0) {
            return this.post(this.baseUrl, body);
        }
        else {
            return this.put(this.baseUrl + '/' + location.id, body);
        }
    };
    /**
     * Deletes the location identified by the provided id
     * @param {number} id Unique identifier of the location to delete
     */
    LocationService.prototype.deleteLocation = function (id) {
        return this.delete(this.baseUrl + '/' + id);
    };
    /**
     * Gets all transactions related to the location
     * @param {number} id Unique identifier of the location
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    LocationService.prototype.getTransactions = function (locationId, config, pagination) {
        return this.get(this.baseUrl + '/' + locationId + '/transactions', config, pagination);
    };
    /**
     * Gets all jobs related to the location
     * @param {number} id Unique identifier of the location
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    LocationService.prototype.getJobs = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/jobs', config, pagination);
    };
    /**
     * Gets a specific job associated with the location
     * @param {number} id Unique identifier of the location
     * @param {number} jobId Unique identifier of the job to retrieve
     */
    LocationService.prototype.getJob = function (id, jobId) {
        return this.get(this.baseUrl + '/' + id + '/jobs/' + jobId);
    };
    /**
     * Saves or creates a job depending on whether the job.id is specified and greater than zero
     * @param {number} id Unique identifier of the location to save the address to
     * @param {Job} job The job object to save
     */
    LocationService.prototype.saveJob = function (id, job) {
        var body = JSON.stringify(job);
        // no job.id means we should add the job.
        if (job.id == null || job.id == 0) {
            return this.post(this.baseUrl + '/' + id + '/jobs/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + id + '/jobs/' + job.id, body);
        }
    };
    /**
     * Deletes the job identified by the provided id
     * @param {number} id Unique identifier of the location
     * @param {number} jobId Unique identifier of the job to delete
     */
    LocationService.prototype.deleteJob = function (id, jobId) {
        return this.delete(this.baseUrl + '/' + id + '/jobs/' + jobId);
    };
    /**
     * Gets all contacts related to the location
     * @param {number} id Unique identifier of the location
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    LocationService.prototype.getContacts = function (id, config, pagination) {
        return this.get(this.baseUrl + '/' + id + '/contacts', config, pagination);
    };
    /**
     * Gets a specific contact associated with the location
     * @param {number} id Unique identifier of the location
     * @param {number} contactId Unique identifier of the contact to retrieve
     */
    LocationService.prototype.getContact = function (id, contactId) {
        return this.get(this.baseUrl + '/' + id + '/contacts/' + contactId);
    };
    /**
     * Saves or creates a contact depending on whether the contact.id is specified and greater than zero
     * @param {number} id Unique identifier of the location to save the address to
     * @param {Contact} contact The contact object to save
     */
    LocationService.prototype.saveContact = function (id, contact) {
        var body = JSON.stringify(contact);
        // no contact.id means we should add the contact.
        if (contact.id == null || contact.id == 0) {
            return this.post(this.baseUrl + '/' + id + '/contacts/', body);
        }
        else {
            return this.put(this.baseUrl + '/' + id + '/contacts/' + contact.id, body);
        }
    };
    /**
     * Deletes the contact identified by the provided id
     * @param {number} id Unique identifier of the location
     * @param {number} contactId Unique identifier of the contact to delete
     */
    LocationService.prototype.deleteContact = function (id, contactId) {
        return this.delete(this.baseUrl + '/' + id + '/contacts/' + contactId);
    };
    return LocationService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
LocationService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], LocationService);
exports.LocationService = LocationService;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The location service is used to communicate with the API in handling
 * all transactions related to locations.
 */
var UserService = (function (_super) {
    __extends(UserService, _super);
    function UserService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/users';
        return _this;
    }
    /**
     * Gets all users optionally paginated
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    UserService.prototype.getUsers = function (config, pagination) {
        return this.get(this.baseUrl, config, pagination);
    };
    /**
     * Gets all roles related to the user
     * @param {number} userId Unique identifier of the user
     */
    UserService.prototype.getRoles = function (userId) {
        return this.get(this.baseUrl + '/' + userId + '/roles');
    };
    /**
     * Adds a role to the specified user
     * @param {number} userId Unique identifier of the user to add the role to
     * @param {number} roleId Unique identifier of the role to add to the user
     */
    UserService.prototype.addRole = function (userId, roleId) {
        return this.post(this.baseUrl + '/' + userId + '/roles/' + roleId, JSON.stringify(roleId));
    };
    /**
     * Removes a role from the specified user
     * @param {number} userId Unique identifier of the user to remove the role from
     * @param {number} roleId Unique identifier of the role to remove from the user
     */
    UserService.prototype.removeRole = function (userId, roleId) {
        return this.delete(this.baseUrl + '/' + userId + '/roles/' + roleId);
    };
    /**
     * Saves a profile image for the user
     * @param {number} id Unique identifier of the user
     * @param {any} file File object of the image to save
     */
    UserService.prototype.saveProfileImage = function (id, file) {
        return this.file(this.baseUrl + '/' + id + '/profile', file);
    };
    /**
     * Archives user
     * @param {number} userId Unique identifier of the user to archive
     */
    UserService.prototype.archiveUser = function (userId) {
        return this.delete(this.baseUrl + '/' + userId);
    };
    /**
     * Restores the specified user from the archive
     * @param {number} userId Unique identifier of the user to restore from archive
     */
    UserService.prototype.unarchiveUser = function (userId) {
        return this.post(this.baseUrl + '/' + userId + '/activate', null);
    };
    return UserService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
UserService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], UserService);
exports.UserService = UserService;


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Client = (function () {
    function Client() {
    }
    return Client;
}());
exports.Client = Client;
exports.clientFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'clients',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Name',
            routerLink: function (record) {
                return ['/clients', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'alias',
            columnHeader: 'Alias'
        })
    ]
});


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Contact = (function () {
    function Contact() {
    }
    return Contact;
}());
exports.Contact = Contact;
exports.contactFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'contacts',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'lastName',
            columnHeader: 'Name',
            allowSelect: true,
            routerLink: function (record) {
                return ['/clients', record.clientId, 'contacts', record.id];
            },
            formatter: function (record) {
                return record.fullName;
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'title',
            columnHeader: 'Title'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'officePhoneNumber',
            columnHeader: 'Office Phone'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'state',
            columnHeader: 'State'
        }),
    ]
});


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Location = (function () {
    function Location() {
    }
    return Location;
}());
exports.Location = Location;
exports.locationFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'locations',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Name',
            routerLink: function (record) {
                return ['/clients', record.clientId, 'locations', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'alias',
            columnHeader: 'Alias'
        })
    ]
});


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(13);

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var http_1 = __webpack_require__(7);
var router_1 = __webpack_require__(3);
var core_1 = __webpack_require__(1);
var rxjs_1 = __webpack_require__(31);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
/**
 * The auth service is used to communicate with the API in handling
 * all transactions related to authentication of users.
 */
var AuthService = (function () {
    function AuthService(API_BASE, API_VERSION, http, notificationService, router, stateService) {
        this.API_VERSION = API_VERSION;
        this.http = http;
        this.notificationService = notificationService;
        this.router = router;
        this.stateService = stateService;
        this.headers = new http_1.Headers();
        this.headers.append("content-type", "application/json");
        this.headers.append("api-version", API_VERSION);
        this.apiBase = API_BASE;
        this.apiAuthUrl = API_BASE + '/api/auth';
    }
    /**
     * Calls the API to validate a users provided credentials
     * @param {string} username User provided username to use in authentication
     * @param {string} password User provided password to use in authentication
     */
    AuthService.prototype.login = function (username, password) {
        var _this = this;
        var head = new http_1.Headers({
            'Content-Type': 'application/x-www-form-urlencoded',
            'api-version': this.API_VERSION
        });
        return this.http.post(this.apiAuthUrl + '/token', 'username=' + username + '&password=' + password, { headers: head })
            .flatMap(function (response) {
            var token = response.json();
            if (token) {
                return _this.stateService.setToken(token);
            }
            else {
                _this.notificationService.notify('error', response.statusText);
                return rxjs_1.Observable.of(false);
            }
        });
    };
    /**
     * Removes any cookies and authorization for the currently logged in user
     */
    AuthService.prototype.logout = function () {
        this.stateService.removeToken();
    };
    /**
     * Attempts to identify the user by the provided email address and emails them with a
     * URL to reset their password
     * @param {string} emailAddress User provided email address to find
     */
    AuthService.prototype.forgot = function (emailAddress) {
        var body = JSON.stringify({ emailAddress: emailAddress, domain: window.location.hostname });
        return this.http.post(this.apiAuthUrl + '/forgot', body, { headers: this.headers });
    };
    /**
     * Resets a users password if the provided hashCode is valid
     * @param {string} password New password to save to user account
     * @param {string} hashCode Hash that identifies a user
     */
    AuthService.prototype.reset = function (password, hashCode) {
        var body = JSON.stringify({ password: password, hashCode: hashCode });
        return this.http.post(this.apiAuthUrl + '/reset', body, { headers: this.headers });
    };
    /**
     * Confirms that a provided reset hash is valid
     * @param {string} hashCode Hash that identifies a user
     */
    AuthService.prototype.hashConfirm = function (hashCode) {
        var body = JSON.stringify(hashCode);
        return this.http.post(this.apiAuthUrl + '/hash', body, { headers: this.headers });
    };
    /**
     * Confirms a user's email address is valid
     * @param {string} code System generated code that identifies a user
     */
    AuthService.prototype.confirmEmail = function (code) {
        var body = JSON.stringify(code);
        return this.http.post(this.apiAuthUrl + '/confirm', body, { headers: this.headers });
    };
    return AuthService;
}());
AuthService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        notification_service_1.NotificationService,
        router_1.Router,
        state_service_1.StateService])
], AuthService);
exports.AuthService = AuthService;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The common service is used to communicate with the API in receiving
 * read only datasets.
 */
var CommonService = (function (_super) {
    __extends(CommonService, _super);
    function CommonService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/common';
        return _this;
    }
    /**
     * Gets all countries from the API
     */
    CommonService.prototype.getCountries = function () {
        return this.get(this.baseUrl + '/countries');
    };
    /**
     * Gets all states/provinces from the API
     */
    CommonService.prototype.getStates = function () {
        return this.get(this.baseUrl + '/states');
    };
    return CommonService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
CommonService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], CommonService);
exports.CommonService = CommonService;


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var Subject_1 = __webpack_require__(361);
var http_1 = __webpack_require__(7);
var Rx_1 = __webpack_require__(31);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
var common_styles_model_1 = __webpack_require__(93);
var TransactionService = (function (_super) {
    __extends(TransactionService, _super);
    function TransactionService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        _this.baseUrl = '/transactions';
        _this.oldtransactions = new Array();
        _this.transactionSource = new Subject_1.Subject();
        _this.transactions = _this.transactionSource.asObservable();
        Rx_1.Observable.interval(300000)
            .subscribe(function () {
            _this.getTransactions();
        });
        return _this;
    }
    /**
     * Gets all open transactions for the current user
     */
    TransactionService.prototype.getTransactions = function () {
        var _this = this;
        this.get(this.baseUrl).subscribe(function (trans) {
            _this.transactionArr = trans.json();
            _this.transactionSource.subscribe(function (x) {
                _this.oldtransactions = x;
            });
            _this.transactionArr.forEach(function (x) {
                var style = common_styles_model_1.CommonStyles.pointStyles.filter(function (f) {
                    return f.id == x.transactionTypeId;
                });
                x.iconClass = (style[0]) ? style[0].icon : '';
                x.taskstatusClass = (style[0]) ? style[0].class : '';
                var filteredTransaction = _this.oldtransactions.filter(function (ot) { return ot.id == x.id; })[0];
                if (filteredTransaction) {
                    if (filteredTransaction.taskstatusClass == '') {
                        x.taskstatusClass = '';
                    }
                }
            });
            _this.transactionSource.next(_this.transactionArr);
        });
    };
    /**
     * Marks a transaction as read via the API
     * @param id {number} Unique identifier of the transaction
     */
    TransactionService.prototype.markTransactionAsRead = function (id) {
        var body = JSON.stringify(id);
        return this.put(this.baseUrl + '/' + id, body);
    };
    return TransactionService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
TransactionService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], TransactionService);
exports.TransactionService = TransactionService;


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var job_service_1 = __webpack_require__(13);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var job_model_1 = __webpack_require__(14);
var JobComponent = (function (_super) {
    __extends(JobComponent, _super);
    function JobComponent(modalService, router, notificationService, jobService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.jobService = jobService;
        _this.areJobsLoading = false;
        _this.searchFor = '';
        _this.jobsConfig = job_model_1.jobFullDataTableConfig;
        _this.newJob = new job_model_1.Job();
        _this.locations = new Array();
        _this.canAddJob = false;
        return _this;
    }
    JobComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.jobsConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'name ctn ' + _this.searchFor; // + ' or ' +
            //'alias ctn ' + this.searchFor + ' or ' +
            //'phoneNumber ctn ' + this.searchFor + ' or ' +
            //'website ctn ' + this.searchFor + ' or ' +
            //'faxNumber ctn ' + this.searchFor;
        };
        this.loadJobs();
        this.canAddJob = this.stateService.hasPrivilege('jobs-add');
    };
    JobComponent.prototype.loadJobs = function () {
        var _this = this;
        this.areJobsLoading = true;
        this.jobService.getJobs(this.jobsConfig, this.jobPagination).subscribe(function (jobs) {
            _this.jobs = jobs.json();
            _this.jobPagination = _this.getPagination(jobs);
            _this.areJobsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areJobsLoading = false;
        });
    };
    JobComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadJobs();
        }
    };
    JobComponent.prototype.createJob = function (job) {
        if (job) {
            this.newJob = new job_model_1.Job();
            this.router.navigate(['/jobs', job.id]);
            this.loadJobs();
        }
        this.closeModal('addJob');
    };
    return JobComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
JobComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(319)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.Router,
        notification_service_1.NotificationService,
        job_service_1.JobServices,
        state_service_1.StateService])
], JobComponent);
exports.JobComponent = JobComponent;


/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var ARTerm = (function () {
    function ARTerm() {
    }
    return ARTerm;
}());
exports.ARTerm = ARTerm;
exports.arTermsFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'terms',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Name',
            routerLink: function (record) {
                return ['/admin/ar-terms/detail', record.id];
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'days',
            columnHeader: 'Term Days'
        })
    ]
});


/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Employee = (function () {
    function Employee() {
    }
    return Employee;
}());
exports.Employee = Employee;
exports.employeeStatuses = [
    { 'id': 10, 'name': 'Applied' },
    { 'id': 30, 'name': 'Interviewed' },
    { 'id': 50, 'name': 'Active' },
    { 'id': 90, 'name': 'Do Not Hire' },
    { 'id': 95, 'name': 'Dismissed' }
];
exports.employeeTypes = [
    { 'id': 0, 'name': 'None' },
    { 'id': 10, 'name': 'Full Time' },
    { 'id': 20, 'name': 'Part Time' },
    { 'id': 30, 'name': 'Contract' },
    { 'id': 40, 'name': 'Temp' }
];
exports.employeeFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'employees',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'lastName',
            columnHeader: 'Name',
            routerLink: function (record) {
                return ['/employees/detail', record.id];
            },
            formatter: function (record) {
                return record.firstName + ' ' + record.lastName;
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'alias',
            columnHeader: 'Alias'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'employeeTypeId',
            columnHeader: 'Type',
            formatter: function (record) {
                if (record.employeeTypeId) {
                    var val = exports.employeeTypes.filter(function (o) {
                        return o.id == record.employeeTypeId;
                    });
                    if (val) {
                        return val[0].name;
                    }
                }
                return '';
            }
        })
    ]
});


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var JobService = (function () {
    function JobService() {
    }
    return JobService;
}());
exports.JobService = JobService;
exports.serviceTypes = [
    { 'id': 1, 'name': 'Manager' },
    { 'id': 2, 'name': 'Supervisor' },
    { 'id': 3, 'name': 'Inspector' },
    { 'id': 4, 'name': 'Quality Tech' },
    { 'id': 5, 'name': 'Auditor' },
    { 'id': 6, 'name': 'Fork Lift Operator' },
    { 'id': 7, 'name': 'Truck' },
    { 'id': 8, 'name': 'Liaison' },
];
exports.jobServiceFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'job rates',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'serviceId',
            columnHeader: 'Service',
            formatter: function (record) {
                if (record) {
                    var val = exports.serviceTypes.filter(function (s) {
                        return s.id == record.serviceId;
                    });
                    if (val) {
                        return val[0].name;
                    }
                }
                return '';
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift1Count',
            columnHeader: 'Shift1'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift2Count',
            columnHeader: 'Shift2'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift3Count',
            columnHeader: 'Shift3'
        }),
    ]
});
exports.jobServiceRateFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'job rates',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'serviceId',
            columnHeader: 'Service',
            formatter: function (record) {
                if (record) {
                    var val = exports.serviceTypes.filter(function (s) {
                        return s.id == record.serviceId;
                    });
                    if (val) {
                        return val[0].name;
                    }
                }
                return '';
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift1Rate',
            columnHeader: 'Shift1'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift2Rate',
            columnHeader: 'Shift2'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shift3Rate',
            columnHeader: 'Shift3'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'saturdayRate',
            columnHeader: 'Saturday'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'sundayRate',
            columnHeader: 'Sunday'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'holidayRate',
            columnHeader: 'Holiday'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'overtimeRate',
            columnHeader: 'Overtime'
        })
    ]
});


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var Role = (function () {
    function Role() {
    }
    return Role;
}());
exports.Role = Role;
exports.roleFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'roles',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Name',
            routerLink: function (record) {
                return ['/admin/roles/detail', record.id];
            }
        })
    ]
});


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var WorkInstructionDefect = (function () {
    function WorkInstructionDefect() {
    }
    return WorkInstructionDefect;
}());
exports.WorkInstructionDefect = WorkInstructionDefect;
exports.workInstructionDefectFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'defects',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Defect'
        })
    ]
});


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var WorkInstructionPartNumber = (function () {
    function WorkInstructionPartNumber() {
    }
    return WorkInstructionPartNumber;
}());
exports.WorkInstructionPartNumber = WorkInstructionPartNumber;
exports.workInstructionPartNumberFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'part numbers',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'partNumber',
            columnHeader: 'Part Number'
        })
    ]
});


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var WorkInstructionRework = (function () {
    function WorkInstructionRework() {
    }
    return WorkInstructionRework;
}());
exports.WorkInstructionRework = WorkInstructionRework;
exports.workInstructionReworkFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'reworks',
    //sortColumn: 'sequence',
    //sortDirection: SortDirection.asc,
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Rework'
        })
    ]
});


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dragulaExpt = __webpack_require__(289);
exports.dragula = dragulaExpt.default || dragulaExpt;


/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var dragula_class_1 = __webpack_require__(50);
var core_1 = __webpack_require__(1);
var DragulaService = (function () {
    function DragulaService() {
        this.cancel = new core_1.EventEmitter();
        this.cloned = new core_1.EventEmitter();
        this.drag = new core_1.EventEmitter();
        this.dragend = new core_1.EventEmitter();
        this.drop = new core_1.EventEmitter();
        this.out = new core_1.EventEmitter();
        this.over = new core_1.EventEmitter();
        this.remove = new core_1.EventEmitter();
        this.shadow = new core_1.EventEmitter();
        this.dropModel = new core_1.EventEmitter();
        this.removeModel = new core_1.EventEmitter();
        this.events = [
            'cancel', 'cloned', 'drag', 'dragend', 'drop', 'out', 'over',
            'remove', 'shadow', 'dropModel', 'removeModel'
        ];
        this.bags = [];
    }
    DragulaService.prototype.add = function (name, drake) {
        var bag = this.find(name);
        if (bag) {
            throw new Error('Bag named: "' + name + '" already exists.');
        }
        bag = { name: name, drake: drake };
        this.bags.push(bag);
        if (drake.models) {
            this.handleModels(name, drake);
        }
        if (!bag.initEvents) {
            this.setupEvents(bag);
        }
        return bag;
    };
    DragulaService.prototype.find = function (name) {
        for (var _i = 0, _a = this.bags; _i < _a.length; _i++) {
            var bag = _a[_i];
            if (bag.name === name) {
                return bag;
            }
        }
    };
    DragulaService.prototype.destroy = function (name) {
        var bag = this.find(name);
        var i = this.bags.indexOf(bag);
        this.bags.splice(i, 1);
        bag.drake.destroy();
    };
    DragulaService.prototype.setOptions = function (name, options) {
        var bag = this.add(name, dragula_class_1.dragula(options));
        this.handleModels(name, bag.drake);
    };
    DragulaService.prototype.handleModels = function (name, drake) {
        var _this = this;
        var dragElm;
        var dragIndex;
        var dropIndex;
        var sourceModel;
        drake.on('remove', function (el, source) {
            if (!drake.models) {
                return;
            }
            sourceModel = drake.models[drake.containers.indexOf(source)];
            sourceModel.splice(dragIndex, 1);
            // console.log('REMOVE');
            // console.log(sourceModel);
            _this.removeModel.emit([name, el, source]);
        });
        drake.on('drag', function (el, source) {
            dragElm = el;
            dragIndex = _this.domIndexOf(el, source);
        });
        drake.on('drop', function (dropElm, target, source) {
            if (!drake.models || !target) {
                return;
            }
            dropIndex = _this.domIndexOf(dropElm, target);
            sourceModel = drake.models[drake.containers.indexOf(source)];
            // console.log('DROP');
            // console.log(sourceModel);
            if (target === source) {
                sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);
            }
            else {
                var notCopy = dragElm === dropElm;
                var targetModel = drake.models[drake.containers.indexOf(target)];
                var dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));
                if (notCopy) {
                    sourceModel.splice(dragIndex, 1);
                }
                targetModel.splice(dropIndex, 0, dropElmModel);
                target.removeChild(dropElm); // element must be removed for ngFor to apply correctly
            }
            _this.dropModel.emit([name, dropElm, target, source]);
        });
    };
    DragulaService.prototype.setupEvents = function (bag) {
        bag.initEvents = true;
        var that = this;
        var emitter = function (type) {
            function replicate() {
                var args = Array.prototype.slice.call(arguments);
                that[type].emit([bag.name].concat(args));
            }
            bag.drake.on(type, replicate);
        };
        this.events.forEach(emitter);
    };
    DragulaService.prototype.domIndexOf = function (child, parent) {
        return Array.prototype.indexOf.call(parent.children, child);
    };
    return DragulaService;
}());
DragulaService = __decorate([
    core_1.Injectable()
], DragulaService);
exports.DragulaService = DragulaService;


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var dragula_class_1 = __webpack_require__(50);
exports.dragula = dragula_class_1.dragula;
var dragula_directive_1 = __webpack_require__(217);
exports.DragulaDirective = dragula_directive_1.DragulaDirective;
var dragula_provider_1 = __webpack_require__(51);
exports.DragulaService = dragula_provider_1.DragulaService;
var dragular_module_1 = __webpack_require__(347);
exports.DragulaModule = dragular_module_1.DragulaModule;


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "6cc0fa3065646f466262d7bedf771e5b.png";

/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(15);

/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.6
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var core_1 = __webpack_require__(1);
var base_cookie_options_1 = __webpack_require__(224);
var CookieService = (function () {
    function CookieService(_defaultOptions) {
        this._defaultOptions = _defaultOptions;
    }
    Object.defineProperty(CookieService.prototype, "cookieString", {
        get: function () {
            return document.cookie || '';
        },
        set: function (val) {
            document.cookie = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @name CookieService#get
     *
     * @description
     * Returns the value of given cookie key.
     *
     * @param {string} key Id to use for lookup.
     * @returns {string} Raw cookie value.
     */
    CookieService.prototype.get = function (key) {
        return this._cookieReader()[key];
    };
    /**
     * @name CookieService#getObject
     *
     * @description
     * Returns the deserialized value of given cookie key.
     *
     * @param {string} key Id to use for lookup.
     * @returns {Object} Deserialized cookie value.
     */
    CookieService.prototype.getObject = function (key) {
        var value = this.get(key);
        return value ? JSON.parse(value) : value;
    };
    /**
     * @name CookieService#getAll
     *
     * @description
     * Returns a key value object with all the cookies.
     *
     * @returns {Object} All cookies
     */
    CookieService.prototype.getAll = function () {
        return this._cookieReader();
    };
    /**
     * @name CookieService#put
     *
     * @description
     * Sets a value for given cookie key.
     *
     * @param {string} key Id for the `value`.
     * @param {string} value Raw value to be stored.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.put = function (key, value, options) {
        this._cookieWriter()(key, value, options);
    };
    /**
     * @name CookieService#putObject
     *
     * @description
     * Serializes and sets a value for given cookie key.
     *
     * @param {string} key Id for the `value`.
     * @param {Object} value Value to be stored.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.putObject = function (key, value, options) {
        this.put(key, JSON.stringify(value), options);
    };
    /**
     * @name CookieService#remove
     *
     * @description
     * Remove given cookie.
     *
     * @param {string} key Id of the key-value pair to delete.
     * @param {CookieOptionsArgs} options (Optional) Options object.
     */
    CookieService.prototype.remove = function (key, options) {
        this._cookieWriter()(key, undefined, options);
    };
    /**
     * @name CookieService#removeAll
     *
     * @description
     * Remove all cookies.
     */
    CookieService.prototype.removeAll = function () {
        var _this = this;
        var cookies = this.getAll();
        Object.keys(cookies).forEach(function (key) {
            _this.remove(key);
        });
    };
    CookieService.prototype._cookieReader = function () {
        var lastCookies = {};
        var lastCookieString = '';
        var that = this;
        var cookieArray, cookie, i, index, name;
        var currentCookieString = this.cookieString;
        if (currentCookieString !== lastCookieString) {
            lastCookieString = currentCookieString;
            cookieArray = lastCookieString.split('; ');
            lastCookies = {};
            for (i = 0; i < cookieArray.length; i++) {
                cookie = cookieArray[i];
                index = cookie.indexOf('=');
                if (index > 0) {
                    name = that._safeDecodeURIComponent(cookie.substring(0, index));
                    // the first value that is seen for a cookie is the most
                    // specific one.  values for the same cookie name that
                    // follow are for less specific paths.
                    if (this.isBlank(lastCookies[name])) {
                        lastCookies[name] = that._safeDecodeURIComponent(cookie.substring(index + 1));
                    }
                }
            }
        }
        return lastCookies;
    };
    CookieService.prototype._cookieWriter = function () {
        var that = this;
        return function (name, value, options) {
            that.cookieString = that._buildCookieString(name, value, options);
        };
    };
    CookieService.prototype._safeDecodeURIComponent = function (str) {
        try {
            return decodeURIComponent(str);
        }
        catch (e) {
            return str;
        }
    };
    CookieService.prototype._buildCookieString = function (name, value, options) {
        var cookiePath = '/';
        var path, expires;
        var defaultOpts = this._defaultOptions || new base_cookie_options_1.CookieOptions({ path: cookiePath });
        var opts = this._mergeOptions(defaultOpts, options);
        expires = opts.expires;
        if (this.isBlank(value)) {
            expires = 'Thu, 01 Jan 1970 00:00:00 GMT';
            value = '';
        }
        if (this.isString(expires)) {
            expires = new Date(expires);
        }
        var str = encodeURIComponent(name) + '=' + encodeURIComponent(value);
        str += opts.path ? ';path=' + opts.path : '';
        str += opts.domain ? ';domain=' + opts.domain : '';
        str += expires ? ';expires=' + expires.toUTCString() : '';
        str += opts.secure ? ';secure' : '';
        // per http://www.ietf.org/rfc/rfc2109.txt browser must allow at minimum:
        // - 300 cookies
        // - 20 cookies per unique domain
        // - 4096 bytes per cookie
        var cookieLength = str.length + 1;
        if (cookieLength > 4096) {
            console.log("Cookie '" + name + "' possibly not set or overflowed because it was too \n      large (" + cookieLength + " > 4096 bytes)!");
        }
        return str;
    };
    CookieService.prototype._mergeOptions = function (defaultOpts, providedOpts) {
        var newOpts = defaultOpts;
        if (this.isPresent(providedOpts)) {
            return newOpts.merge(new base_cookie_options_1.CookieOptions(providedOpts));
        }
        return newOpts;
    };
    CookieService.prototype.isBlank = function (obj) {
        return obj === undefined || obj === null;
    };
    CookieService.prototype.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    CookieService.prototype.isString = function (obj) {
        return typeof obj === 'string';
    };
    CookieService = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Optional()), 
        __metadata('design:paramtypes', [base_cookie_options_1.CookieOptions])
    ], CookieService);
    return CookieService;
}());
exports.CookieService = CookieService;

//# sourceMappingURL=cookies.service.js.map


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var state_service_1 = __webpack_require__(2);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var user_model_1 = __webpack_require__(16);
/**
 * Component for routing of the application based on user type
 */
var AppRoutingComponent = (function (_super) {
    __extends(AppRoutingComponent, _super);
    function AppRoutingComponent(modalService, notificationService, stateService, router) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.stateService = stateService;
        _this.router = router;
        return _this;
    }
    AppRoutingComponent.prototype.ngOnInit = function () {
        this.RedirectRoute();
    };
    /**
     * Redirects to starting page based on user type
     */
    AppRoutingComponent.prototype.RedirectRoute = function () {
        if (this.stateService.currentUser) {
            if (this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact) {
                this.router.navigateByUrl('/jobs');
            }
            else {
                this.router.navigateByUrl('/dashboard');
            }
        }
        else {
            this.router.navigateByUrl('/auth/login');
        }
    };
    return AppRoutingComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
AppRoutingComponent = __decorate([
    core_1.Component({
        template: '<template></template>'
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        state_service_1.StateService, router_1.Router])
], AppRoutingComponent);
exports.AppRoutingComponent = AppRoutingComponent;


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The common service is used to communicate with the API in receiving
 * read only datasets.
 */
var CreatePDFService = (function (_super) {
    __extends(CreatePDFService, _super);
    function CreatePDFService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/testpdf';
        return _this;
    }
    /**
  * Generates test PDF from the API
  */
    CreatePDFService.prototype.generateTestPDF = function () {
        return this.get(this.baseUrl + '/testpdfdownload');
    };
    CreatePDFService.prototype.getStates = function () {
        debugger;
        return this.get('/common' + '/states');
    };
    return CreatePDFService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
CreatePDFService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], CreatePDFService);
exports.CreatePDFService = CreatePDFService;


/***/ }),
/* 58 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The permission service is used to retrieve all permissions
 * from the API.
 */
var PermissionService = (function (_super) {
    __extends(PermissionService, _super);
    function PermissionService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/permissions';
        return _this;
    }
    /**
     * Gets all permissions from the API
     */
    PermissionService.prototype.getPermissions = function () {
        return this.get(this.baseUrl);
    };
    return PermissionService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
PermissionService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], PermissionService);
exports.PermissionService = PermissionService;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The production report service is used to communicate with the API in handling
 * all transactions related to workinstructions.
 */
var ProductionReportServices = (function (_super) {
    __extends(ProductionReportServices, _super);
    function ProductionReportServices(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/jobs';
        return _this;
    }
    /**
     * Gets production reports associated with the job specified by the jobId
     * @param {number} jobId Unique identifier of the job
     * @param {DataTableConfig} [config] Optional configuration settings for a data table
     * @param {Pagination} [pagination] Optional pagination data for the request
     */
    ProductionReportServices.prototype.getProductionReports = function (jobId, config, pagination) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports', config, pagination);
    };
    /**
     * Returns a specific production report from the API based on the provided id
     * @param {number} jobId Unique identifier of the job
     * @param {number} productionReportId Unique identifier of the production report to retrieve
     */
    ProductionReportServices.prototype.getProductionReport = function (jobId, productionReportId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId);
    };
    /**
     * Saves or creates production report data based on productionReport.id is specified and greater than zero
     * @param { number } jobId Unique identifier of the job
     * @param { ProductionReport } productionReport object for production report data
     */
    ProductionReportServices.prototype.saveProductionReport = function (jobId, productionReport) {
        var body = JSON.stringify(productionReport);
        // no productionReport.id means we should add the production report.
        if (productionReport.id == null || productionReport.id == 0) {
            return this.post(this.baseUrl + '/' + jobId + '/production-reports', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobId + '/production-reports/' + productionReport.id, body);
        }
    };
    /**
     * Deletes specified production report data based on productionReportId
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.deleteProductionReport = function (jobId, productionReportId) {
        return this.delete(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId);
    };
    /**
     * create production report for given job and production report id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.requestProductionReport = function (jobId, productionReportId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/request');
    };
    /**
     * approves production report for given job and production report id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.approveProductionReport = function (jobId, productionReportId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/approve');
    };
    /**
     * declines production report for given job and production report id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.declineProductionReport = function (jobId, productionReportId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/decline');
    };
    /**
     * Returns a specific production report service from the API based on the provided id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.getProductionReportServices = function (jobId, productionReportId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/services');
    };
    /**
     * Returns a specific production report service from the API based on the provided id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportServiceId Unique identifier of the production report service
     */
    ProductionReportServices.prototype.getProductionReportService = function (jobId, productionReportId, productionReportServiceId) {
        return this.get(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/services/' + productionReportServiceId);
    };
    /**
    * Saves or creates production report service data based on productionReportService.id is specified and greater than zero
    * @param { number } jobId Unique identifier of the job
    * @param { number } productionReportId Unique identifier of the production report
    * @param { ProductionReportService } productionReportService object for production report service data
    */
    ProductionReportServices.prototype.saveProductionReportService = function (jobId, productionReportId, productionReportService) {
        var body = JSON.stringify(productionReportService);
        // no productionReport.id means we should add the production report.
        if (productionReportService == null || productionReportService.id == 0) {
            return this.post(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/services', body);
        }
        else {
            return this.put(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/services/' + productionReportService.id, body);
        }
    };
    /**
     * Deletes specified production report service data based on productionReportServiceId
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportServiceId Unique identifier of the production report service
     */
    ProductionReportServices.prototype.deleteProductionReportService = function (jobId, productionReportId, productionReportServiceId) {
        return this.delete(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/services/' + productionReportServiceId);
    };
    /**
     * Returns a specific production reports service from the API based on the provided production report id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     */
    ProductionReportServices.prototype.getProductionReportPartNumbers = function (jobId, productionReportId) {
        return this.get(this.baseUrl + "/" + jobId + '/production-reports/' + productionReportId + '/part-numbers');
    };
    /**
     * Returns a specific production report part number from the API based on the provided id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportPartNumberId Unique identifier of the production report part number
     */
    ProductionReportServices.prototype.getProductionReportPartNumber = function (jobId, productionReportId, productionReportPartNumberId) {
        return this.get(this.baseUrl + "/" + jobId + '/production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId);
    };
    /**
    * Saves or creates production report data based on productionReport.id is specified and greater than zero
    * @param { number } jobId Unique identifier of the job
    * @param { number } productionReportId Unique identifier of the production report
    * @param { ProductionReportPartNumber } partNumber object of production report part number data
    */
    ProductionReportServices.prototype.saveProductionReportPartNumber = function (jobId, productionReportId, partNumber) {
        var body = JSON.stringify(partNumber);
        // no partNumber.id means we should add the production report part numbers.
        if (partNumber.id == null || partNumber.id == 0) {
            return this.post(this.baseUrl + jobId + '/production-reports/' + productionReportId + '/part-numbers', body);
        }
        else {
            return this.put(this.baseUrl + jobId + '/production-reports/' + productionReportId + '/part-numbers/' + partNumber.id, body);
        }
    };
    /**
     * Deletes specified production report part number data based on productionReportId & productionReportPartNumberId
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number }  productionReportPartNumberId Unique identifier of the production report part number
     */
    ProductionReportServices.prototype.deleteProductionReportPartNumber = function (jobId, productionReportId, productionReportPartNumberId) {
        return this.delete(this.baseUrl + '/' + jobId + '/production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId);
    };
    /**
     * Gets production reports part number defects associated with the job specified by jobId and production report id
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportPartNumberId Unique identifier of the production report part number
     */
    ProductionReportServices.prototype.getProductionReportPartNumberDefects = function (jobId, productionReportId, productionReportPartNumberId) {
        return this.get(this.baseUrl + "/" + jobId + 'production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId + '/defects');
    };
    /**
    * Gets production reports part number defects associated with the job specified by the productionReportPartNumberId
    * @param { number } jobId Unique identifier of the job
    * @param { number } productionReportId Unique identifier of the production report
    * @param { number } productionReportPartNumberId Unique identifier of the production report part number
    * @param { number } productionReportPartNumberDefectId Unique identifier of the production report part number defect
    */
    ProductionReportServices.prototype.getProductionReportPartNumberDefect = function (jobId, productionReportId, productionReportPartNumberId, productionReportPartNumberDefectId) {
        return this.get(this.baseUrl + "/" + jobId + 'production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId + '/defects/' + productionReportPartNumberDefectId);
    };
    /**
     * Saves or creates production report data based on productionReport.id is specified and greater than zero
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportPartNumberId Unique identifier of the production report part number
     * @param { ProductionReportPartNumberDefect } defect object of production report defect data
     */
    ProductionReportServices.prototype.saveProductionReportPartNumberDefect = function (jobId, productionReportId, productionReportPartNumberId, defect) {
        var body = JSON.stringify(defect);
        // no defect.id means we should add the production report defect.
        if (defect.id == null || defect.id == 0) {
            return this.post(this.baseUrl + jobId + 'production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId + '/defects', body);
        }
        else {
            return this.put(this.baseUrl + jobId + 'production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId + '/defects/' + defect.id, body);
        }
    };
    /**
     * Deletes specified production report part number data based on productionReportId & productionReportPartNumberId
     * @param { number } jobId Unique identifier of the job
     * @param { number } productionReportId Unique identifier of the production report
     * @param { number } productionReportPartNumberId Unique identifier of the production report part number
     * @param { number } productionReportPartNumberDefectId Unique identifier of the production report defect
     */
    ProductionReportServices.prototype.deleteProductionReportPartNumberDefect = function (jobId, productionReportId, productionReportPartNumberId, productionReportPartNumberDefectId) {
        return this.delete(this.baseUrl + '/' + jobId + 'production-reports/' + productionReportId + '/part-numbers/' + productionReportPartNumberId + '/defects/' + productionReportPartNumberDefectId);
    };
    return ProductionReportServices;
}(authenticated_service_base_1.AuthenticatedServiceBase));
ProductionReportServices = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], ProductionReportServices);
exports.ProductionReportServices = ProductionReportServices;


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var http_1 = __webpack_require__(7);
var authenticated_service_base_1 = __webpack_require__(10);
var state_service_1 = __webpack_require__(2);
/**
 * The riskassessment service is used to communicate with the API in handling
 * all transactions related to riskassessment.
 */
var RiskAssessmentService = (function (_super) {
    __extends(RiskAssessmentService, _super);
    function RiskAssessmentService(API_BASE, API_VERSION, http, stateService) {
        var _this = _super.call(this, API_BASE, API_VERSION, http, stateService) || this;
        /**
        * Path appended to the API_BASE URL
        **/
        _this.baseUrl = '/jobs';
        return _this;
    }
    /**
     * Gets risk assessment associated with the job and workinstruction.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     **/
    RiskAssessmentService.prototype.getRiskAssessments = function (jobId, workInstructionId, config, pagination) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments', config, pagination);
    };
    /**
     * Gets risk assessment associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
     **/
    RiskAssessmentService.prototype.getRiskAssessment = function (jobId, workInstructionId, riskAssessmentId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId);
    };
    /**
    * Add or update riskassessment object associated with jobId,riskassessmentId and workinstructionId.
    * @param {number} jobId Unique identifier of the job.
    * @param {number} workInstructionId Unique identifier of the workInstruction.
    * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
    * @param {RiskAssessment} riskAssessment Object of riskassessment.
    **/
    RiskAssessmentService.prototype.saveRiskAssessment = function (jobId, workInstructionId, riskAssessmentId, riskAssessment) {
        var body = JSON.stringify(riskAssessment);
        if (riskAssessment.id == null || riskAssessment.id == 0) {
            return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments', body);
        }
        else {
            return this.put(this.baseUrl + jobId + "/work-instructions/" + workInstructionId + "/risk-assessments/" + riskAssessmentId, body);
        }
    };
    /**
     * Delete risk assessment associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
     **/
    RiskAssessmentService.prototype.deleteRiskAssessment = function (jobId, workInstructionId, riskAssessmentId) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId);
    };
    /**
     * Gets risk assessment request associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
     **/
    RiskAssessmentService.prototype.requestRiskAssessment = function (jobId, workInstructionId, riskAssessmentId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId + '/request');
    };
    /**
     * Gets risk assessment approved request associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
     **/
    RiskAssessmentService.prototype.approveRiskAssessment = function (jobId, workInstructionId, riskAssessmentId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId + '/approve');
    };
    /**
     * Gets risk assessment decline request associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskAssessment.
     **/
    RiskAssessmentService.prototype.declineRiskAssessment = function (jobId, workInstructionId, riskAssessmentId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId + '/decline');
    };
    /**
    * Gets risk assessment question associated with the job,riskassessmentid and workinstructionId.
    * @param {number} jobId Unique identifier of the job.
    * @param {number} workInstructionId Unique identifier of the workInstruction.
    **/
    RiskAssessmentService.prototype.getQuestions = function (jobId, workInstructionId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/questions');
    };
    /**
     * Gets risk assessment question response associated with the job,riskassessmentid and workinstructionId.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
    * @param {number} riskAssessmentId Unique identifier of the riskassessmentId.
     **/
    RiskAssessmentService.prototype.getRiskAssessmentResponses = function (jobId, workInstructionId, riskAssessmentId) {
        return this.get(this.baseUrl + '/' + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/questions');
    };
    /**
     * Add or update riskassessment question response.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskassessment.
     * @param {RiskAssessmentResponse} riskAssessmentResponse riskassessment response object.
     **/
    RiskAssessmentService.prototype.saveRiskAssessmentResponse = function (jobId, workInstructionId, riskAssessmentId, riskAssessmentResponse) {
        var body = JSON.stringify(riskAssessmentResponse);
        if (riskAssessmentResponse.id == null || riskAssessmentResponse.id == 0) {
            return this.post(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/responses', body);
        }
        else {
            return this.put(this.baseUrl + "/" + jobId + "/work-instructions/" + workInstructionId + "/risk-assessments/" + riskAssessmentId + '/responses/' + riskAssessmentResponse.id, body);
        }
    };
    /**
     * Delete RiskAssessmentResponse by jobId,workinstructionId,riskassessmentId and riskassessmentResponse.
     * @param {number} jobId Unique identifier of the job.
     * @param {number} workInstructionId Unique identifier of the workInstruction.
     * @param {number} riskAssessmentId Unique identifier of the riskassessment.
     * @param {number} riskAssessmentResponse Unique id for riskAssessmentResponse.
     **/
    RiskAssessmentService.prototype.deleteRiskAssessmentResponse = function (jobId, workInstructionId, riskAssessmentId, riskAssessmentResponse) {
        return this.delete(this.baseUrl + "/" + jobId + '/work-instructions/' + workInstructionId + '/risk-assessments/' + riskAssessmentId + 'responses' + riskAssessmentResponse);
    };
    return RiskAssessmentService;
}(authenticated_service_base_1.AuthenticatedServiceBase));
RiskAssessmentService = __decorate([
    core_1.Injectable(),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, http_1.Http,
        state_service_1.StateService])
], RiskAssessmentService);
exports.RiskAssessmentService = RiskAssessmentService;


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var address_model_1 = __webpack_require__(28);
var address_service_1 = __webpack_require__(29);
var common_service_1 = __webpack_require__(40);
/**
 * Component to handle editing an Address
 */
var AddressDetailComponent = (function (_super) {
    __extends(AddressDetailComponent, _super);
    function AddressDetailComponent(modalService, route, router, commonService, notificationService, addressService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.commonService = commonService;
        _this.notificationService = notificationService;
        _this.addressService = addressService;
        _this.address = new address_model_1.Address();
        _this.processing = false;
        return _this;
    }
    AddressDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.commonService.getStates()
            .subscribe(function (s) {
            _this.states = s.json();
            _this.loadAddress();
        }, function (e) {
            console.log(e._body);
        });
    };
    /**
     * Loads Address data based on {id} route parameter
     */
    AddressDetailComponent.prototype.loadAddress = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.addressService.getAddress(+params['id']); })
            .subscribe(function (address) {
            _this.address = address.json();
            _this.processing = false;
        }, function (error) {
            _this.router.navigate(['/admin/addresses']);
            _this.processing = false;
        });
    };
    /**
     * Saves the Address
     */
    AddressDetailComponent.prototype.saveAddress = function () {
        var _this = this;
        this.processing = true;
        this.addressService.saveAddress(this.address)
            .subscribe(function (response) {
            var r = response.json();
            _this.notificationService.notify('success', 'Address was saved successfully.');
            _this.processing = false;
            window.scrollTo(0, 0);
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /**
     * Deletes the Address by provided address id
     */
    AddressDetailComponent.prototype.deleteAddress = function () {
        var _this = this;
        this.processing = true;
        this.addressService.deleteAddress(this.address.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', "The address has been deleted.");
            _this.closeModal('deleteAddress');
            _this.processing = false;
            _this.router.navigate(['/admin/addresses']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('deleteAddress');
        });
    };
    return AddressDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
AddressDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(294)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        common_service_1.CommonService,
        notification_service_1.NotificationService,
        address_service_1.AddressService,
        state_service_1.StateService])
], AddressDetailComponent);
exports.AddressDetailComponent = AddressDetailComponent;


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var address_model_1 = __webpack_require__(28);
var address_service_1 = __webpack_require__(29);
/**
 * Component for displaying a list of AR terms
 */
var AddressComponent = (function (_super) {
    __extends(AddressComponent, _super);
    function AddressComponent(modalService, notificationService, addressService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.addressService = addressService;
        _this.addressesLoading = false;
        _this.addressesConfig = address_model_1.adminaddressFullDataTableConfig;
        _this.newAddress = new address_model_1.Address();
        return _this;
    }
    AddressComponent.prototype.ngOnInit = function () {
        this.loadAddresses();
    };
    /**
     * Loads the listing of Addresses
     */
    AddressComponent.prototype.loadAddresses = function () {
        var _this = this;
        this.addressesLoading = true;
        this.addressService.getAddresses(this.addressesConfig, this.addressesPagination).subscribe(function (addresses) {
            _this.addresses = addresses.json();
            _this.addressesPagination = _this.getPagination(addresses);
            _this.addressesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.addressesLoading = false;
        });
    };
    /*
    * Called after an address has been created to reload grids/datasets with addresses so
    * they will include the newly created address.  Also closes the add address modal window.
    */
    AddressComponent.prototype.createAddress = function (event) {
        if (event) {
            this.newAddress = new address_model_1.Address();
            this.loadAddresses();
        }
        this.closeModal('addAddress');
    };
    return AddressComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
AddressComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(295)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        address_service_1.AddressService,
        state_service_1.StateService])
], AddressComponent);
exports.AddressComponent = AddressComponent;


/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var ar_term_model_1 = __webpack_require__(43);
var ar_terms_service_1 = __webpack_require__(24);
/**
 * Component for adding a new AR term
 */
var ARTermsAddComponent = (function (_super) {
    __extends(ARTermsAddComponent, _super);
    function ARTermsAddComponent(modalService, route, router, notificationService, arTermService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.arTermService = arTermService;
        _this.arTerm = new ar_term_model_1.ARTerm();
        _this.processing = false;
        return _this;
    }
    /**
     * Saves the AR term via the ARTermService
     */
    ARTermsAddComponent.prototype.saveARTerm = function () {
        var _this = this;
        this.processing = true;
        this.arTermService.saveARTerm(this.arTerm)
            .subscribe(function (response) {
            var r = response.json();
            _this.notificationService.notify('success', _this.arTerm.name + ' was saved successfully.');
            _this.router.navigate(['/admin/ar-terms/detail', r.id]);
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    return ARTermsAddComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ARTermsAddComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(296)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        ar_terms_service_1.ARTermService,
        state_service_1.StateService])
], ARTermsAddComponent);
exports.ARTermsAddComponent = ARTermsAddComponent;


/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var ar_term_model_1 = __webpack_require__(43);
var ar_terms_service_1 = __webpack_require__(24);
/**
 * Component to handle editing an AR term
 */
var ARTermsDetailComponent = (function (_super) {
    __extends(ARTermsDetailComponent, _super);
    function ARTermsDetailComponent(modalService, route, router, notificationService, arTermsService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.arTermsService = arTermsService;
        _this.arTerm = new ar_term_model_1.ARTerm();
        _this.processing = false;
        return _this;
    }
    ARTermsDetailComponent.prototype.ngOnInit = function () {
        this.loadARTerm();
    };
    /**
     * Loads AR term data based on {id} route parameter
     */
    ARTermsDetailComponent.prototype.loadARTerm = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.arTermsService.getARTerm(+params['id']); })
            .subscribe(function (arTerm) {
            _this.arTerm = arTerm.json();
            _this.processing = false;
        }, function (error) {
            _this.router.navigate(['/admin/ar-terms']);
            _this.processing = false;
        });
    };
    /**
     * Saves the AR term via the ARTermService
     */
    ARTermsDetailComponent.prototype.saveARTerm = function () {
        var _this = this;
        this.processing = true;
        this.arTermsService.saveARTerm(this.arTerm)
            .subscribe(function (response) {
            var r = response.json();
            _this.notificationService.notify('success', _this.arTerm.name + ' was saved successfully.');
            _this.processing = false;
            window.scrollTo(0, 0);
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /**
     * Deletes the AR term via the ARTermService
     */
    ARTermsDetailComponent.prototype.deleteARTerm = function () {
        var _this = this;
        this.processing = true;
        this.arTermsService.deleteARTerm(this.arTerm.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', "The '" + _this.arTerm.name + "' AR Term has been deleted.");
            _this.closeModal('deleteARTerm');
            _this.processing = false;
            _this.router.navigate(['/admin/ar-terms']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('deleteARTerm');
        });
    };
    return ARTermsDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ARTermsDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(297)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        ar_terms_service_1.ARTermService,
        state_service_1.StateService])
], ARTermsDetailComponent);
exports.ARTermsDetailComponent = ARTermsDetailComponent;


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var ar_term_model_1 = __webpack_require__(43);
var ar_terms_service_1 = __webpack_require__(24);
/**
 * Component for displaying a list of AR terms
 */
var ARTermsComponent = (function (_super) {
    __extends(ARTermsComponent, _super);
    function ARTermsComponent(modalService, notificationService, arTermService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.arTermService = arTermService;
        _this.areTermsLoading = false;
        _this.searchFor = '';
        _this.termsConfig = ar_term_model_1.arTermsFullDataTableConfig;
        _this.hasFullPrivileges = false;
        return _this;
    }
    ARTermsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasFullPrivileges = this.stateService.hasPrivilege('ar terms - full');
        this.termsConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'name ctn ' + _this.searchFor;
        };
        this.loadARTerms();
    };
    /**
     * Loads the listing of AR terms
     */
    ARTermsComponent.prototype.loadARTerms = function () {
        var _this = this;
        this.areTermsLoading = true;
        this.arTermService.getARTerms(this.termsConfig, this.termsPagination).subscribe(function (arTerms) {
            _this.arTerms = arTerms.json();
            _this.termsPagination = _this.getPagination(arTerms);
            _this.areTermsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areTermsLoading = false;
        });
    };
    /**
     * Fires when the filter is changed to reload the list of
     * AR terms filtered by the provided string.
     */
    ARTermsComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadARTerms();
        }
    };
    return ARTermsComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ARTermsComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(298)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        ar_terms_service_1.ARTermService,
        state_service_1.StateService])
], ARTermsComponent);
exports.ARTermsComponent = ARTermsComponent;


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var role_model_1 = __webpack_require__(46);
var role_service_1 = __webpack_require__(25);
/**
 * Component for adding a new role
 */
var RoleAddComponent = (function (_super) {
    __extends(RoleAddComponent, _super);
    function RoleAddComponent(modalService, route, router, notificationService, roleService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.roleService = roleService;
        _this.role = new role_model_1.Role();
        _this.processing = false;
        return _this;
    }
    /**
     * Saves the new role via the RoleService
     */
    RoleAddComponent.prototype.saveRole = function () {
        var _this = this;
        this.processing = true;
        this.roleService.saveRole(this.role)
            .subscribe(function (response) {
            var r = response.json();
            _this.notificationService.notify('success', _this.role.name + ' was saved successfully.');
            _this.router.navigate(['/admin/roles/detail', r.id]);
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    return RoleAddComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
RoleAddComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(299)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        role_service_1.RoleService,
        state_service_1.StateService])
], RoleAddComponent);
exports.RoleAddComponent = RoleAddComponent;


/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var _ = __webpack_require__(23);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var role_model_1 = __webpack_require__(46);
var role_service_1 = __webpack_require__(25);
var permission_service_1 = __webpack_require__(58);
var user_grid_model_1 = __webpack_require__(95);
var pagination_model_1 = __webpack_require__(11);
/**
 * Component for editing or deleting a role
 */
var RoleDetailComponent = (function (_super) {
    __extends(RoleDetailComponent, _super);
    function RoleDetailComponent(modalService, route, router, notificationService, roleService, permissionService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.roleService = roleService;
        _this.permissionService = permissionService;
        _this.role = new role_model_1.Role();
        _this.processing = false;
        _this.usersLoading = false;
        _this.usersPagination = new pagination_model_1.Pagination(null);
        _this.usersConfig = user_grid_model_1.userFullDataTableConfig;
        _this.userSearchFor = '';
        _this.permissionsLoading = false;
        return _this;
    }
    RoleDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadRole();
        this.loadAllPermissions();
        this.usersConfig.filter = function () {
            if (_this.userSearchFor.length == 0) {
                return null;
            }
            return 'emailAddress ctn ' + _this.userSearchFor; // + ' or ' +
            //'alias ctn ' + this.searchFor + ' or ' +
            //'phoneNumber ctn ' + this.searchFor + ' or ' +
            //'website ctn ' + this.searchFor + ' or ' +
            //'faxNumber ctn ' + this.searchFor;
        };
    };
    /**
     * Loads the role based on the {id} route parameter
     */
    RoleDetailComponent.prototype.loadRole = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.roleService.getRole(+params['id']); })
            .subscribe(function (role) {
            _this.role = role.json();
            _this.processing = false;
            _this.loadPermissions();
            _this.loadUsers();
        }, function (error) {
            _this.router.navigate(['/admin/roles']);
            _this.processing = false;
        });
    };
    /**
     * Saves the role via the RoleService
     */
    RoleDetailComponent.prototype.saveRole = function () {
        var _this = this;
        this.processing = true;
        this.roleService.saveRole(this.role)
            .subscribe(function (response) {
            var r = response.json();
            _this.notificationService.notify('success', _this.role.name + ' was saved successfully.');
            _this.processing = false;
            window.scrollTo(0, 0);
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /**
     * Gets a listing of all permissions
     */
    RoleDetailComponent.prototype.loadAllPermissions = function () {
        var _this = this;
        this.permissionService.getPermissions()
            .subscribe(function (response) {
            _this.allPermissions = response.json();
        }, function (error) {
            _this.notificationService.notify('error', error);
        });
    };
    /**
     * Loads a listing of all users associated with the current role
     */
    RoleDetailComponent.prototype.loadUsers = function () {
        var _this = this;
        this.usersLoading = true;
        this.roleService.getUsers(this.role.id, this.usersConfig, this.usersPagination)
            .subscribe(function (response) {
            _this.users = response.json();
            _this.usersPagination = _this.getPagination(response);
            _this.usersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.usersLoading = false;
        });
    };
    /**
     * Loads the permissions associated with this role
     */
    RoleDetailComponent.prototype.loadPermissions = function () {
        var _this = this;
        this.permissionsLoading = true;
        var permPagination = new pagination_model_1.Pagination(null);
        permPagination.pageSize = 500;
        this.roleService.getPermissions(this.role.id, null, permPagination)
            .subscribe(function (response) {
            _this.permissions = response.json();
            _this.permissionGroups = _.groupBy(_this.allPermissions, 'groupName');
            _this.permissionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.permissionsLoading = false;
        });
    };
    /**
     * Filters users based on input provided from user
     */
    RoleDetailComponent.prototype.userFilterChanged = function () {
        if (this.userSearchFor.length > 1) {
            this.loadUsers();
        }
    };
    /**
     * Toggles whether a permission should be associated with the role
     * @param {Permission} permission Permission to add/remove from the role
     */
    RoleDetailComponent.prototype.togglePermission = function (permission) {
        if (this.isInRole(permission.id)) {
            this.removePermission(permission);
        }
        else {
            this.addPermission(permission);
        }
    };
    /**
     * Removes a permission from the role
     * @param {Permission} permission Permission to remove from the role
     */
    RoleDetailComponent.prototype.removePermission = function (permission) {
        var _this = this;
        this.roleService.deletePermission(this.role.id, permission.id)
            .subscribe(function (response) {
            _this.permissions = _.without(_this.permissions, _.find(_this.permissions, function (o) { return o.id == permission.id; }));
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.permissionsLoading = false;
        });
    };
    /**
     * Adds a permission to the role
     * @param {Permission} permission Permission to add to the role
     */
    RoleDetailComponent.prototype.addPermission = function (permission) {
        var _this = this;
        this.roleService.addPermission(this.role.id, permission)
            .subscribe(function (response) {
            _this.permissions.push(permission);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.permissionsLoading = false;
        });
    };
    /**
     * Returns boolean of whether the provided permission exists in the role
     * @param {number} permissionId Unique identifier of the permission
     */
    RoleDetailComponent.prototype.isInRole = function (permissionId) {
        return _.find(this.permissions, function (o) { return o.id == permissionId; }) != null;
    };
    /**
     * Deletes the role via the RoleService
     */
    RoleDetailComponent.prototype.deleteRole = function () {
        var _this = this;
        this.processing = true;
        this.roleService.deleteRole(this.role.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', "The '" + _this.role.name + "' role has been deleted.");
            _this.closeModal('deleteRole');
            _this.processing = false;
            _this.router.navigate(['/admin/roles']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('deleteRole');
        });
    };
    return RoleDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
RoleDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(300)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        role_service_1.RoleService,
        permission_service_1.PermissionService,
        state_service_1.StateService])
], RoleDetailComponent);
exports.RoleDetailComponent = RoleDetailComponent;


/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var role_model_1 = __webpack_require__(46);
var role_service_1 = __webpack_require__(25);
/**
 * Component for use in displaying a listing of roles
 */
var RoleComponent = (function (_super) {
    __extends(RoleComponent, _super);
    function RoleComponent(modalService, notificationService, roleService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.roleService = roleService;
        _this.areRolesLoading = false;
        _this.searchFor = '';
        _this.rolesConfig = role_model_1.roleFullDataTableConfig;
        _this.hasFullPrivileges = false;
        return _this;
    }
    RoleComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasFullPrivileges = this.stateService.hasPrivilege('roles - full');
        this.rolesConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'name ctn ' + _this.searchFor;
        };
        this.loadRoles();
    };
    /**
     * Loads the list of roles via the RoleService
     */
    RoleComponent.prototype.loadRoles = function () {
        var _this = this;
        this.areRolesLoading = true;
        this.roleService.getRoles(this.rolesConfig, this.rolePagination).subscribe(function (roles) {
            _this.roles = roles.json();
            _this.rolePagination = _this.getPagination(roles);
            _this.areRolesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areRolesLoading = false;
        });
    };
    /**
     * Filters the listing of roles
     */
    RoleComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadRoles();
        }
    };
    return RoleComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
RoleComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(301)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        role_service_1.RoleService,
        state_service_1.StateService])
], RoleComponent);
exports.RoleComponent = RoleComponent;


/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var user_service_1 = __webpack_require__(34);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var user_grid_model_1 = __webpack_require__(95);
/**
 * Component for displaying a listing of users
 */
var UserComponent = (function (_super) {
    __extends(UserComponent, _super);
    function UserComponent(modalService, notificationService, userService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.userService = userService;
        _this.areUsersLoading = false;
        _this.searchFor = '';
        _this.userConfig = user_grid_model_1.userFullDataTableConfig;
        return _this;
    }
    UserComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.userConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'fullName ctn ' + _this.searchFor;
            //return 'emailAddress ctn ' + this.searchFor + ' or ' + 
            //'alias ctn ' + this.searchFor + ' or ' +
            //'phoneNumber ctn ' + this.searchFor + ' or ' +
            //'website ctn ' + this.searchFor + ' or ' +
            //'faxNumber ctn ' + this.searchFor;
        };
        this.loadUsers();
    };
    /**
     * Loads the listing of users
     */
    UserComponent.prototype.loadUsers = function () {
        var _this = this;
        this.areUsersLoading = true;
        this.userService.getUsers(this.userConfig, this.usersPagination).subscribe(function (users) {
            _this.users = users.json();
            _this.usersPagination = _this.getPagination(users);
            _this.areUsersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areUsersLoading = false;
        });
    };
    /**
     * Filters the users
     */
    UserComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadUsers();
        }
    };
    /**
  * Clear the users fliter
  */
    UserComponent.prototype.filterClear = function () {
        this.searchFor = '';
        this.loadUsers();
    };
    return UserComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
UserComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(302)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        user_service_1.UserService,
        state_service_1.StateService])
], UserComponent);
exports.UserComponent = UserComponent;


/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
/**
 * Component for auth area of application
 */
var AuthComponent = (function () {
    function AuthComponent() {
    }
    return AuthComponent;
}());
AuthComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(303)
    })
], AuthComponent);
exports.AuthComponent = AuthComponent;


/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var auth_service_1 = __webpack_require__(39);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var user_login_model_1 = __webpack_require__(279);
/**
 * Component used for the login page
 */
var LoginComponent = (function () {
    function LoginComponent(_router, _authService, _notificationService, renderer, _stateService) {
        this._router = _router;
        this._authService = _authService;
        this._notificationService = _notificationService;
        this.renderer = renderer;
        this._stateService = _stateService;
        this.loginModel = new user_login_model_1.UserLogin();
        this.submitPending = false;
    }
    // TO DO: Log In button does not become enabled unless I click inside the password edit.
    //@ViewChild('emailAddress')
    //emailAddress: any;
    //ngOnInit() {
    //    //this.emailAddress.nativeElement.focus();
    //    this.renderer.invokeElementMethod(this.emailAddress.nativeElement, 'focus');
    //}
    /**
     * Calls the AuthService to authenticate the user
     */
    LoginComponent.prototype.login = function () {
        var _this = this;
        this.submitPending = true;
        this._authService.login(this.loginModel.emailAddress, this.loginModel.password)
            .subscribe(function (s) {
            _this.submitPending = false;
            _this._router.navigate(['']);
        }, function (e) {
            console.log(e);
            _this.submitPending = false;
            _this._notificationService.notify('error', e._body);
        });
    };
    return LoginComponent;
}());
LoginComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(304)
    }),
    __metadata("design:paramtypes", [router_1.Router,
        auth_service_1.AuthService,
        notification_service_1.NotificationService,
        core_1.Renderer,
        state_service_1.StateService])
], LoginComponent);
exports.LoginComponent = LoginComponent;


/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var auth_service_1 = __webpack_require__(39);
/**
 * Component for logging a user out of the application
 */
var LogoutComponent = (function () {
    function LogoutComponent(_router, _authService) {
        this._router = _router;
        this._authService = _authService;
    }
    LogoutComponent.prototype.ngOnInit = function () {
        this.logout();
    };
    /**
     * Logs the user out and redirects them
     */
    LogoutComponent.prototype.logout = function () {
        this._authService.logout();
        this._router.navigate(['']);
    };
    ;
    return LogoutComponent;
}());
LogoutComponent = __decorate([
    core_1.Component({
        template: ''
    }),
    __metadata("design:paramtypes", [router_1.Router,
        auth_service_1.AuthService])
], LogoutComponent);
exports.LogoutComponent = LogoutComponent;


/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var ar_terms_service_1 = __webpack_require__(24);
var client_service_1 = __webpack_require__(12);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var authenticated_component_base_1 = __webpack_require__(6);
var client_model_1 = __webpack_require__(35);
/*
* Component used to add a new client
*/
var ClientAddComponent = (function (_super) {
    __extends(ClientAddComponent, _super);
    function ClientAddComponent(router, modalService, notificationService, arTermService, stateService, clientService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.router = router;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.arTermService = arTermService;
        _this.stateService = stateService;
        _this.clientService = clientService;
        _this.client = new client_model_1.Client();
        _this.processing = false;
        return _this;
    }
    ClientAddComponent.prototype.ngOnInit = function () {
        this.loadARTerms();
    };
    /*
    * Loads listing of AR terms so user can select one for the new client
    */
    ClientAddComponent.prototype.loadARTerms = function () {
        var _this = this;
        this.processing = true;
        this.arTermService.getARTerms()
            .subscribe(function (arTerms) {
            _this.arTerms = arTerms.json();
            _this.processing = false;
        }, function (error) {
            _this.processing = false;
        });
    };
    /*
    * Saves the new client and redirect to client listing
    */
    ClientAddComponent.prototype.saveClient = function () {
        var _this = this;
        this.processing = true;
        this.clientService.saveClient(this.client)
            .subscribe(function (client) {
            _this.client = client.json();
            _this.processing = false;
            _this.stateService.refreshToken();
            _this.router.navigate(['/clients', _this.client.id]);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    return ClientAddComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ClientAddComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(305)
    }),
    __metadata("design:paramtypes", [router_1.Router,
        modal_service_1.ModalService,
        notification_service_1.NotificationService,
        ar_terms_service_1.ARTermService,
        state_service_1.StateService,
        client_service_1.ClientService])
], ClientAddComponent);
exports.ClientAddComponent = ClientAddComponent;


/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var address_service_1 = __webpack_require__(29);
var ar_terms_service_1 = __webpack_require__(24);
var client_service_1 = __webpack_require__(12);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var pagination_model_1 = __webpack_require__(11);
var client_model_1 = __webpack_require__(35);
var address_model_1 = __webpack_require__(28);
var contact_model_1 = __webpack_require__(36);
var job_model_1 = __webpack_require__(14);
var location_model_1 = __webpack_require__(37);
var transaction_model_1 = __webpack_require__(15);
var user_model_1 = __webpack_require__(16);
/*
* Component for editing or archiving a client
*/
var ClientDetailComponent = (function (_super) {
    __extends(ClientDetailComponent, _super);
    function ClientDetailComponent(modalService, route, router, notificationService, addressService, arTermService, clientService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.addressService = addressService;
        _this.arTermService = arTermService;
        _this.clientService = clientService;
        _this.client = new client_model_1.Client();
        _this.processing = false;
        _this.newJob = new job_model_1.Job();
        _this.selectedAddress = new address_model_1.Address();
        _this.selectedContact = new contact_model_1.Contact();
        _this.newLocation = new location_model_1.Location();
        _this.newContact = new contact_model_1.Contact();
        _this.locationsLoading = false;
        _this.locationsPagination = new pagination_model_1.Pagination(null);
        _this.locationsConfig = location_model_1.locationFullDataTableConfig;
        _this.jobsLoading = false;
        _this.jobsPagination = new pagination_model_1.Pagination(null);
        _this.jobsConfig = job_model_1.jobFullDataTableConfig;
        _this.contactsLoading = false;
        _this.contactsPagination = new pagination_model_1.Pagination(null);
        _this.contactsConfig = contact_model_1.contactFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        return _this;
    }
    ClientDetailComponent.prototype.ngOnInit = function () {
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.loadARTerms();
        this.loadAllLocations();
        this.loadClient();
    };
    /*
* Loads all AR terms for drop down of terms
*/
    ClientDetailComponent.prototype.loadARTerms = function () {
        var _this = this;
        this.arTermService.getARTerms()
            .subscribe(function (arTerms) {
            _this.arTerms = arTerms.json();
        }, function (error) {
        });
    };
    /*
    * Loads all locations for the current client
    */
    ClientDetailComponent.prototype.loadAllLocations = function () {
        var _this = this;
        this.route.params
            .switchMap(function (params) { return _this.clientService.getLocations(+params['id']); })
            .subscribe(function (location) {
            _this.allLocations = location.json();
        }, function (error) {
        });
    };
    /*
    * Loads the clients information and then loads subsequent datasets for the client
    */
    ClientDetailComponent.prototype.loadClient = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.clientService.getClient(+params['id']); })
            .subscribe(function (client) {
            _this.client = client.json();
            _this.newLocation.clientId = _this.client.id;
            _this.newContact.clientId = _this.client.id;
            _this.newJob.clientId = _this.client.id;
            _this.processing = false;
            _this.loadTransactions();
            _this.loadLocations();
            _this.loadJobs();
            _this.loadContacts();
        }, function (error) {
            _this.router.navigate(['/clients']);
            _this.processing = false;
        });
    };
    /*
    * Loads locations associated with the client for the Location grid in the UI
    */
    ClientDetailComponent.prototype.loadLocations = function () {
        var _this = this;
        this.locationsLoading = true;
        this.clientService.getLocations(this.client.id, this.locationsConfig, this.locationsPagination)
            .subscribe(function (response) {
            _this.locations = response.json();
            _this.locationsPagination = _this.getPagination(response);
            _this.locationsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.locationsLoading = false;
        });
    };
    /*
    * Loads jobs associated with the client for the Job grid in the UI
    */
    ClientDetailComponent.prototype.loadJobs = function () {
        var _this = this;
        this.jobsLoading = true;
        this.clientService.getJobs(this.client.id, this.jobsConfig, this.jobsPagination)
            .subscribe(function (response) {
            _this.jobs = response.json();
            _this.jobsPagination = _this.getPagination(response);
            if (_this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact && _this.jobs != null) {
                _this.newJob.clientId = _this.jobs[0].clientId;
                //this.newJob.locationId = this.jobs[0].locationId;
            }
            _this.jobsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobsLoading = false;
        });
    };
    /*
    * Loads contacts associated with the client for the Contact grid in the UI
    */
    ClientDetailComponent.prototype.loadContacts = function () {
        var _this = this;
        this.contactsLoading = true;
        this.clientService.getContacts(this.client.id, this.contactsConfig, this.contactsPagination)
            .subscribe(function (response) {
            _this.contacts = response.json();
            _this.contactsPagination = _this.getPagination(response);
            _this.contactsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.contactsLoading = false;
        });
    };
    /*
    * Loads transactions associated with the client
    */
    ClientDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.clientService.getTransactions(this.client.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    /*
    * Saves the client object
    */
    ClientDetailComponent.prototype.saveClient = function () {
        var _this = this;
        this.processing = true;
        this.clientService.saveClient(this.client)
            .subscribe(function (client) {
            _this.notificationService.notify('success', _this.client.name + ' updated successfully.');
            _this.processing = false;
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    /*
    * Called after a location has been created to reload grids/datasets with locations so
    * they will include the newly created location.  Also closes the add location modal window.
    */
    ClientDetailComponent.prototype.saveLocation = function (event) {
        if (event) {
            this.newLocation = new location_model_1.Location();
            this.newLocation.clientId = this.client.id;
            this.loadLocations();
            this.loadAllLocations();
        }
        this.closeModal('addLocation');
    };
    /*
    * Archives the current client
    */
    ClientDetailComponent.prototype.archiveClient = function () {
        var _this = this;
        this.processing = true;
        this.clientService.deleteClient(this.client.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.client.name + "' has been archived.");
            _this.closeModal('archiveClient');
            _this.processing = false;
            _this.router.navigate(['/clients']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveClient');
        });
    };
    /*
    * Called after a contact has been created to reload grids/datasets with contacts so
    * they will include the newly created contact.  Also closes the add contact modal window.
    */
    ClientDetailComponent.prototype.createContact = function (event) {
        if (event) {
            this.newContact = new contact_model_1.Contact();
            this.newContact.clientId = this.client.id;
            this.loadContacts();
        }
        this.closeModal('addContact');
    };
    /*
    * Called after a job has been created to reload grids/datasets with jobs so
    * they will include the newly created job.  Also closes the add job modal window.
    */
    ClientDetailComponent.prototype.createJob = function (job) {
        if (job) {
            this.newJob = new job_model_1.Job();
            this.newJob.clientId = this.client.id;
            this.loadJobs();
        }
        this.closeModal('addJob');
    };
    return ClientDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ClientDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(306)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        address_service_1.AddressService,
        ar_terms_service_1.ARTermService,
        client_service_1.ClientService,
        state_service_1.StateService])
], ClientDetailComponent);
exports.ClientDetailComponent = ClientDetailComponent;


/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var client_service_1 = __webpack_require__(12);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var client_model_1 = __webpack_require__(35);
/*
* Component for displaying list of clients
*/
var ClientComponent = (function (_super) {
    __extends(ClientComponent, _super);
    function ClientComponent(modalService, notificationService, clientService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.clientService = clientService;
        _this.areClientsLoading = false;
        _this.searchFor = '';
        _this.clientsConfig = client_model_1.clientFullDataTableConfig;
        _this.hasFullPrivileges = false;
        return _this;
    }
    ClientComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasFullPrivileges = this.stateService.hasPrivilege('clients - full');
        this.clientsConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'name ctn ' + _this.searchFor; // + ' or ' +
            //'alias ctn ' + this.searchFor + ' or ' +
            //'phoneNumber ctn ' + this.searchFor + ' or ' +
            //'website ctn ' + this.searchFor + ' or ' +
            //'faxNumber ctn ' + this.searchFor;
        };
        this.loadClients();
    };
    /*
    * Loads clients to the UI grid
    */
    ClientComponent.prototype.loadClients = function () {
        var _this = this;
        this.areClientsLoading = true;
        this.clientService.getClients(this.clientsConfig, this.clientPagination).subscribe(function (clients) {
            _this.clients = clients.json();
            _this.clientPagination = _this.getPagination(clients);
            _this.areClientsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areClientsLoading = false;
        });
    };
    /*
    * Reloads the grid of clients when the searchFor value has changed
    */
    ClientComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadClients();
        }
    };
    return ClientComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
ClientComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(307)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        client_service_1.ClientService,
        state_service_1.StateService])
], ClientComponent);
exports.ClientComponent = ClientComponent;


/***/ }),
/* 76 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var platform_browser_1 = __webpack_require__(18);
var _ = __webpack_require__(23);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var role_service_1 = __webpack_require__(25);
var state_service_1 = __webpack_require__(2);
var user_service_1 = __webpack_require__(34);
var contact_service_1 = __webpack_require__(32);
var address_model_1 = __webpack_require__(28);
var transaction_model_1 = __webpack_require__(15);
var user_model_1 = __webpack_require__(16);
var phone_mask_1 = __webpack_require__(91);
var ssn_mask_1 = __webpack_require__(92);
var pagination_model_1 = __webpack_require__(11);
var contact_model_1 = __webpack_require__(36);
/*
* Component for editing or archiving a contact
*/
var ContactDetailComponent = (function (_super) {
    __extends(ContactDetailComponent, _super);
    function ContactDetailComponent(sanitizer, modalService, route, router, roleService, userService, notificationService, contactService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.sanitizer = sanitizer;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.roleService = roleService;
        _this.userService = userService;
        _this.notificationService = notificationService;
        _this.contactService = contactService;
        _this.phoneMask = phone_mask_1.phoneMask;
        _this.ssnMask = ssn_mask_1.ssnMask;
        _this.contact = new contact_model_1.Contact();
        _this.address = new address_model_1.Address();
        _this.user = new user_model_1.User();
        _this.processing = false;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        return _this;
    }
    ContactDetailComponent.prototype.ngOnInit = function () {
        this.loadContact();
        this.loadRoles();
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
    };
    /*
    * Loads all Roles
    */
    ContactDetailComponent.prototype.loadRoles = function () {
        var _this = this;
        this.roleService.getRoles()
            .subscribe(function (success) {
            _this.roles = success.json();
        }, function (error) { });
    };
    /*
    * Loads the contact information and then loads subsequent datasets for the contact
    */
    ContactDetailComponent.prototype.loadContact = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.contactService.getContact(+params['contactId']); })
            .subscribe(function (contact) {
            _this.contact = contact.json();
            _this.processing = false;
            _this.loadUser();
            _this.loadUserRoles();
            _this.loadTransactions();
        }, function (error) {
            _this.router.navigate(['/clients']);
            _this.processing = false;
        });
    };
    /*
    * Loads transactions associated with the contact
    */
    ContactDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.contactService.getTransactions(this.contact.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    /*
   * Saves the contact object
   */
    ContactDetailComponent.prototype.saveContact = function () {
        var _this = this;
        this.processing = true;
        this.contactService.saveContact(this.contact)
            .subscribe(function (response) {
            _this.notificationService.notify('success', _this.contact.firstName + ' ' + _this.contact.lastName + ' was saved successfully.');
            _this.processing = false;
            window.scrollTo(0, 0);
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /*
    * Loads user associated with the contact
    */
    ContactDetailComponent.prototype.loadUser = function () {
        var _this = this;
        if (this.contact && this.contact.userId) {
            this.contactService.getUser(this.contact.id)
                .subscribe(function (user) {
                _this.user = user.json();
                if (_this.contact.emailAddress) {
                    _this.user.emailAddress = _this.contact.emailAddress;
                }
                if (_this.user.profileImage) {
                    _this.profileImage = _this.sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + _this.user.profileImage);
                }
                _this.loadUserRoles();
            }, function (error) {
            });
        }
    };
    /*
    * Saves the user associated with the contact
    */
    ContactDetailComponent.prototype.saveUser = function () {
        var _this = this;
        this.processing = true;
        if (this.contact.emailAddress) {
            this.user.emailAddress = this.contact.emailAddress;
        }
        if (((!this.user.password || this.user.password.length == 0) &&
            (!this.user.confirmPassword || this.user.confirmPassword.length == 0)) ||
            (this.user.password == this.user.confirmPassword)) {
            this.contactService.saveUser(this.contact.id, this.user)
                .subscribe(function (user) {
                _this.user = user.json();
                _this.notificationService.notify('success', 'User saved successfully.');
                _this.processing = false;
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
            });
        }
        else {
            this.notificationService.notify('error', 'Passwords must match');
            this.processing = false;
        }
    };
    /*
    * Loads user associated with the contact
    */
    ContactDetailComponent.prototype.loadUserRoles = function () {
        var _this = this;
        if (this.user && this.user.id > 0) {
            this.processing = true;
            this.userService.getRoles(this.user.id)
                .subscribe(function (success) {
                _this.userRoles = success.json();
                _this.processing = false;
            }, function (error) {
                _this.processing = false;
            });
        }
    };
    /*
    * Checks user role exist or not
    */
    ContactDetailComponent.prototype.isInRole = function (roleId) {
        return _.find(this.userRoles, function (o) { return o.id == roleId; }) != null;
    };
    /*
    * Add/Remove role by checked or unchecked the role checkbox
    */
    ContactDetailComponent.prototype.toggleRoleCheck = function (role) {
        var _this = this;
        this.processing = true;
        if (this.isInRole(role.id)) {
            this.userService.removeRole(this.user.id, role.id)
                .subscribe(function (s) {
                _this.loadUserRoles();
                _this.notificationService.notify('warning', 'Removed ' + role.name + ' role from user.');
                _this.processing = false;
            }, function (e) {
                _this.notificationService.notify('error', 'There was a problem removing this role.  Please try again.');
                _this.processing = false;
            });
        }
        else {
            this.userService.addRole(this.user.id, role.id)
                .subscribe(function (s) {
                _this.loadUserRoles();
                _this.notificationService.notify('success', 'Added ' + role.name + ' role to user.');
                _this.processing = false;
            }, function (e) {
                _this.notificationService.notify('error', 'There was a problem adding this role.  Please try again.');
                _this.processing = false;
            });
        }
    };
    /*
    * Saves the profile image of the user associated with the contact
    */
    ContactDetailComponent.prototype.saveProfileImage = function () {
        var _this = this;
        this.processing = true;
        if (this.user && this.user.id > 0) {
            var fi = this.fileInput.nativeElement;
            if (fi.files && fi.files[0]) {
                var fileToUpload = fi.files[0];
                this.userService.saveProfileImage(this.user.id, fileToUpload).subscribe(function (r) {
                    _this.notificationService.notify('success', "Profile image updated.");
                    _this.loadUser();
                }, function (err) {
                    _this.notificationService.notify('error', err);
                    _this.processing = false;
                });
            }
            else {
                this.processing = false;
            }
        }
    };
    /*
    * Deactivates the user associated with the contact
    */
    ContactDetailComponent.prototype.deactivateUser = function () {
        var _this = this;
        if (this.user) {
            this.processing = true;
            this.userService.archiveUser(this.user.id)
                .subscribe(function (response) {
                _this.notificationService.notify('warning', _this.contact.firstName + ' ' + _this.contact.lastName + "'s user account has been deactivated.");
                _this.closeModal('dectivateContact');
                _this.loadUser();
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
                _this.closeModal('dectivateContact');
            });
        }
    };
    /*
    * Reactivates the user associated with the contact
    */
    ContactDetailComponent.prototype.reactivateUser = function () {
        var _this = this;
        if (this.user) {
            this.processing = true;
            this.userService.unarchiveUser(this.user.id)
                .subscribe(function (response) {
                _this.notificationService.notify('success', _this.contact.firstName + ' ' + _this.contact.lastName + "'s user account has been reactivated.");
                _this.closeModal('activateContact');
                _this.loadUser();
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
                _this.closeModal('activateContact');
            });
        }
    };
    /*
    * Archives the current contact
    */
    ContactDetailComponent.prototype.archiveContact = function () {
        var _this = this;
        this.processing = true;
        this.contactService.deleteContact(this.contact.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.contact.firstName + ' ' + _this.contact.lastName + "' has been archived.");
            _this.closeModal('archiveContact');
            _this.processing = false;
            _this.router.navigate(['/clients/', _this.contact.clientId]);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveContact');
        });
    };
    return ContactDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.ViewChild("fileInput"),
    __metadata("design:type", Object)
], ContactDetailComponent.prototype, "fileInput", void 0);
ContactDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(308)
    }),
    __metadata("design:paramtypes", [platform_browser_1.DomSanitizer,
        modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        role_service_1.RoleService,
        user_service_1.UserService,
        notification_service_1.NotificationService,
        contact_service_1.ContactService,
        state_service_1.StateService])
], ContactDetailComponent);
exports.ContactDetailComponent = ContactDetailComponent;


/***/ }),
/* 77 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var client_service_1 = __webpack_require__(12);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var pagination_model_1 = __webpack_require__(11);
var contact_model_1 = __webpack_require__(36);
var job_model_1 = __webpack_require__(14);
var transaction_model_1 = __webpack_require__(15);
var location_model_1 = __webpack_require__(37);
var location_service_1 = __webpack_require__(33);
/*
* Component used to edit details of a location and its related child objects
*/
var LocationDetailComponent = (function (_super) {
    __extends(LocationDetailComponent, _super);
    function LocationDetailComponent(modalService, route, router, notificationService, locationService, clientService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.locationService = locationService;
        _this.clientService = clientService;
        _this.location = new location_model_1.Location();
        _this.newContact = new contact_model_1.Contact();
        _this.newJob = new job_model_1.Job();
        _this.processing = false;
        _this.jobsLoading = false;
        _this.jobsPagination = new pagination_model_1.Pagination(null);
        _this.jobsConfig = job_model_1.jobFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        _this.contactsLoading = false;
        _this.contactsPagination = new pagination_model_1.Pagination(null);
        _this.contactsConfig = contact_model_1.contactFullDataTableConfig;
        return _this;
    }
    LocationDetailComponent.prototype.ngOnInit = function () {
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.newJob.clientId = this.location.clientId;
        this.newJob.locationId = this.location.id;
        this.loadLocation();
    };
    /*
    * Loads the current location based on the locationId route parameter
    */
    LocationDetailComponent.prototype.loadLocation = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.locationService.getLocation(+params['locationId']); })
            .subscribe(function (location) {
            _this.location = location.json();
            _this.newContact.clientId = _this.location.clientId;
            _this.newContact.locationId = _this.location.id;
            _this.newJob.clientId = _this.location.clientId;
            _this.newJob.locationId = _this.location.id;
            _this.processing = false;
            _this.loadTransactions();
            _this.loadJobs();
            _this.loadContacts();
        }, function (error) {
            _this.router.navigate(['/clients']);
            _this.processing = false;
        });
    };
    /*
    * Loads jobs associated with the current location to the jobs grid
    */
    LocationDetailComponent.prototype.loadJobs = function () {
        var _this = this;
        this.jobsLoading = true;
        this.locationService.getJobs(this.location.id, this.jobsConfig, this.jobsPagination)
            .subscribe(function (response) {
            _this.jobs = response.json();
            _this.jobsPagination = _this.getPagination(response);
            _this.jobsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobsLoading = false;
        });
    };
    /*
    * Loads transactions associated with the current location to the timeline
    */
    LocationDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.locationService.getTransactions(this.location.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    /*
    * Loads contacts associated with the current location to the contacts grid
    */
    LocationDetailComponent.prototype.loadContacts = function () {
        var _this = this;
        this.contactsLoading = true;
        this.locationService.getContacts(this.location.id, this.contactsConfig, this.contactsPagination)
            .subscribe(function (response) {
            _this.contacts = response.json();
            _this.contactsPagination = _this.getPagination(response);
            _this.contactsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.contactsLoading = false;
        });
    };
    /*
    * Fired after saving a location.  Reloads transactions
    */
    LocationDetailComponent.prototype.saveLocation = function (event) {
        this.loadTransactions();
    };
    /*
    * Archives the current location
    */
    LocationDetailComponent.prototype.archiveLocation = function () {
        var _this = this;
        this.processing = true;
        this.locationService.deleteLocation(this.location.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.location.name + "' has been archived.");
            _this.closeModal('archiveLocation');
            _this.processing = false;
            _this.router.navigate(['/clients', _this.location.clientId]);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveLocation');
        });
    };
    /*
    * Called after a contact is created to reload the contact grid and close the add contact modal
    */
    LocationDetailComponent.prototype.createContact = function (event) {
        if (event) {
            this.newContact = new contact_model_1.Contact();
            this.newContact.clientId = this.location.clientId;
            this.newContact.locationId = this.location.id;
            this.loadContacts();
        }
        this.closeModal('addContact');
    };
    /*
    * Called after a job is created to reload the job grid and close the add job modal
    */
    LocationDetailComponent.prototype.createJob = function (job) {
        if (job) {
            this.newJob = new job_model_1.Job();
            this.newJob.clientId = this.location.clientId;
            this.newJob.locationId = this.location.id;
            this.loadJobs();
        }
        this.closeModal('addJob');
    };
    return LocationDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
LocationDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(309)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        location_service_1.LocationService,
        client_service_1.ClientService,
        state_service_1.StateService])
], LocationDetailComponent);
exports.LocationDetailComponent = LocationDetailComponent;


/***/ }),
/* 78 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var DashboardComponent = (function () {
    /**
     * Component for displaying the dashboard (to be completed later)
     */
    function DashboardComponent() {
    }
    return DashboardComponent;
}());
DashboardComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(310)
    })
    /**
     * Component for displaying the dashboard (to be completed later)
     */
], DashboardComponent);
exports.DashboardComponent = DashboardComponent;


/***/ }),
/* 79 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var employee_model_1 = __webpack_require__(44);
var employee_service_1 = __webpack_require__(19);
/**
 * Component for adding an employee
 */
var EmployeeAddComponent = (function (_super) {
    __extends(EmployeeAddComponent, _super);
    function EmployeeAddComponent(modalService, notificationService, employeeService, router, stateService, renderer) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.router = router;
        _this.renderer = renderer;
        _this.employeeStatuses = employee_model_1.employeeStatuses;
        _this.employeeTypes = employee_model_1.employeeTypes;
        _this.employee = new employee_model_1.Employee();
        _this.processing = false;
        return _this;
    }
    /**
    * Saves an employee using the employeeService
    */
    EmployeeAddComponent.prototype.saveEmployee = function () {
        var _this = this;
        this.processing = true;
        this.employeeService.saveEmployee(this.employee)
            .subscribe(function (response) {
            var emp = response.json();
            _this.router.navigate(['/employees/detail', emp.id]);
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    return EmployeeAddComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
EmployeeAddComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(311)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        router_1.Router,
        state_service_1.StateService,
        core_1.Renderer])
], EmployeeAddComponent);
exports.EmployeeAddComponent = EmployeeAddComponent;


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var platform_browser_1 = __webpack_require__(18);
var _ = __webpack_require__(23);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var role_service_1 = __webpack_require__(25);
var state_service_1 = __webpack_require__(2);
var user_service_1 = __webpack_require__(34);
var client_service_1 = __webpack_require__(12);
var employee_model_1 = __webpack_require__(44);
var employee_service_1 = __webpack_require__(19);
var address_model_1 = __webpack_require__(28);
var transaction_model_1 = __webpack_require__(15);
var user_model_1 = __webpack_require__(16);
var phone_mask_1 = __webpack_require__(91);
var ssn_mask_1 = __webpack_require__(92);
var pagination_model_1 = __webpack_require__(11);
var userclientlocation_model_1 = __webpack_require__(280);
/**
 * Component for displaying, editing & archiving employee information
 */
var EmployeeDetailComponent = (function (_super) {
    __extends(EmployeeDetailComponent, _super);
    function EmployeeDetailComponent(sanitizer, modalService, route, router, roleService, userService, clientService, notificationService, employeeService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.sanitizer = sanitizer;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.roleService = roleService;
        _this.userService = userService;
        _this.clientService = clientService;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.phoneMask = phone_mask_1.phoneMask;
        _this.ssnMask = ssn_mask_1.ssnMask;
        _this.employeeStatuses = employee_model_1.employeeStatuses;
        _this.employeeTypes = employee_model_1.employeeTypes;
        _this.employee = new employee_model_1.Employee();
        _this.address = new address_model_1.Address();
        _this.user = new user_model_1.User();
        _this.processing = false;
        _this.locationprocessing = false;
        _this.clientprocessing = false;
        _this.locationClients = new Array();
        _this.selectedClients = [];
        _this.selectedLocations = [];
        _this.isWildCard = true;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        return _this;
    }
    EmployeeDetailComponent.prototype.ngOnInit = function () {
        this.loadEmployee();
        this.loadRoles();
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
    };
    /**
     * Loads all roles available to be assigned to employees user record
     */
    EmployeeDetailComponent.prototype.loadRoles = function () {
        var _this = this;
        this.roleService.getRoles()
            .subscribe(function (success) {
            _this.roles = success.json();
        }, function (error) { });
    };
    /**
     * Loads the employee record and associated record sets
     */
    EmployeeDetailComponent.prototype.loadEmployee = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.employeeService.getEmployee(+params['id']); })
            .subscribe(function (employee) {
            _this.employee = employee.json();
            _this.processing = false;
            _this.loadAddress();
            _this.loadUser();
            _this.loadUserRoles();
            _this.loadTransactions();
        }, function (error) {
            _this.router.navigate(['/employees']);
            _this.processing = false;
        });
    };
    /**
     * Saves the employee via the employeeService
     */
    EmployeeDetailComponent.prototype.saveEmployee = function () {
        var _this = this;
        this.processing = true;
        this.employeeService.saveEmployee(this.employee)
            .subscribe(function (response) {
            var emp = response.json();
            _this.notificationService.notify('success', _this.employee.firstName + ' ' + _this.employee.lastName + ' was saved successfully.');
            _this.processing = false;
            window.scrollTo(0, 0);
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /**
     * Loads all transactions associated with the user for the timeline interface
     */
    EmployeeDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.employeeService.getTransactions(this.employee.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    /**
     * Archives an employee (and closes the user account if one exists)
     */
    EmployeeDetailComponent.prototype.archiveEmployee = function () {
        var _this = this;
        this.processing = true;
        this.employeeService.deleteEmployee(this.employee.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.employee.firstName + ' ' + _this.employee.lastName + "' has been archived.");
            _this.closeModal('archiveEmployee');
            _this.processing = false;
            _this.router.navigate(['/employees']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveEmployee');
        });
    };
    /**
     * Loads the personal address of the employee
     */
    EmployeeDetailComponent.prototype.loadAddress = function () {
        var _this = this;
        if (this.employee && this.employee.addressId) {
            this.employeeService.getAddress(this.employee.id)
                .subscribe(function (address) {
                _this.address = address.json();
            }, function (error) {
            });
        }
    };
    EmployeeDetailComponent.prototype.saveAddress = function () {
    };
    /**
     * Loads the employees user record
     */
    EmployeeDetailComponent.prototype.loadUser = function () {
        var _this = this;
        if (this.employee && this.employee.userId) {
            this.employeeService.getUser(this.employee.id)
                .subscribe(function (user) {
                _this.user = user.json();
                if (_this.user.profileImage) {
                    _this.profileImage = _this.sanitizer.bypassSecurityTrustUrl('data:image/jpg;base64,' + _this.user.profileImage);
                }
                _this.loadUserRoles();
                _this.loadClients();
            }, function (error) {
            });
        }
    };
    /**
     * Saves the employees user record
     */
    EmployeeDetailComponent.prototype.saveUser = function () {
        var _this = this;
        this.processing = true;
        if (((!this.user.password || this.user.password.length == 0) &&
            (!this.user.confirmPassword || this.user.confirmPassword.length == 0)) ||
            (this.user.password == this.user.confirmPassword)) {
            this.employeeService.saveUser(this.employee.id, this.user)
                .subscribe(function (user) {
                _this.user = user.json();
                _this.notificationService.notify('success', 'User saved successfully.');
                _this.processing = false;
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
            });
        }
        else {
            this.notificationService.notify('error', 'Passwords must match');
            this.processing = false;
        }
    };
    /**
     * Loads user roles associated with the employees user if it exists.
     */
    EmployeeDetailComponent.prototype.loadUserRoles = function () {
        var _this = this;
        if (this.user && this.user.id > 0) {
            this.processing = true;
            this.userService.getRoles(this.user.id)
                .subscribe(function (success) {
                _this.userRoles = success.json();
                _this.processing = false;
            }, function (error) {
                _this.processing = false;
            });
        }
    };
    /**
     * Filter to determine whether the user exists in the specified role
     * @param roleId {number} Unique identifier of the role to check for the users existence in
     */
    EmployeeDetailComponent.prototype.isInRole = function (roleId) {
        return _.find(this.userRoles, function (o) { return o.id == roleId; }) != null;
    };
    /**
     * Toggles adding/removing the user to or from the provided role
     * @param role {Role} Role to add/remove user to/from
     */
    EmployeeDetailComponent.prototype.toggleRoleCheck = function (role) {
        var _this = this;
        this.processing = true;
        if (this.isInRole(role.id)) {
            this.userService.removeRole(this.user.id, role.id)
                .subscribe(function (s) {
                _this.loadUserRoles();
                _this.notificationService.notify('warning', 'Removed ' + role.name + ' role from user.');
                _this.processing = false;
            }, function (e) {
                _this.notificationService.notify('error', 'There was a problem removing this role.  Please try again.');
                _this.processing = false;
            });
        }
        else {
            this.userService.addRole(this.user.id, role.id)
                .subscribe(function (s) {
                _this.loadUserRoles();
                _this.notificationService.notify('success', 'Added ' + role.name + ' role to user.');
                _this.processing = false;
            }, function (e) {
                _this.notificationService.notify('error', 'There was a problem adding this role.  Please try again.');
                _this.processing = false;
            });
        }
    };
    /**
     * Uploads and saves the employees profile image associated with their user account
     */
    EmployeeDetailComponent.prototype.saveProfileImage = function () {
        var _this = this;
        this.processing = true;
        if (this.user && this.user.id > 0) {
            var fi = this.fileInput.nativeElement;
            if (fi.files && fi.files[0]) {
                var fileToUpload = fi.files[0];
                this.userService.saveProfileImage(this.user.id, fileToUpload).subscribe(function (r) {
                    _this.notificationService.notify('success', "Profile image updated.");
                    _this.loadUser();
                    _this.processing = false;
                }, function (err) {
                    _this.notificationService.notify('error', err);
                    _this.processing = false;
                });
            }
            else {
                this.processing = false;
            }
        }
    };
    /**
     * Deactivates an employees user access
     */
    EmployeeDetailComponent.prototype.deactivateUser = function () {
        var _this = this;
        if (this.user) {
            this.processing = true;
            this.userService.archiveUser(this.user.id)
                .subscribe(function (response) {
                _this.notificationService.notify('warning', _this.employee.firstName + ' ' + _this.employee.lastName + "'s user account has been deactivated.");
                _this.closeModal('dectivateEmployee');
                _this.loadUser();
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
                _this.closeModal('dectivateEmployee');
            });
        }
    };
    /**
     * Reactivates an employees previous user account
     */
    EmployeeDetailComponent.prototype.reactivateUser = function () {
        var _this = this;
        if (this.user) {
            this.processing = true;
            this.userService.unarchiveUser(this.user.id)
                .subscribe(function (response) {
                _this.notificationService.notify('success', _this.employee.firstName + ' ' + _this.employee.lastName + "'s user account has been reactivated.");
                _this.closeModal('activateEmployee');
                _this.loadUser();
            }, function (error) {
                _this.notificationService.notify('error', error._body);
                _this.processing = false;
                _this.closeModal('activateEmployee');
            });
        }
    };
    /**
     * Loads clients for client rights assignment
     */
    EmployeeDetailComponent.prototype.loadClients = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getClients()
            .subscribe(function (response) {
            _this.clients = response.json();
            _this.loadUserClientLocations();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    /**
     * Loads locations based on selected client and loads all locations to assign access rights
     */
    EmployeeDetailComponent.prototype.loadLocations = function (event) {
        var _this = this;
        this.locations = new Array();
        this.locationprocessing = true;
        this.clientService.getLocations(event.target.value)
            .subscribe(function (response) {
            _this.locations = response.json();
            var selectedlocationIds = [];
            _this.selectedLocations = [];
            var userId = _this.employee.userId;
            selectedlocationIds = _.filter(_this.userclientlocations, function (u) { return u.userId == userId && u.clientId == event.target.value && u.locationId != null; });
            for (var i = 0; i < selectedlocationIds.length; i++) {
                _this.selectedLocations.push(selectedlocationIds[i].locationId.toString());
            }
            _this.dualbox.selectedItems = [];
            _this.dualbox.availableItems = [];
            _this.locationprocessing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.locationprocessing = false;
        });
    };
    /**
     * Loads user client locations based on employee user
     */
    EmployeeDetailComponent.prototype.loadUserClientLocations = function () {
        var _this = this;
        this.clientprocessing = true;
        this.employeeService.getUserclientlocation(this.employee.userId)
            .subscribe(function (response) {
            _this.userclientlocations = response.json();
            var userId = _this.employee.userId;
            var selectedclientIds = [];
            var selectedlocationIds = [];
            _this.selectedClients = new Array();
            if (_this.userclientlocations != null) {
                _this.isWildCard = _.some(_this.userclientlocations, function (u) { return (u.clientId == null && u.locationId == null); });
                selectedclientIds = _.filter(_this.userclientlocations, function (u) { return u.userId == userId && u.clientId != null && u.locationId == null; });
                for (var i = 0; i < selectedclientIds.length; i++) {
                    _this.selectedClients.push(selectedclientIds[i].clientId.toString());
                }
                _this.updateClients();
            }
            _this.clientprocessing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.clientprocessing = false;
        });
    };
    /**
    * Event for toggle selection to add/remove wildcard entry for user's client location
    */
    EmployeeDetailComponent.prototype.toggleAccessClientCheck = function (e) {
        this.isWildCard = !this.isWildCard;
        this.processing = true;
        if (this.isWildCard) {
            // Removes all old entries of clientuserlocation for current user
            this.removeAllUserClientLocations();
            // creates userclientlocation for wildcard entry
            var userclientLocation = new userclientlocation_model_1.UserClientLocation();
            userclientLocation.clientId = null;
            userclientLocation.locationId = null;
            userclientLocation.userId = this.employee.userId;
            this.addUserClientLocation(userclientLocation);
        }
        else {
            this.removeAllUserClientLocations();
        }
    };
    /**
    * Event for when add/remove client to selected list
    */
    EmployeeDetailComponent.prototype.onClientMove = function (item) {
        this.clientprocessing = true;
        var selectedItems;
        var userclientLocations = new Array();
        selectedItems = _.find(item.selected, function (o) { return o.value == item.movedItems[0]; });
        if (selectedItems) {
            for (var i = 0; i < item.movedItems.length; i++) {
                var userclientLocation = new userclientlocation_model_1.UserClientLocation();
                userclientLocation.clientId = item.movedItems[i];
                userclientLocation.userId = this.employee.userId;
                userclientLocation.locationId = null;
                userclientLocations.push(userclientLocation);
            }
            this.addUserClientLocations(userclientLocations);
        }
        else {
            this.removeUserClientLocationsByClient(item.movedItems);
        }
    };
    /**
    * Event for when add/remove location to selected list
    */
    EmployeeDetailComponent.prototype.onLocationMove = function (item) {
        this.locationprocessing = true;
        var selectedItems;
        var userclientLocations = new Array();
        selectedItems = _.find(item.selected, function (o) { return o.value == item.movedItems[0]; });
        if (selectedItems) {
            for (var i = 0; i < item.movedItems.length; i++) {
                var userclientLocation = new userclientlocation_model_1.UserClientLocation();
                userclientLocation.clientId = this.selectedclientId;
                userclientLocation.userId = this.employee.userId;
                userclientLocation.locationId = item.movedItems[i];
                userclientLocations.push(userclientLocation);
            }
            this.addUserClientLocations(userclientLocations);
        }
        else {
            this.removeUserClientLocationsByLocation(item.movedItems);
        }
    };
    /**
     * Updates clients based on assigned client access list
     */
    EmployeeDetailComponent.prototype.updateClients = function () {
        if (this.clients) {
            this.locationClients = this.clients.filter(function (e) { return this.indexOf(e.id.toString()) < 0; }, this.selectedClients);
            this.selectedclientId = 0;
            if (this.dualbox) {
                if (this.dualbox.selectedItems) {
                    this.dualbox.selectedItems = [];
                }
                if (this.dualbox.availableItems) {
                    this.dualbox.availableItems = [];
                }
            }
        }
    };
    /**
     * Adds user's client and location
     * @param userclientLocation {UserClientLocation} UserClientLocation object to save
    */
    EmployeeDetailComponent.prototype.addUserClientLocation = function (userclientLocation) {
        var _this = this;
        this.employeeService.createUserClientLocation(userclientLocation)
            .subscribe(function (response) {
            _this.notificationService.notify('success', "User has been updated with client(s) & location(s) access.");
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    /**
     * Adds all user's clients and locations
     * @param userclientLocations {Array<UserClientLocation>} UserClientLocation object list to save
    */
    EmployeeDetailComponent.prototype.addUserClientLocations = function (userclientLocations) {
        var _this = this;
        this.employeeService.createUserClientLocations(userclientLocations).subscribe(function (response) {
            _this.notificationService.notify('success', "User has been added with client(s) & location(s) access.");
            _this.updateClients();
            _this.clientprocessing = false;
            _this.locationprocessing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.clientprocessing = false;
            _this.locationprocessing = false;
        });
    };
    /**
     * Removes all user's clients and locations by selected clients
     * @param clients {Array<number>} Selected Client Id list to remove
    */
    EmployeeDetailComponent.prototype.removeUserClientLocationsByClient = function (clients) {
        var _this = this;
        this.employeeService.RemoveUserClientLocationByClient(clients, this.employee.userId)
            .subscribe(function (response) {
            _this.notificationService.notify('success', "User has been removed with client(s) & location(s) access.");
            _this.updateClients();
            _this.clientprocessing = false;
        }, function (error) {
            _this.clientprocessing = false;
        });
    };
    /**
    * Removes all user's clients and locations by selected locations
    * @param clients {Array<number>} Selected Location Id list to remove
   */
    EmployeeDetailComponent.prototype.removeUserClientLocationsByLocation = function (locations) {
        var _this = this;
        this.employeeService.RemoveUserClientLocationByLocation(locations, this.employee.userId)
            .subscribe(function (response) {
            _this.notificationService.notify('success', "User has been removed with client(s) & location(s) access.");
            _this.locationprocessing = false;
        }, function (error) {
            _this.locationprocessing = false;
        });
    };
    /**
     * Removes all user's clients and locations by current user
     */
    EmployeeDetailComponent.prototype.removeAllUserClientLocations = function () {
        var _this = this;
        this.employeeService.RemoveUserClientLocationByUser(this.employee.userId)
            .subscribe(function (response) {
            _this.notificationService.notify('success', "User has been removed with client(s) & location(s) access.");
            _this.processing = false;
        }, function (error) {
            _this.processing = false;
        });
    };
    return EmployeeDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.ViewChild("fileInput"),
    __metadata("design:type", Object)
], EmployeeDetailComponent.prototype, "fileInput", void 0);
__decorate([
    core_1.ViewChild('locationdualbox'),
    __metadata("design:type", Object)
], EmployeeDetailComponent.prototype, "dualbox", void 0);
EmployeeDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(312)
    }),
    __metadata("design:paramtypes", [platform_browser_1.DomSanitizer,
        modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        role_service_1.RoleService,
        user_service_1.UserService,
        client_service_1.ClientService,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        state_service_1.StateService])
], EmployeeDetailComponent);
exports.EmployeeDetailComponent = EmployeeDetailComponent;


/***/ }),
/* 81 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var employee_model_1 = __webpack_require__(44);
var employee_service_1 = __webpack_require__(19);
/**
 * Component to list employees
 */
var EmployeeComponent = (function (_super) {
    __extends(EmployeeComponent, _super);
    function EmployeeComponent(modalService, notificationService, employeeService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.areEmployeesLoading = false;
        _this.searchFor = '';
        _this.employeesConfig = employee_model_1.employeeFullDataTableConfig;
        _this.hasFullPrivileges = false;
        return _this;
    }
    EmployeeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.hasFullPrivileges = this.stateService.hasPrivilege('employees - full');
        this.employeesConfig.filter = function () {
            if (_this.searchFor.length == 0) {
                return null;
            }
            return 'firstName ctn ' + _this.searchFor; // + ' or ' +
            //'alias ctn ' + this.searchFor + ' or ' +
            //'phoneNumber ctn ' + this.searchFor + ' or ' +
            //'website ctn ' + this.searchFor + ' or ' +
            //'faxNumber ctn ' + this.searchFor;
        };
        this.loadEmployees();
    };
    /**
     * Loads existing employees
     */
    EmployeeComponent.prototype.loadEmployees = function () {
        var _this = this;
        this.areEmployeesLoading = true;
        this.employeeService.getEmployees(this.employeesConfig, this.employeePagination).subscribe(function (employees) {
            _this.employees = employees.json();
            _this.employeePagination = _this.getPagination(employees);
            _this.areEmployeesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.areEmployeesLoading = false;
        });
    };
    /**
     * Refilters the list of users when the "search for" is changed
     */
    EmployeeComponent.prototype.filterChanged = function () {
        if (this.searchFor.length > 1) {
            this.loadEmployees();
        }
    };
    return EmployeeComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
EmployeeComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(313)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        state_service_1.StateService])
], EmployeeComponent);
exports.EmployeeComponent = EmployeeComponent;


/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var job_service_1 = __webpack_require__(13);
var job_closure_model_1 = __webpack_require__(274);
/**
 * Component for displaying a job closure
 */
var JobClosureComponent = (function (_super) {
    __extends(JobClosureComponent, _super);
    function JobClosureComponent(route, router, modalService, notificationService, jobServices, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.route = route;
        _this.router = router;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.jobServices = jobServices;
        _this.approveBtnText = 'Approve';
        _this.declineBtnText = 'Decline';
        _this.jobClosure = new job_closure_model_1.JobClosure();
        _this.jobClosureLoading = false;
        _this.isAllChecked = false;
        return _this;
    }
    JobClosureComponent.prototype.ngOnInit = function () {
        this.loadJob();
        this.loadJobClosure();
    };
    /**
     * Set status buttons text and show/hide/disable buttons
     */
    JobClosureComponent.prototype.setStatusText = function () {
        if (this.jobClosure.documentsCollected && this.jobClosure.boundrySamplesReturned && this.jobClosure.boundriesRemoved
            && this.jobClosure.areaCleaned && this.jobClosure.ppgMaterialsCollected && this.jobClosure.clientFixturesReturned) {
            this.isAllChecked = true;
        }
        else {
            this.isAllChecked = false;
        }
        switch (this.jobClosure.statusId) {
            case job_closure_model_1.jobClosureStatuses.Requested:
                this.showRequest = true;
                this.requestBtnText = "Requested";
                this.showApprove = true;
                this.showDecline = true;
                this.isEnableRequest = false;
                return;
            case job_closure_model_1.jobClosureStatuses.New:
                this.showRequest = true;
                this.requestBtnText = "Request Approval";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = true;
                return;
            case job_closure_model_1.jobClosureStatuses.Active:
                this.showRequest = false;
                this.requestBtnText = "Request Approval";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = false;
                return;
            default:
                this.showRequest = true;
                this.requestBtnText = "Request Approval";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = true;
                return;
        }
    };
    /**
     * Gets job associated with job closure.
     */
    JobClosureComponent.prototype.loadJob = function () {
        var _this = this;
        this.jobClosureLoading = true;
        this.route.params
            .switchMap(function (params) { return _this.jobServices.getJob(+params['id']); })
            .subscribe(function (response) {
            _this.job = response.json();
            _this.jobClosureLoading = false;
        }, function (error) {
            //this.notificationService.notify('error', error);
            _this.jobClosureLoading = false;
        });
    };
    /**
     * Gets job closure for associated job.
     */
    JobClosureComponent.prototype.loadJobClosure = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.jobId = +params['id'];
        });
        this.jobClosureLoading = true;
        this.route.params
            .switchMap(function (params) { return _this.jobServices.getJobClosure(+params['id']); })
            .subscribe(function (response) {
            _this.jobClosure = response.json();
            _this.setStatusText();
            _this.jobClosureLoading = false;
        }, function (error) {
            if (error.status == 404) {
                _this.showRequest = true;
                _this.requestBtnText = "Request Approval";
                _this.showApprove = false;
                _this.showDecline = false;
                _this.isEnableRequest = true;
            }
            //this.notificationService.notify('error', error);
            _this.jobClosureLoading = false;
        });
    };
    /*
    * Request Job Closure
    */
    JobClosureComponent.prototype.requestJobClosure = function (event) {
        var _this = this;
        this.jobClosureLoading = true;
        this.jobServices.saveJobClosure(this.jobId, this.jobClosure)
            .subscribe(function (response) {
            var createdJobClosure = response.json();
            if (createdJobClosure) {
                _this.jobServices.requestJobClosure(_this.jobId, createdJobClosure.id)
                    .subscribe(function (response) {
                    _this.jobClosure = response.json();
                    _this.setStatusText();
                    _this.notificationService.notify('success', 'Job closure was saved and requested successfully.');
                });
            }
            _this.jobClosureLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobClosureLoading = false;
        });
    };
    /**
     * Approves requested Job Closure
     */
    JobClosureComponent.prototype.ApproveJobClosure = function () {
        var _this = this;
        this.jobClosureLoading = true;
        this.jobServices.approveJobClosure(this.jobId, this.jobClosure.id)
            .subscribe(function (response) {
            _this.jobClosure = response.json();
            _this.setStatusText();
            _this.notificationService.notify('sucesss', 'Job Closure approved successfully.');
            _this.jobClosureLoading = false;
        });
    };
    /**
     * Declines requested Job Closure
     */
    JobClosureComponent.prototype.DeclineJobClosure = function () {
        var _this = this;
        this.jobClosureLoading = true;
        this.jobServices.declineJobClosure(this.jobId, this.jobClosure.id)
            .subscribe(function (response) {
            _this.jobClosure = response.json();
            _this.setStatusText();
            _this.notificationService.notify('warning', 'Job Closure declined successfully.');
            _this.jobClosureLoading = false;
        });
    };
    JobClosureComponent.prototype.toggleCheckListCheck = function (event) {
        this.setCheckedValue(event.target.id);
        if (event && this.jobClosure.documentsCollected && this.jobClosure.boundrySamplesReturned && this.jobClosure.boundriesRemoved
            && this.jobClosure.areaCleaned && this.jobClosure.ppgMaterialsCollected && this.jobClosure.clientFixturesReturned) {
            this.isAllChecked = true;
        }
        else {
            this.isAllChecked = false;
        }
    };
    JobClosureComponent.prototype.setCheckedValue = function (id) {
        switch (id) {
            case "1":
                this.jobClosure.documentsCollected = !this.jobClosure.documentsCollected;
                return;
            case "2":
                this.jobClosure.boundrySamplesReturned = !this.jobClosure.boundrySamplesReturned;
                return;
            case "3":
                this.jobClosure.boundriesRemoved = !this.jobClosure.boundriesRemoved;
                return;
            case "4":
                this.jobClosure.areaCleaned = !this.jobClosure.areaCleaned;
                return;
            case "5":
                this.jobClosure.ppgMaterialsCollected = !this.jobClosure.ppgMaterialsCollected;
                return;
            case "6":
                this.jobClosure.clientFixturesReturned = !this.jobClosure.clientFixturesReturned;
                return;
            default:
                return;
        }
    };
    return JobClosureComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
JobClosureComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(314)
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        router_1.Router,
        modal_service_1.ModalService,
        notification_service_1.NotificationService,
        job_service_1.JobServices,
        state_service_1.StateService])
], JobClosureComponent);
exports.JobClosureComponent = JobClosureComponent;


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var client_service_1 = __webpack_require__(12);
var employee_service_1 = __webpack_require__(19);
var job_service_1 = __webpack_require__(13);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var workinstruction_service_1 = __webpack_require__(27);
var production_report_service_1 = __webpack_require__(59);
var pagination_model_1 = __webpack_require__(11);
var user_model_1 = __webpack_require__(16);
var workInstruction_model_1 = __webpack_require__(30);
var production_report_model_1 = __webpack_require__(277);
var job_model_1 = __webpack_require__(14);
var transaction_model_1 = __webpack_require__(15);
var job_service_model_1 = __webpack_require__(45);
var job_documentrevision_model_1 = __webpack_require__(275);
var http_1 = __webpack_require__(7);
var FileSaver = __webpack_require__(97);
var JobDetailComponent = (function (_super) {
    __extends(JobDetailComponent, _super);
    function JobDetailComponent(modalService, route, router, notificationService, employeeService, clientService, jobService, workInstructionService, productionReportService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.clientService = clientService;
        _this.jobService = jobService;
        _this.workInstructionService = workInstructionService;
        _this.productionReportService = productionReportService;
        _this.job = new job_model_1.Job();
        _this.newService = new job_service_model_1.JobService();
        _this.processing = false;
        _this.documentsProcessing = false;
        _this.jobTypes = job_model_1.jobTypes;
        _this.serviceTypes = job_service_model_1.serviceTypes;
        _this.isContact = false;
        _this.showJobClosure = false;
        _this.workInstructionsLoading = false;
        _this.workInstructionsPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionsConfig = workInstruction_model_1.workInstructionFullDataTableConfig;
        _this.productionReportsLoading = false;
        _this.productionReportsPagination = new pagination_model_1.Pagination(null);
        _this.productionReportsConfig = production_report_model_1.productionReportFullDataTableConfig;
        _this.jobDocumentsLoading = false;
        _this.jobDocumentsPagination = new pagination_model_1.Pagination(null);
        _this.jobDocumentsConfig = job_documentrevision_model_1.jobDocumentRevisionFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        _this.jobServicesLoading = false;
        _this.jobServicesConfig = job_service_model_1.jobServiceFullDataTableConfig;
        _this.jobRatesConfig = job_service_model_1.jobServiceRateFullDataTableConfig;
        return _this;
    }
    Object.defineProperty(JobDetailComponent.prototype, "jobdata", {
        set: function (data) {
            this.job = data;
        },
        enumerable: true,
        configurable: true
    });
    JobDetailComponent.prototype.ngOnInit = function () {
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.loadJob();
    };
    JobDetailComponent.prototype.loadJob = function () {
        this.isContact = this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact;
        this.showJobClosure = this.job.jobStatusId == job_model_1.jobstatuses.Active ? true : false;
        this.processing = true;
        this.loadWorkInstructions();
        this.loadTransactions();
        if (!this.isContact) {
            this.loadClients();
        }
        this.loadLocations();
        this.loadContacts();
        this.loadDocuments();
        this.loadProductionReports();
        this.loadServices();
        this.processing = false;
    };
    JobDetailComponent.prototype.loadClientData = function () {
        this.loadLocations();
        this.loadContacts();
    };
    JobDetailComponent.prototype.loadClients = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getClients()
            .subscribe(function (response) {
            _this.clients = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobDetailComponent.prototype.loadLocations = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getLocations(this.job.clientId)
            .subscribe(function (response) {
            _this.locations = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobDetailComponent.prototype.loadContacts = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getContacts(this.job.clientId)
            .subscribe(function (response) {
            _this.contacts = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobDetailComponent.prototype.loadWorkInstructions = function () {
        var _this = this;
        this.workInstructionsLoading = true;
        this.workInstructionService.getWorkInstructions(this.job.id, this.workInstructionsConfig, this.workInstructionsPagination)
            .subscribe(function (response) {
            _this.workInstructions = response.json();
            _this.workInstructionsPagination = _this.getPagination(response);
            _this.workInstructionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionsLoading = false;
        });
    };
    JobDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.jobService.getTransactions(this.job.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    JobDetailComponent.prototype.loadProductionReports = function () {
        var _this = this;
        this.productionReportsLoading = true;
        this.productionReportService.getProductionReports(this.job.id, this.productionReportsConfig, this.productionReportsPagination)
            .subscribe(function (response) {
            _this.productionReports = response.json();
            _this.productionReportsPagination = _this.getPagination(response);
            _this.productionReportsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.productionReportsLoading = false;
        });
    };
    JobDetailComponent.prototype.saveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJob(this.job)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.notificationService.notify('success', _this.job.jobCode + ' updated successfully.');
            _this.processing = false;
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    JobDetailComponent.prototype.archiveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.deleteJob(this.job.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.job.jobCode + "' has been archived.");
            _this.closeModal('archiveJob');
            _this.processing = false;
            _this.router.navigate(['/jobs']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveJob');
        });
    };
    //job services & rates (shifts)
    JobDetailComponent.prototype.loadServices = function () {
        var _this = this;
        this.jobServicesLoading = true;
        this.jobService.getJobServices(this.job.id)
            .subscribe(function (response) {
            _this.jobServices = response.json();
            _this.jobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobServicesLoading = false;
        });
    };
    JobDetailComponent.prototype.addService = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJobService(this.job.id, this.newService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New service added successfully.');
            _this.newService = new job_service_model_1.JobService();
            _this.newService.jobId = _this.job.id;
            _this.processing = false;
            _this.loadServices();
            _this.closeModal('addService');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addService');
        });
    };
    JobDetailComponent.prototype.saveService = function (JobService) {
        var _this = this;
        this.jobServicesLoading = true;
        this.jobService.saveJobService(this.job.id, JobService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'Service updated successfully.');
            _this.jobServicesLoading = false;
            _this.loadServices();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.jobServicesLoading = false;
        });
    };
    JobDetailComponent.prototype.openServiceModal = function (id, record) {
        this.modalService.open(id, record);
    };
    JobDetailComponent.prototype.closeServiceModal = function (id) {
        this.modalService.close(id);
    };
    JobDetailComponent.prototype.deleteServiceRecord = function (id) {
        var _this = this;
        this.jobServicesLoading = true;
        var modal = this.modalService.get(id);
        var JobService = modal.record;
        this.jobService.removeJobService(JobService.jobId, JobService.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'service deleted successfully.');
            _this.loadServices();
            _this.jobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobServicesLoading = false;
        });
        this.modalService.close(id);
    };
    //job service rates
    JobDetailComponent.prototype.openServiceRatesModal = function (id, record) {
        this.modalService.open(id, record);
    };
    JobDetailComponent.prototype.closeServiceRatesModal = function (id) {
        this.modalService.close(id);
    };
    //document
    JobDetailComponent.prototype.loadDocuments = function () {
        var _this = this;
        this.documentsProcessing = true;
        this.jobService.getJobDocuments(this.job.id, this.jobDocumentsConfig, this.jobDocumentsPagination)
            .subscribe(function (response) {
            _this.jobDocuments = response.json();
            _this.jobDocumentsPagination = _this.getPagination(response);
            _this.documentsProcessing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.documentsProcessing = false;
        });
    };
    JobDetailComponent.prototype.fetchDocument = function (documentrevision) {
        var _this = this;
        this.documentsProcessing = true;
        var options = new http_1.RequestOptions({ responseType: http_1.ResponseContentType.Blob });
        this.jobService.fetchDocument(this.job.id, documentrevision.documentId)
            .subscribe(function (response) {
            FileSaver.saveAs(response, documentrevision.documentName + '.pdf');
            var fileURL = URL.createObjectURL(response);
            window.open(fileURL);
            _this.documentsProcessing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.documentsProcessing = false;
        });
    };
    JobDetailComponent.prototype.checkUnCheckUseIdentifiers = function () {
        this.job.useIdentifiers = !this.job.useIdentifiers;
    };
    JobDetailComponent.prototype.keyPress = function (event) {
        var pattern = /^\d*[0-9]\d*$/;
        var inputChar = String.fromCharCode(event.charCode);
        if (event.keyCode != 8 && !pattern.test(inputChar)) {
            event.preventDefault();
        }
    };
    return JobDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], JobDetailComponent.prototype, "jobdata", null);
JobDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(315)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        client_service_1.ClientService,
        job_service_1.JobServices,
        workinstruction_service_1.WorkInstructionService,
        production_report_service_1.ProductionReportServices,
        state_service_1.StateService])
], JobDetailComponent);
exports.JobDetailComponent = JobDetailComponent;


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var client_service_1 = __webpack_require__(12);
var employee_service_1 = __webpack_require__(19);
var job_service_1 = __webpack_require__(13);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var workinstruction_service_1 = __webpack_require__(27);
var pagination_model_1 = __webpack_require__(11);
var job_model_1 = __webpack_require__(14);
var workInstruction_defect_model_1 = __webpack_require__(47);
var workInstruction_partnumber_model_1 = __webpack_require__(48);
var transaction_model_1 = __webpack_require__(15);
var job_service_model_1 = __webpack_require__(45);
var user_model_1 = __webpack_require__(16);
var workInstruction_model_1 = __webpack_require__(30);
var workinstruction_rework_model_1 = __webpack_require__(49);
var JobQuoteComponent = (function (_super) {
    __extends(JobQuoteComponent, _super);
    function JobQuoteComponent(modalService, route, router, notificationService, employeeService, clientService, jobService, workInstructionService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.clientService = clientService;
        _this.jobService = jobService;
        _this.workInstructionService = workInstructionService;
        _this.job = new job_model_1.Job();
        _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
        _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
        _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
        _this.newService = new job_service_model_1.JobService();
        _this.processing = false;
        _this.jobTypes = job_model_1.jobTypes;
        _this.serviceTypes = job_service_model_1.serviceTypes;
        _this.requestBtnText = 'Request';
        _this.approveBtnText = 'Approve';
        _this.declineBtnText = 'Decline';
        _this.isContact = false;
        _this.workInstruction = new workInstruction_model_1.WorkInstruction();
        _this.showDefect = false;
        _this.showRework = false;
        _this.jobPartNumbersLoading = false;
        _this.jobPartNumbersPagination = new pagination_model_1.Pagination(null);
        _this.jobPartNumbersConfig = workInstruction_partnumber_model_1.workInstructionPartNumberFullDataTableConfig;
        _this.jobDefectsLoading = false;
        _this.jobDefectPagination = new pagination_model_1.Pagination(null);
        _this.jobDefectsConfig = workInstruction_defect_model_1.workInstructionDefectFullDataTableConfig;
        _this.workInstructionReworkLoading = false;
        _this.workInstructionReworkPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionReworkConfig = workinstruction_rework_model_1.workInstructionReworkFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        _this.JobServicesLoading = false;
        _this.JobServicesConfig = job_service_model_1.jobServiceFullDataTableConfig;
        _this.jobserviceRateLoading = false;
        _this.jobserviceRateConfig = job_service_model_1.jobServiceRateFullDataTableConfig;
        return _this;
    }
    Object.defineProperty(JobQuoteComponent.prototype, "jobdata", {
        set: function (data) {
            this.job = data;
        },
        enumerable: true,
        configurable: true
    });
    JobQuoteComponent.prototype.ngOnInit = function () {
        this.isContact = this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact;
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.setStatusText();
        this.loadJob();
    };
    JobQuoteComponent.prototype.setStatusText = function () {
        switch (this.job.jobStatusId) {
            case job_model_1.jobstatuses.QuoteNeeded:
                this.showRequest = true;
                this.requestBtnText = "Request Quote Approval";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = true;
                return;
            case job_model_1.jobstatuses.QuotePending:
                this.showRequest = true;
                this.requestBtnText = "Pending Approval";
                this.showApprove = true;
                this.showDecline = true;
                this.isEnableRequest = false;
                return;
            default:
                this.showRequest = true;
                this.requestBtnText = "Request Quote Approval";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = false;
                return;
        }
    };
    JobQuoteComponent.prototype.loadJob = function () {
        this.processing = true;
        this.showDefect = this.job.jobTypeId == job_model_1.jobtypes.Sort || this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework ? true : false;
        this.showRework = this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework || this.job.jobTypeId == job_model_1.jobtypes.Rework ? true : false;
        this.loadWorkInstruction();
        this.loadTransactions();
        if (!this.isContact) {
            this.loadClients();
        }
        this.loadLocations();
        this.loadContacts();
        if (this.stateService.hasPrivilege('jobs-rates')) {
            this.loadServices();
        }
        this.processing = false;
    };
    JobQuoteComponent.prototype.loadClientData = function () {
        this.loadLocations();
        this.loadContacts();
    };
    JobQuoteComponent.prototype.loadWorkInstruction = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.getWorkInstructions(this.job.id)
            .subscribe(function (response) {
            var workInstructions = response.json();
            _this.workInstruction = workInstructions[0];
            if (_this.showDefect) {
                _this.loadDefects();
            }
            if (_this.showRework) {
                _this.loadWorkIstructionRework();
            }
            _this.loadPartNumbers();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobQuoteComponent.prototype.loadClients = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getClients()
            .subscribe(function (response) {
            _this.clients = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobQuoteComponent.prototype.loadLocations = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getLocations(this.job.clientId)
            .subscribe(function (response) {
            _this.locations = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobQuoteComponent.prototype.loadContacts = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getContacts(this.job.clientId)
            .subscribe(function (response) {
            _this.contacts = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobQuoteComponent.prototype.loadDefects = function () {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.getDefects(this.job.id, this.workInstruction.id, this.jobDefectsConfig, this.jobDefectPagination)
            .subscribe(function (response) {
            _this.jobDefects = response.json();
            _this.jobDefectPagination = _this.getPagination(response);
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    JobQuoteComponent.prototype.loadPartNumbers = function () {
        var _this = this;
        this.jobPartNumbersLoading = true;
        this.workInstructionService.getPartNumbers(this.job.id, this.workInstruction.id, this.jobPartNumbersConfig, this.jobPartNumbersPagination)
            .subscribe(function (response) {
            _this.jobPartNumbers = response.json();
            _this.jobPartNumbersPagination = _this.getPagination(response);
            _this.jobPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobPartNumbersLoading = false;
        });
    };
    JobQuoteComponent.prototype.loadWorkIstructionRework = function () {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.getReworks(this.job.id, this.workInstruction.id, this.workInstructionReworkConfig, this.workInstructionReworkPagination)
            .subscribe(function (response) {
            _this.workInstructionReworks = response.json();
            _this.workInstructionReworkPagination = _this.getPagination(response);
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    JobQuoteComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.jobService.getTransactions(this.job.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    JobQuoteComponent.prototype.saveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJob(this.job)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.notificationService.notify('success', _this.job.jobCode + ' updated successfully.');
            _this.processing = false;
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    JobQuoteComponent.prototype.addPartNumber = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addPartNumber(this.job.id, this.workInstruction.id, this.newPartNumber)
            .subscribe(function (response) {
            _this.notificationService.notify('success', _this.newPartNumber.partNumber + ' added successfully.');
            _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
            //this.newPartNumber.jobId = this.job.id;
            _this.processing = false;
            _this.loadPartNumbers();
            _this.closeModal('addPartNumber');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addPartNumber');
        });
    };
    JobQuoteComponent.prototype.deletePartNumber = function (partnumber) {
        var _this = this;
        this.jobPartNumbersLoading = true;
        this.workInstructionService.removePartNumber(this.job.id, this.workInstruction.id, partnumber.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', partnumber.partNumber + ' deleted successfully.');
            _this.loadPartNumbers();
            _this.jobPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobPartNumbersLoading = false;
        });
    };
    JobQuoteComponent.prototype.addDefect = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addDefect(this.job.id, this.workInstruction.id, this.newDefect)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New defect added successfully.');
            _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
            //this.newDefect.jobId = this.job.id;
            _this.processing = false;
            _this.loadDefects();
            _this.closeModal('addDefect');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addDefect');
        });
    };
    JobQuoteComponent.prototype.deleteDefect = function (defect) {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.removeDefect(this.job.id, this.workInstruction.id, defect.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', defect.name + ' deleted successfully.');
            _this.loadDefects();
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    JobQuoteComponent.prototype.addWorkInstructionReWork = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addRework(this.job.id, this.workInstruction.id, this.newRework)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New rework added successfully.');
            _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
            _this.processing = false;
            _this.loadWorkIstructionRework();
            _this.closeModal('addRework');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addRework');
        });
    };
    JobQuoteComponent.prototype.deleteWorkInstructionRework = function (rework) {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.removeRework(this.job.id, this.workInstruction.id, rework.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', rework.name + ' deleted successfully.');
            _this.loadWorkIstructionRework();
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    JobQuoteComponent.prototype.archiveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.deleteJob(this.job.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.job.jobCode + "' has been archived.");
            _this.closeModal('archiveJob');
            _this.processing = false;
            _this.router.navigate(['/jobs']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveJob');
        });
    };
    //job rates (shifts)
    JobQuoteComponent.prototype.loadServices = function () {
        var _this = this;
        this.JobServicesLoading = true;
        this.jobService.getJobServices(this.job.id)
            .subscribe(function (response) {
            _this.JobServices = response.json();
            _this.JobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.JobServicesLoading = false;
        });
    };
    JobQuoteComponent.prototype.addService = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJobService(this.job.id, this.newService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New service added successfully.');
            _this.newService = new job_service_model_1.JobService();
            _this.newService.jobId = _this.job.id;
            _this.processing = false;
            _this.loadServices();
            _this.closeModal('addService');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addService');
        });
    };
    JobQuoteComponent.prototype.saveService = function (JobService) {
        var _this = this;
        this.JobServicesLoading = true;
        this.jobService.saveJobService(this.job.id, JobService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'Service updated successfully.');
            _this.JobServicesLoading = false;
            _this.loadServices();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.JobServicesLoading = false;
        });
    };
    JobQuoteComponent.prototype.openServiceModal = function (id, record) {
        this.modalService.open(id, record);
    };
    JobQuoteComponent.prototype.closeServiceModal = function (id) {
        this.modalService.close(id);
    };
    JobQuoteComponent.prototype.deleteServiceRecord = function (id) {
        var _this = this;
        this.JobServicesLoading = true;
        var modal = this.modalService.get(id);
        var JobService = modal.record;
        this.jobService.removeJobService(JobService.jobId, JobService.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'service deleted successfully.');
            _this.loadServices();
            _this.JobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.JobServicesLoading = false;
        });
        this.modalService.close(id);
    };
    //job service rates
    JobQuoteComponent.prototype.openServiceRatesModal = function (id, record) {
        this.modalService.open(id, record);
    };
    JobQuoteComponent.prototype.closeServiceRatesModal = function (id) {
        this.modalService.close(id);
    };
    //job transactions
    JobQuoteComponent.prototype.quoteRequest = function () {
        var _this = this;
        this.jobService.createQuoteRequest(this.job.id)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.setStatusText();
        });
    };
    JobQuoteComponent.prototype.quoteApprove = function () {
        var _this = this;
        if (!this.isContact) {
            // This is an employee approving the quote.  Simply call the API
            this.jobService.approveQuoteRequest(this.job.id)
                .subscribe(function (job) {
                _this.job = job.json();
                _this.setStatusText();
                _this.notificationService.notify('success', 'Approval request sent.');
            });
        }
        else {
            // This is a client contact approving/declining the quote.  Present them
            // with the HelloSign iFrame to e-sign the quote PDF.
            this.jobService.fetchQuoteESignUrl(this.job.id)
                .subscribe(function (signUrl) {
                HelloSign.init('569cd48ab104022f477dc2f79f97c8ab');
                HelloSign.open({
                    url: signUrl.text(),
                    debug: true,
                    allowCancel: true,
                    skipDomainVerification: true,
                    healthCheckTimeoutMs: 600000,
                    messageListener: function (eventData) {
                        if (eventData.event == HelloSign.EVENT_SIGNED) {
                            _this.jobService.approveQuoteRequest(_this.job.id)
                                .subscribe(function (job) {
                                _this.job = job.json();
                                _this.setStatusText();
                                _this.notificationService.notify('success', 'Approval request sent.');
                            });
                        }
                        if (eventData.event == HelloSign.EVENT_DECLINED) {
                            _this.quoteDecline();
                        }
                    }
                });
            }, function (error) {
                _this.notificationService.notify('error', error._body);
            });
        }
    };
    JobQuoteComponent.prototype.quoteDecline = function () {
        var _this = this;
        this.jobService.declineQuoteRequest(this.job.id)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.setStatusText();
            _this.notificationService.notify('warning', 'Quote declined successfully.');
        });
    };
    JobQuoteComponent.prototype.checkUnCheckUseIdentifiers = function () {
        this.job.useIdentifiers = !this.job.useIdentifiers;
    };
    return JobQuoteComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], JobQuoteComponent.prototype, "jobdata", null);
JobQuoteComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(316)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        client_service_1.ClientService,
        job_service_1.JobServices,
        workinstruction_service_1.WorkInstructionService,
        state_service_1.StateService])
], JobQuoteComponent);
exports.JobQuoteComponent = JobQuoteComponent;


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var authenticated_component_base_1 = __webpack_require__(6);
var client_service_1 = __webpack_require__(12);
var employee_service_1 = __webpack_require__(19);
var job_service_1 = __webpack_require__(13);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var workinstruction_service_1 = __webpack_require__(27);
var pagination_model_1 = __webpack_require__(11);
var job_model_1 = __webpack_require__(14);
var workInstruction_defect_model_1 = __webpack_require__(47);
var workInstruction_partnumber_model_1 = __webpack_require__(48);
var transaction_model_1 = __webpack_require__(15);
var job_service_model_1 = __webpack_require__(45);
var user_model_1 = __webpack_require__(16);
var workInstruction_model_1 = __webpack_require__(30);
var workinstruction_rework_model_1 = __webpack_require__(49);
var workInstruction_step_model_1 = __webpack_require__(96);
var ng2_dragula_1 = __webpack_require__(218);
var JobRequestComponent = (function (_super) {
    __extends(JobRequestComponent, _super);
    function JobRequestComponent(modalService, route, router, notificationService, employeeService, clientService, jobService, workInstructionService, stateService, dragulaService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.employeeService = employeeService;
        _this.clientService = clientService;
        _this.jobService = jobService;
        _this.workInstructionService = workInstructionService;
        _this.dragulaService = dragulaService;
        _this.job = new job_model_1.Job();
        _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
        _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
        _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
        _this.newStep = new workInstruction_step_model_1.WorkInstructionStep();
        _this.newService = new job_service_model_1.JobService();
        _this.processing = false;
        _this.jobTypes = job_model_1.jobTypes;
        _this.serviceTypes = job_service_model_1.serviceTypes;
        _this.requestBtnText = 'Request';
        _this.approveBtnText = 'Approve';
        _this.declineBtnText = 'Decline';
        _this.workInstruction = new workInstruction_model_1.WorkInstruction();
        _this.showDefect = false;
        _this.showRework = false;
        _this.jobPartNumbersLoading = false;
        _this.jobPartNumbersPagination = new pagination_model_1.Pagination(null);
        _this.jobPartNumbersConfig = workInstruction_partnumber_model_1.workInstructionPartNumberFullDataTableConfig;
        _this.jobDefectsLoading = false;
        _this.jobDefectPagination = new pagination_model_1.Pagination(null);
        _this.jobDefectsConfig = workInstruction_defect_model_1.workInstructionDefectFullDataTableConfig;
        _this.workInstructionReworkLoading = false;
        _this.workInstructionReworkPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionReworkConfig = workinstruction_rework_model_1.workInstructionReworkFullDataTableConfig;
        _this.workInstructionStepLoading = false;
        _this.workInstructionStepPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionStepConfig = workInstruction_step_model_1.workInstructionStepFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        _this.JobServicesLoading = false;
        _this.JobServicesConfig = job_service_model_1.jobServiceFullDataTableConfig;
        _this.isContact = false;
        _this.contactRequiredMessage = "Quote Approval Contact and Work Instruction Approval Contact must have values before Job Approval can be requested.";
        _this.clientInformationRequiredMessage = "Client Billing Address and Client Corporate Address must have values before Job Approval can be requested.";
        return _this;
    }
    Object.defineProperty(JobRequestComponent.prototype, "jobdata", {
        set: function (data) {
            this.job = data;
        },
        enumerable: true,
        configurable: true
    });
    JobRequestComponent.prototype.ngOnInit = function () {
        this.isContact = this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact;
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.setStatusText();
        this.loadJob();
    };
    JobRequestComponent.prototype.setStatusText = function () {
        switch (this.job.jobStatusId) {
            case job_model_1.jobstatuses.New:
                this.showRequest = true;
                this.requestBtnText = "Job Request";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = true;
                return;
            case job_model_1.jobstatuses.Requested:
                this.showRequest = true;
                this.requestBtnText = "Pending Approval";
                this.showApprove = true;
                this.showDecline = true;
                this.isEnableRequest = false;
                return;
            default:
                this.showRequest = true;
                this.requestBtnText = "Job Request";
                this.showApprove = false;
                this.showDecline = false;
                this.isEnableRequest = false;
                return;
        }
    };
    JobRequestComponent.prototype.getJobData = function () {
        var _this = this;
        this.jobService.getJob(this.job.id)
            .subscribe(function (result) { return _this.job = result.json(); });
    };
    JobRequestComponent.prototype.loadJob = function () {
        this.processing = true;
        this.showDefect = this.job.jobTypeId == job_model_1.jobtypes.Sort || this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework ? true : false;
        this.showRework = this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework || this.job.jobTypeId == job_model_1.jobtypes.Rework ? true : false;
        this.loadWorkInstruction();
        this.loadStep();
        this.loadTransactions();
        if (!this.isContact) {
            this.loadClients();
        }
        this.loadLocations();
        this.loadContacts();
        if (this.stateService.hasPrivilege('jobs-rates')) {
            this.loadServices();
        }
        this.processing = false;
    };
    JobRequestComponent.prototype.loadWorkInstruction = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.getWorkInstructions(this.job.id)
            .subscribe(function (response) {
            var workInstructions = response.json();
            _this.workInstruction = workInstructions[0];
            if (_this.showDefect) {
                _this.loadDefects();
            }
            if (_this.showRework) {
                _this.loadWorkIstructionRework();
            }
            _this.loadPartNumbers();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobRequestComponent.prototype.loadClientData = function () {
        this.loadLocations();
        this.loadContacts();
    };
    JobRequestComponent.prototype.loadClients = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getClients()
            .subscribe(function (response) {
            _this.clients = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobRequestComponent.prototype.loadLocations = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getLocations(this.job.clientId)
            .subscribe(function (response) {
            _this.locations = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobRequestComponent.prototype.loadContacts = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getContacts(this.job.clientId)
            .subscribe(function (response) {
            _this.contacts = response.json();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    JobRequestComponent.prototype.loadDefects = function () {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.getDefects(this.job.id, this.workInstruction.id, this.jobDefectsConfig, this.jobDefectPagination)
            .subscribe(function (response) {
            _this.jobDefects = response.json();
            _this.jobDefectPagination = _this.getPagination(response);
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    JobRequestComponent.prototype.loadPartNumbers = function () {
        var _this = this;
        this.jobPartNumbersLoading = true;
        this.workInstructionService.getPartNumbers(this.job.id, this.workInstruction.id, this.jobPartNumbersConfig, this.jobPartNumbersPagination)
            .subscribe(function (response) {
            _this.jobPartNumbers = response.json();
            _this.jobPartNumbersPagination = _this.getPagination(response);
            _this.jobPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobPartNumbersLoading = false;
        });
    };
    JobRequestComponent.prototype.loadWorkIstructionRework = function () {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.getReworks(this.job.id, this.workInstruction.id, this.workInstructionReworkConfig, this.workInstructionReworkPagination)
            .subscribe(function (response) {
            _this.workInstructionReworks = response.json();
            _this.workInstructionReworkPagination = _this.getPagination(response);
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    JobRequestComponent.prototype.loadStep = function () {
        var _this = this;
        this.workInstructionStepLoading = true;
        this.workInstructionService.getSteps(this.job.id, this.workInstruction.id, this.workInstructionReworkConfig, this.workInstructionReworkPagination)
            .subscribe(function (response) {
            _this.workInstructionStep = response.json();
            _this.workInstructionStepPagination = _this.getPagination(response);
            _this.workInstructionStepLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionStepLoading = false;
        });
    };
    JobRequestComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.jobService.getTransactions(this.job.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    JobRequestComponent.prototype.saveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJob(this.job)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.notificationService.notify('success', _this.job.jobCode + ' updated successfully.');
            _this.processing = false;
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    JobRequestComponent.prototype.addPartNumber = function () {
        var _this = this;
        this.jobPartNumbersLoading = true;
        this.workInstructionService.addPartNumber(this.job.id, this.workInstruction.id, this.newPartNumber)
            .subscribe(function (response) {
            _this.notificationService.notify('success', _this.newPartNumber.partNumber + ' added successfully.');
            _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
            _this.loadPartNumbers();
            _this.closeModal('addPartNumber');
            _this.jobPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.jobPartNumbersLoading = false;
            _this.closeModal('addPartNumber');
        });
    };
    JobRequestComponent.prototype.deletePartNumber = function (partnumber) {
        var _this = this;
        this.jobPartNumbersLoading = true;
        this.workInstructionService.removePartNumber(this.job.id, this.workInstruction.id, partnumber.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', partnumber.partNumber + ' deleted successfully.');
            _this.loadPartNumbers();
            _this.jobPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobPartNumbersLoading = false;
        });
    };
    JobRequestComponent.prototype.addDefect = function () {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.addDefect(this.job.id, this.workInstruction.id, this.newDefect)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New defect added successfully.');
            _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
            _this.jobDefectsLoading = false;
            _this.loadDefects();
            _this.closeModal('addDefect');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.jobDefectsLoading = false;
            _this.closeModal('addDefect');
        });
    };
    JobRequestComponent.prototype.deleteDefect = function (defect) {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.removeDefect(this.job.id, this.workInstruction.id, defect.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', defect.name + ' deleted successfully.');
            _this.loadDefects();
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    JobRequestComponent.prototype.addWorkInstructionReWork = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addRework(this.job.id, this.workInstruction.id, this.newRework)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New rework added successfully.');
            _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
            _this.processing = false;
            _this.loadWorkIstructionRework();
            _this.closeModal('addRework');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addRework');
        });
    };
    JobRequestComponent.prototype.deleteWorkInstructionRework = function (rework) {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.removeRework(this.job.id, this.workInstruction.id, rework.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', rework.name + ' deleted successfully.');
            _this.loadWorkIstructionRework();
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    JobRequestComponent.prototype.addStep = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addStep(this.job.id, this.workInstruction.id, this.newStep)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New step added successfully.');
            _this.newStep = new workInstruction_step_model_1.WorkInstructionStep();
            //Todo: jobId
            //this.newDefect.jobId = this.job.id;
            _this.processing = false;
            _this.loadStep();
            _this.closeModal('addStep');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addStep');
        });
    };
    JobRequestComponent.prototype.deleteStep = function (Step) {
        var _this = this;
        this.workInstructionStepLoading = true;
        this.workInstructionService.removeStep(this.job.id, this.workInstruction.id, Step.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', Step.description + ' deleted successfully.');
            _this.loadStep();
            _this.workInstructionStepLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionStepLoading = false;
        });
    };
    JobRequestComponent.prototype.archiveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.deleteJob(this.job.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', _this.job.jobCode + "' has been archived.");
            _this.closeModal('archiveJob');
            _this.processing = false;
            _this.router.navigate(['/jobs']);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveJob');
        });
    };
    //job rates (shift)
    JobRequestComponent.prototype.loadServices = function () {
        var _this = this;
        this.JobServicesLoading = true;
        this.jobService.getJobServices(this.job.id)
            .subscribe(function (response) {
            _this.JobServices = response.json();
            _this.JobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.JobServicesLoading = false;
        });
    };
    JobRequestComponent.prototype.addService = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJobService(this.job.id, this.newService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New service added successfully.');
            _this.newService = new job_service_model_1.JobService();
            _this.newService.jobId = _this.job.id;
            _this.processing = false;
            _this.loadServices();
            _this.serviceform.reset();
            _this.closeModal('addService');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addService');
        });
    };
    JobRequestComponent.prototype.saveService = function (JobService) {
        var _this = this;
        this.JobServicesLoading = true;
        this.jobService.saveJobService(this.job.id, JobService)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'Service updated successfully.');
            _this.JobServicesLoading = false;
            _this.loadServices();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.JobServicesLoading = false;
        });
    };
    JobRequestComponent.prototype.openServiceModal = function (id, record) {
        this.modalService.open(id, record);
    };
    JobRequestComponent.prototype.closeServiceModal = function (id) {
        this.modalService.close(id);
    };
    JobRequestComponent.prototype.deleteServiceRecord = function (id) {
        var _this = this;
        this.JobServicesLoading = true;
        var modal = this.modalService.get(id);
        var JobService = modal.record;
        this.jobService.removeJobService(JobService.jobId, JobService.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'service deleted successfully.');
            _this.loadServices();
            _this.JobServicesLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.JobServicesLoading = false;
        });
        this.modalService.close(id);
    };
    //job transactions
    JobRequestComponent.prototype.jobRequest = function () {
        var _this = this;
        this.processing = true;
        if (this.job.quoteApprovalContactId == null
            || this.job.quoteApprovalContactId == 0
            || this.job.workInstructionApprovalContactId == null
            || this.job.workInstructionApprovalContactId == 0) {
            this.notificationService.notify('error', this.contactRequiredMessage);
            this.processing = false;
        }
        else {
            this.clientService.getClient(this.job.clientId)
                .subscribe(function (response) {
                _this.jobClient = response.json();
                if (_this.jobClient != null
                    && (_this.jobClient.billingAddressId == null
                        || _this.jobClient.billingAddressId == 0
                        || _this.jobClient.corporateAddressId == null
                        || _this.jobClient.corporateAddressId == 0)) {
                    _this.notificationService.notify('error', _this.clientInformationRequiredMessage);
                    _this.processing = false;
                }
                else {
                    _this.jobService.createJobRequest(_this.job.id)
                        .subscribe(function (job) {
                        _this.job = job.json();
                        _this.setStatusText();
                        _this.processing = false;
                    });
                }
            }, function (error) {
                _this.notificationService.notify('error', "Invalid client id provided. " + error);
                _this.processing = false;
            });
        }
    };
    JobRequestComponent.prototype.jobApprove = function () {
        var _this = this;
        this.jobService.approveJobRequest(this.job.id)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.setStatusText();
            _this.notificationService.notify('success', 'Approval request sent.');
        });
    };
    JobRequestComponent.prototype.jobDecline = function () {
        var _this = this;
        this.jobService.declineJobRequest(this.job.id)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.setStatusText();
            _this.notificationService.notify('warning', 'Quote declined successfully.');
        });
    };
    JobRequestComponent.prototype.checkUnCheckUseIdentifiers = function () {
        this.job.useIdentifiers = !this.job.useIdentifiers;
    };
    return JobRequestComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Input(),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [Object])
], JobRequestComponent.prototype, "jobdata", null);
__decorate([
    core_1.ViewChild('serviceform'),
    __metadata("design:type", Object)
], JobRequestComponent.prototype, "serviceform", void 0);
JobRequestComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(317),
        styles: [
            "\n.tagline {\n  position: relative;\n  margin-top: 0;\n}\n.tagline-text {\n  vertical-align: middle;\n}\n.__slackin {\n  float: right;\n  margin-left: 10px;\n  vertical-align: middle;\n}\n\n.promo {\n  margin-bottom: 0;\n  font-style: italic;\n  padding: 10px;\n  background-color: #ff4020;\n  border-bottom: 5px solid #c00;\n}\n\n.gh-fork {\n  position: fixed;\n  top: 0;\n  right: 0;\n  border: 0;\n}\n\n/* dragula-specific example page styles */\n.wrapper {\n  display: table;\n}\n.container {\n  display: table-cell;\n  background-color: rgba(255, 255, 255, 0.2);\n  width: 50%;\n}\n.container:nth-child(odd) {\n  background-color: rgba(0, 0, 0, 0.2);\n}\n/*\n * note that styling gu-mirror directly is a bad practice because it's too generic.\n * you're better off giving the draggable elements a unique class and styling that directly!\n */\n.container > div,\n.gu-mirror {\n  margin: 10px;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.2);\n  transition: opacity 0.4s ease-in-out;\n}\n.container > div {\n  cursor: move;\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.gu-mirror {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n.container .ex-moved {\n  background-color: #e74c3c;\n}\n.container.ex-over {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n#left-lovehandles > div,\n#right-lovehandles > div {\n  cursor: initial;\n}\n.handle {\n  padding: 0 5px;\n  margin-right: 5px;\n  background-color: rgba(0, 0, 0, 0.4);\n  cursor: move;\n}\n.image-thing {\n  margin: 20px 0;\n  display: block;\n  text-align: center;\n}\n.slack-join {\n  position: absolute;\n  font-weight: normal;\n  font-size: 14px;\n  right: 10px;\n  top: 50%;\n  margin-top: -8px;\n  line-height: 16px;\n}\n\n/* Carbon */\n\n#carbonads {\n  position: absolute;\n  display: block;\n  overflow: hidden;\n  margin-left: -180px;\n  padding: 1em;\n  max-width: calc(130px + 2em);\n  background-color: #aa5579;\n  text-align: center;\n  font-size: 12px;\n  font-family: Verdana, \"Helvetica Neue\", Helvetica, sans-serif;\n  line-height: 1.5;\n}\n\n#carbonads a {\n  color: inherit;\n  text-decoration: none;\n  font-weight: 400;\n  transition: color .2s ease-in-out;\n}\n\n#carbonads a:hover {\n  color: #221c3b;\n}\n\n#carbonads span {\n  display: block;\n  overflow: hidden;\n}\n\n.carbon-img {\n  display: block;\n  margin: 0 auto 1em;\n}\n\n.carbon-text {\n  display: block;\n  margin-bottom: 1em;\n}\n\n.carbon-poweredby {\n  display: block;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 9px;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 960px) {\n  #carbonads {\n    position: relative;\n    float: none;\n    margin: 0 auto -2em;\n    max-width: 330px;\n  }\n  #carbonads span {\n    position: relative;\n  }\n  #carbonads > span {\n    max-width: none;\n  }\n  .carbon-img {\n    float: left;\n    margin: 0 1em 0 0;\n  }\n  .carbon-text {\n    float: left;\n    margin-bottom: 0;\n    max-width: calc(100% - 130px - 1em);\n    text-align: left;\n  }\n  .carbon-poweredby {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    display: block;\n  }\n}"
        ]
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        employee_service_1.EmployeeService,
        client_service_1.ClientService,
        job_service_1.JobServices,
        workinstruction_service_1.WorkInstructionService,
        state_service_1.StateService, ng2_dragula_1.DragulaService])
], JobRequestComponent);
exports.JobRequestComponent = JobRequestComponent;


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var job_service_1 = __webpack_require__(13);
var job_model_1 = __webpack_require__(14);
var job_detail_component_1 = __webpack_require__(83);
var job_component_1 = __webpack_require__(42);
var job_request_component_1 = __webpack_require__(85);
var job_quote_component_1 = __webpack_require__(84);
var JobRouteComponent = (function () {
    function JobRouteComponent(route, router, jobService, componentFactoryResolver) {
        this.route = route;
        this.router = router;
        this.jobService = jobService;
        this.componentFactoryResolver = componentFactoryResolver;
        this.Currentjob = new job_model_1.Job();
    }
    JobRouteComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.jobService.getJob(+params['id'])
                .subscribe(function (job) { return _this.loadcomponent(job.json()); });
        }, function (error) {
            _this.router.navigate(['/jobs']);
        });
    };
    JobRouteComponent.prototype.loadcomponent = function (job) {
        var componentFactory = this.componentFactoryResolver.resolveComponentFactory(this.getComponent(job.jobStatusId));
        this.viewContainer.clear();
        var componentRef = this.viewContainer.createComponent(componentFactory);
        componentRef.instance.jobdata = job;
    };
    JobRouteComponent.prototype.getComponent = function (jobstatusid) {
        switch (jobstatusid) {
            case job_model_1.jobstatuses.Active:
                return job_detail_component_1.JobDetailComponent;
            case job_model_1.jobstatuses.New:
            case job_model_1.jobstatuses.Requested:
                return job_request_component_1.JobRequestComponent;
            case job_model_1.jobstatuses.QuoteNeeded:
            case job_model_1.jobstatuses.QuotePending:
                return job_quote_component_1.JobQuoteComponent;
            default:
                return job_component_1.JobComponent;
        }
    };
    return JobRouteComponent;
}());
__decorate([
    core_1.ViewChild('dynamicview', { read: core_1.ViewContainerRef }),
    __metadata("design:type", core_1.ViewContainerRef)
], JobRouteComponent.prototype, "viewContainer", void 0);
JobRouteComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(318)
    }),
    __metadata("design:paramtypes", [router_1.ActivatedRoute,
        router_1.Router,
        job_service_1.JobServices,
        core_1.ComponentFactoryResolver])
], JobRouteComponent);
exports.JobRouteComponent = JobRouteComponent;


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var create_pdf_service_1 = __webpack_require__(57);
var CreatePDFComponent = (function (_super) {
    __extends(CreatePDFComponent, _super);
    function CreatePDFComponent(modalService, notificationService, createPDFservice, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.createPDFservice = createPDFservice;
        _this.processing = false;
        return _this;
    }
    CreatePDFComponent.prototype.GeneratePDF = function () {
        var _this = this;
        this.processing = true;
        this.createPDFservice.generateTestPDF()
            .subscribe(function (response) {
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
        });
    };
    return CreatePDFComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
CreatePDFComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(320)
    })
    /**
     * Component for displaying the create-pdf (to be completed later)
     */
    ,
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        create_pdf_service_1.CreatePDFService,
        state_service_1.StateService])
], CreatePDFComponent);
exports.CreatePDFComponent = CreatePDFComponent;


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var platform_browser_1 = __webpack_require__(18);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var workinstruction_service_1 = __webpack_require__(27);
var job_service_1 = __webpack_require__(13);
var workInstruction_model_1 = __webpack_require__(30);
var WorkInstructionStepDetailComponent = (function (_super) {
    __extends(WorkInstructionStepDetailComponent, _super);
    function WorkInstructionStepDetailComponent(AZURE_FILE_PATH, sanitizer, modalService, route, router, notificationService, workInstructionService, jobService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.AZURE_FILE_PATH = AZURE_FILE_PATH;
        _this.sanitizer = sanitizer;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.workInstructionService = workInstructionService;
        _this.jobService = jobService;
        _this.processing = false;
        _this.isAllowWorkInstruction = false;
        _this.showArchive = false;
        return _this;
    }
    WorkInstructionStepDetailComponent.prototype.ngOnInit = function () {
        this.loadWorkInstructionStep();
        this.checkDraftWorkInstruction();
    };
    /**
    * Loads the work-instruction defect record and associated record sets
    */
    WorkInstructionStepDetailComponent.prototype.loadWorkInstructionStep = function () {
        var _this = this;
        this.route.params.subscribe(function (params) {
            _this.jobId = +params['id'];
            _this.workInstructionId = +params['workInstructionId'];
        });
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.workInstructionService.getStep(_this.jobId, _this.workInstructionId, +params['stepId']); })
            .subscribe(function (response) {
            _this.workInstructionStep = response.json();
            _this.stepImage = _this.sanitizer.bypassSecurityTrustUrl(_this.AZURE_FILE_PATH + _this.workInstructionStep.pictureAzurePath);
            _this.processing = false;
        }, function (error) {
            _this.router.navigate(['/jobs/', _this.jobId, 'work-instructions', _this.workInstructionId]);
            _this.processing = false;
        });
    };
    /**
    * Checks any draft workinstructions for the job
    */
    WorkInstructionStepDetailComponent.prototype.checkDraftWorkInstruction = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.getWorkInstruction(this.jobId, this.workInstructionId)
            .subscribe(function (response) {
            var workInstruction = response.json();
            if (workInstruction.workInstructionStatusId < workInstruction_model_1.workinstructionstatuses.Active) {
                _this.isAllowWorkInstruction = true;
            }
            _this.processing = false;
            _this.showArchive = _this.stateService.hasPrivilege('workinstructions-archive') && _this.isAllowWorkInstruction ? true : false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    /**
     * Saves the workinstruction defect record
     */
    WorkInstructionStepDetailComponent.prototype.saveWorkInstructionStep = function () {
        var _this = this;
        this.processing = true;
        var fileToUpload = null;
        var fi = this.fileInput.nativeElement;
        if (fi.files && fi.files[0]) {
            fileToUpload = fi.files[0];
        }
        this.workInstructionService.saveStep(this.jobId, this.workInstructionId, this.workInstructionStep, fileToUpload)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'saved successfully.');
            _this.loadWorkInstructionStep();
            _this.processing = false;
            window.scrollTo(0, 0);
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
            window.scrollTo(0, 0);
        });
    };
    /**
     * Archives an workinstruction defect (and closes the user account if one exists)
     */
    WorkInstructionStepDetailComponent.prototype.archiveWorkInstructionStep = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.removeStep(this.jobId, this.workInstructionStep.workInstructionId, this.workInstructionStep.id)
            .subscribe(function (response) {
            _this.notificationService.notify('warning', "'data has been archived.");
            _this.closeModal('archiveDefect');
            _this.processing = false;
            _this.router.navigate(['/jobs/', _this.jobId, 'work-instructions', _this.workInstructionStep.workInstructionId]);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('archiveDefect');
        });
    };
    return WorkInstructionStepDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.ViewChild("fileInput"),
    __metadata("design:type", Object)
], WorkInstructionStepDetailComponent.prototype, "fileInput", void 0);
WorkInstructionStepDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(321)
    }),
    __param(0, core_1.Inject('AZURE_FILE_PATH')),
    __metadata("design:paramtypes", [String, platform_browser_1.DomSanitizer,
        modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        workinstruction_service_1.WorkInstructionService,
        job_service_1.JobServices,
        state_service_1.StateService])
], WorkInstructionStepDetailComponent);
exports.WorkInstructionStepDetailComponent = WorkInstructionStepDetailComponent;


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var _ = __webpack_require__(23);
var FileSaver = __webpack_require__(97);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var workinstruction_service_1 = __webpack_require__(27);
var job_service_1 = __webpack_require__(13);
var riskassessment_service_1 = __webpack_require__(60);
var workInstruction_model_1 = __webpack_require__(30);
var workInstruction_partnumber_model_1 = __webpack_require__(48);
var workInstruction_defect_model_1 = __webpack_require__(47);
var pagination_model_1 = __webpack_require__(11);
var transaction_model_1 = __webpack_require__(15);
var job_model_1 = __webpack_require__(14);
var risk_assessment_model_1 = __webpack_require__(278);
var ng2_dragula_1 = __webpack_require__(218);
var http_1 = __webpack_require__(7);
var workinstruction_rework_model_1 = __webpack_require__(49);
var workInstruction_step_model_1 = __webpack_require__(96);
var WorkInstructionDetailComponent = (function (_super) {
    __extends(WorkInstructionDetailComponent, _super);
    function WorkInstructionDetailComponent(modalService, route, router, notificationService, workInstructionService, dragulaService, jobService, riskAssessmentService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.route = route;
        _this.router = router;
        _this.notificationService = notificationService;
        _this.workInstructionService = workInstructionService;
        _this.dragulaService = dragulaService;
        _this.jobService = jobService;
        _this.riskAssessmentService = riskAssessmentService;
        _this.workinstruction = new workInstruction_model_1.WorkInstruction();
        _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
        _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
        _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
        _this.newStep = new workInstruction_step_model_1.WorkInstructionStep();
        _this.processing = false;
        _this.showPartnumber = false;
        _this.alllowDeletePartnumber = false;
        _this.isAnyDraftWorkInstruction = true;
        _this.cloneWorkInstructionLoading = false;
        _this.isDraftWorkInstructionStatus = false;
        _this.isRequestedWorkInstructionStatus = false;
        _this.showCloneWorkInstruction = false;
        _this.showDefect = false;
        _this.showRework = false;
        _this.workInstructionPartNumbersLoading = false;
        _this.workInstructionPartNumbersPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionPartNumbersConfig = workInstruction_partnumber_model_1.workInstructionPartNumberFullDataTableConfig;
        _this.workInstructionStepsLoading = false;
        _this.workInstructionStepPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionStepsConfig = workInstruction_step_model_1.workInstructionStepFullDataTableConfig;
        _this.jobDefectsLoading = false;
        _this.jobDefectPagination = new pagination_model_1.Pagination(null);
        _this.jobDefectsConfig = workInstruction_defect_model_1.workInstructionDefectFullDataTableConfig;
        _this.workInstructionReworkLoading = false;
        _this.workInstructionReworkPagination = new pagination_model_1.Pagination(null);
        _this.workInstructionReworkConfig = workinstruction_rework_model_1.workInstructionReworkFullDataTableConfig;
        _this.transactionsLoading = false;
        _this.transactionPagination = new pagination_model_1.Pagination(null);
        _this.transactionsConfig = transaction_model_1.transactionFullDataTableConfig;
        _this.workInstructionDocumentsLoading = false;
        _this.riskassessmentsLoading = false;
        _this.riskassessmentsPagination = new pagination_model_1.Pagination(null);
        _this.riskassessmentsConfig = risk_assessment_model_1.riskAssessmentDataTableConfig;
        return _this;
    }
    WorkInstructionDetailComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadWorkInstructions();
        this.transactionPagination.pageSize = 3;
        this.transactionPagination.pageIndex = 0;
        this.dragulaService.drop.subscribe(function (value) {
            var bagName = value[0], e = value[1], el = value[2];
            var children = el.children;
            for (var i = 0; i < children.length; i++) {
                var child = _this.workInstructionSteps.find(function (c) { return c.id == children[i].dataset.id; });
                child.sequence = i + 1;
            }
            _this.updateWorkInstructionStepSequence();
        });
    };
    /**
    * Loads the work-instruction record and associated record sets
    */
    WorkInstructionDetailComponent.prototype.loadWorkInstructions = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.workInstructionService.getWorkInstruction(+params['id'], +params['workInstructionId']); })
            .subscribe(function (workinstruction) {
            _this.workinstruction = workinstruction.json();
            _this.showPartnumber = _this.workinstruction.workInstructionStatusId == workInstruction_model_1.workinstructionstatuses.Draft;
            _this.workInstructionStatus = workInstruction_model_1.workinstructionstatuses[_this.workinstruction.workInstructionStatusId];
            _this.isDraftWorkInstructionStatus = _this.workinstruction.workInstructionStatusId == workInstruction_model_1.workinstructionstatuses.Draft;
            _this.isRequestedWorkInstructionStatus = _this.workinstruction.workInstructionStatusId == workInstruction_model_1.workinstructionstatuses.Requested;
            _this.alllowDeletePartnumber = _this.workinstruction.workInstructionStatusId == workInstruction_model_1.workinstructionstatuses.Draft &&
                _this.stateService.hasPrivilege('workinstructions-edit') ? true : false;
            _this.loadJob();
            _this.loadDocuments();
            _this.loadPartNumbers();
            _this.loadTransactions();
            _this.loadRiskAssessments();
            _this.processing = false;
        }, function (error) {
            _this.router.navigate(['/jobs/', _this.workinstruction.jobId]);
            _this.processing = false;
        });
    };
    /**
    * Loads the job record and associated with the workinstruction
    */
    WorkInstructionDetailComponent.prototype.loadJob = function () {
        var _this = this;
        this.processing = true;
        this.route.params
            .switchMap(function (params) { return _this.jobService.getJob(+params['id']); })
            .subscribe(function (response) {
            _this.job = response.json();
            _this.checkDraftWorkInstruction();
            _this.showDefect = _this.job.jobTypeId == job_model_1.jobtypes.Sort || _this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework ? true : false;
            _this.showRework = _this.job.jobTypeId == job_model_1.jobtypes.Sort_Rework || _this.job.jobTypeId == job_model_1.jobtypes.Rework ? true : false;
            if (_this.showDefect) {
                _this.loadDefects();
            }
            if (_this.showRework) {
                _this.loadWorkIstructionRework();
            }
            _this.loadSteps();
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    /**
    * Loads workinstruction defects associated with the job for the defect grid in the UI
    */
    WorkInstructionDetailComponent.prototype.loadDefects = function () {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.getDefects(this.workinstruction.jobId, this.workinstruction.id, this.jobDefectsConfig, this.jobDefectPagination)
            .subscribe(function (response) {
            _this.jobDefects = response.json();
            _this.jobDefectPagination = _this.getPagination(response);
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    /**
   * Loads workinstruction steps associated with the job for the step grid in the UI
   */
    WorkInstructionDetailComponent.prototype.loadSteps = function () {
        var _this = this;
        this.workInstructionStepsLoading = true;
        this.workInstructionService.getSteps(this.workinstruction.jobId, this.workinstruction.id, this.workInstructionStepsConfig, this.workInstructionStepPagination)
            .subscribe(function (response) {
            _this.workInstructionSteps = response.json();
            _this.workInstructionStepPagination = _this.getPagination(response);
            _this.workInstructionStepsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionStepsLoading = false;
        });
    };
    /**
    * Loads workinstruction part number associated with the job for the partnumber grid in the UI
    */
    WorkInstructionDetailComponent.prototype.loadPartNumbers = function () {
        var _this = this;
        this.workInstructionPartNumbersLoading = true;
        this.workInstructionService.getPartNumbers(this.workinstruction.jobId, this.workinstruction.id, this.workInstructionPartNumbersConfig, this.workInstructionPartNumbersPagination)
            .subscribe(function (response) {
            _this.workInstructionPartNumbers = response.json();
            _this.workInstructionPartNumbersPagination = _this.getPagination(response);
            _this.workInstructionPartNumbersLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionPartNumbersLoading = false;
        });
    };
    /**
    * Loads all transactions associated with the user for the timeline interface
    */
    WorkInstructionDetailComponent.prototype.loadTransactions = function () {
        var _this = this;
        this.transactionsLoading = true;
        this.workInstructionService.getTransactions(this.workinstruction.jobId, this.workinstruction.id, this.transactionsConfig, this.transactionPagination)
            .subscribe(function (response) {
            _this.transactions = response.json();
            _this.transactionPagination = _this.getPagination(response);
            _this.transactionsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.transactionsLoading = false;
        });
    };
    /**
     * Loads WorkInstruction Reworks associated with the job for the partnumber grid in the UI
     */
    WorkInstructionDetailComponent.prototype.loadWorkIstructionRework = function () {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.getReworks(this.job.id, this.workinstruction.id, this.workInstructionReworkConfig, this.workInstructionReworkPagination)
            .subscribe(function (response) {
            _this.workInstructionReworks = response.json();
            _this.workInstructionReworkPagination = _this.getPagination(response);
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    /**
     * Checks any draft workinstructions for the job
     */
    WorkInstructionDetailComponent.prototype.checkDraftWorkInstruction = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.getWorkInstructions(this.workinstruction.jobId)
            .subscribe(function (response) {
            var workInstructions = response.json();
            if (workInstructions) {
                _this.isAnyDraftWorkInstruction = _.some(workInstructions, ['workInstructionStatusId', workInstruction_model_1.workinstructionstatuses.Draft]);
            }
            _this.processing = false;
            _this.showCloneWorkInstruction = (!_this.isAnyDraftWorkInstruction) && _this.job.jobStatusId >= job_model_1.jobstatuses.Active ? true : false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.processing = false;
        });
    };
    /**
     * Updates work-instruction defects sequences
     */
    //updateWorkInstructionDefectSequence() {
    //    this.workInstructionDefectsLoading = true;
    //    this.workInstructionService.updateWorkInstructionStepSequence(this.workinstruction.jobId, this.workinstruction.id, this.workInstructionDefects)
    //        .subscribe(
    //        response => {
    //            this.notificationService.notify('success', 'Defect sequence updated successfully.');
    //            this.workInstructionDefectsLoading = false;
    //        },
    //        error => {
    //            this.notificationService.notify('error', error._body);
    //            this.workInstructionDefectsLoading = false;
    //        });
    //}
    /**
   * Updates work-instruction step sequences
   */
    WorkInstructionDetailComponent.prototype.updateWorkInstructionStepSequence = function () {
        var _this = this;
        this.workInstructionStepsLoading = true;
        this.workInstructionService.updateWorkInstructionStepSequence(this.workinstruction.jobId, this.workinstruction.id, this.workInstructionSteps)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'Step sequence updated successfully.');
            _this.workInstructionStepsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.workInstructionStepsLoading = false;
        });
    };
    /**
     * Adds workinstruction part number
     */
    WorkInstructionDetailComponent.prototype.addPartNumber = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addPartNumber(this.workinstruction.jobId, this.workinstruction.id, this.newPartNumber)
            .subscribe(function (response) {
            _this.notificationService.notify('success', _this.newPartNumber.partNumber + ' added successfully.');
            _this.newPartNumber = new workInstruction_partnumber_model_1.WorkInstructionPartNumber();
            _this.processing = false;
            _this.loadPartNumbers();
            _this.closeModal('addPartNumber');
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addPartNumber');
        });
    };
    /**
     * Removes workinstruction part number
     */
    WorkInstructionDetailComponent.prototype.deletePartNumber = function (partnumber) {
        var _this = this;
        this.workInstructionPartNumbersLoading = true;
        this.workInstructionService.removePartNumber(this.workinstruction.jobId, this.workinstruction.id, partnumber.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', partnumber.partNumber + ' deleted successfully.');
            _this.loadPartNumbers();
            _this.workInstructionPartNumbersLoading = false;
            _this.loadTransactions();
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionPartNumbersLoading = false;
        });
    };
    /**
     * Adds workinstruction defect
     */
    WorkInstructionDetailComponent.prototype.addDefect = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addDefect(this.workinstruction.jobId, this.workinstruction.id, this.newDefect)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New defect added successfully.');
            _this.newDefect = new workInstruction_defect_model_1.WorkInstructionDefect();
            _this.processing = false;
            _this.loadDefects();
            _this.loadTransactions();
            _this.closeModal('addDefect');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addDefect');
        });
    };
    /**
     *  Removes WorkInstruction Defect
     */
    WorkInstructionDetailComponent.prototype.deleteDefect = function (defect) {
        var _this = this;
        this.jobDefectsLoading = true;
        this.workInstructionService.removeDefect(this.job.id, this.workinstruction.id, defect.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', defect.name + ' deleted successfully.');
            _this.loadDefects();
            _this.jobDefectsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.jobDefectsLoading = false;
        });
    };
    /**
     * Adds workInstruction Rework
     */
    WorkInstructionDetailComponent.prototype.addWorkInstructionReWork = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addRework(this.job.id, this.workinstruction.id, this.newRework)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New rework added successfully.');
            _this.newRework = new workinstruction_rework_model_1.WorkInstructionRework();
            _this.processing = false;
            _this.loadWorkIstructionRework();
            _this.closeModal('addRework');
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addRework');
        });
    };
    /**
     * Removes workInstruction Rework
     */
    WorkInstructionDetailComponent.prototype.deleteWorkInstructionRework = function (rework) {
        var _this = this;
        this.workInstructionReworkLoading = true;
        this.workInstructionService.removeRework(this.job.id, this.workinstruction.id, rework.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', rework.name + ' deleted successfully.');
            _this.loadWorkIstructionRework();
            _this.workInstructionReworkLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionReworkLoading = false;
        });
    };
    /**
    * Adds workinstruction step
    */
    WorkInstructionDetailComponent.prototype.addStep = function () {
        var _this = this;
        this.processing = true;
        this.workInstructionService.addStep(this.workinstruction.jobId, this.workinstruction.id, this.newStep)
            .subscribe(function (response) {
            _this.notificationService.notify('success', 'New step added successfully.');
            _this.newStep = new workInstruction_step_model_1.WorkInstructionStep();
            _this.loadSteps();
            _this.loadTransactions();
            _this.closeModal('addStep');
            _this.processing = false;
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.closeModal('addStep');
        });
    };
    /**
    * Removes workinstruction step
    */
    WorkInstructionDetailComponent.prototype.deleteStep = function (Step) {
        var _this = this;
        this.workInstructionStepsLoading = true;
        this.workInstructionService.removeStep(this.workinstruction.jobId, this.workinstruction.id, Step.id)
            .subscribe(function (response) {
            _this.notificationService.notify('success', Step.description + ' deleted successfully.');
            _this.loadSteps();
            _this.loadTransactions();
            window.scrollTo(0, 0);
            _this.workInstructionStepsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionStepsLoading = false;
        });
    };
    /**
     * Clone work-instruction of current work-instruction
     */
    WorkInstructionDetailComponent.prototype.cloneWorkInstruction = function () {
        var _this = this;
        this.cloneWorkInstructionLoading = true;
        this.workInstructionService.cloneWorkInstruction(this.workinstruction.jobId, this.workinstruction.id)
            .subscribe(function (response) {
            var newWorkInstruction = response.json();
            _this.notificationService.notify('success', 'Work-Instruction clone successfully.');
            _this.checkDraftWorkInstruction();
            _this.loadTransactions();
            _this.cloneWorkInstructionLoading = false;
            _this.router.navigate(['/jobs/', newWorkInstruction.jobId, 'work-instructions', newWorkInstruction.id]);
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.cloneWorkInstructionLoading = false;
        });
    };
    /**
     * Loads all workinstruction documents
     */
    WorkInstructionDetailComponent.prototype.loadDocuments = function () {
        var _this = this;
        this.workInstructionDocumentsLoading = true;
        this.workInstructionService.getWorkInstructionDocuments(this.workinstruction.jobId, this.workinstruction.id)
            .subscribe(function (response) {
            _this.workInstructionDocuments = response.json();
            _this.workInstructionDocumentsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionDocumentsLoading = false;
        });
    };
    /**
     * Fetches document from selected document
     */
    WorkInstructionDetailComponent.prototype.fetchDocument = function (documentrevision) {
        var _this = this;
        this.workInstructionDocumentsLoading = true;
        var options = new http_1.RequestOptions({ responseType: http_1.ResponseContentType.Blob });
        this.workInstructionService.fetchWorkInstructionDocument(this.job.id, this.workinstruction.id, documentrevision.documentId)
            .subscribe(function (response) {
            FileSaver.saveAs(response, documentrevision.documentName + '.pdf');
            var fileURL = URL.createObjectURL(response);
            window.open(fileURL);
            _this.workInstructionDocumentsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.workInstructionDocumentsLoading = false;
        });
    };
    /**
     * Approval request of the work instruction for job
     */
    WorkInstructionDetailComponent.prototype.workInstructionRequest = function () {
        var _this = this;
        this.workInstructionService.createWorkInstructionRequest(this.job.id, this.workinstruction.id)
            .subscribe(function (workinstruction) {
            _this.workinstruction = workinstruction.json();
        });
    };
    /**
     * Approve workinstruction for job
     */
    WorkInstructionDetailComponent.prototype.workInstructionApprove = function () {
        var _this = this;
        this.workInstructionService.approveWorkInstructionRequest(this.job.id, this.workinstruction.id)
            .subscribe(function (workinstruction) {
            _this.workinstruction = workinstruction.json();
            _this.notificationService.notify('success', 'Approval request sent.');
        });
    };
    /**
     * Decline workinstruction for job
     */
    WorkInstructionDetailComponent.prototype.workInstructionDecline = function () {
        var _this = this;
        this.workInstructionService.declineWorkInstructionRequest(this.job.id, this.workinstruction.id)
            .subscribe(function (workinstruction) {
            _this.workinstruction = workinstruction.json();
            _this.notificationService.notify('warning', 'Request declined successfully.');
        });
    };
    /**
    * loads risk assessment for workinstruction
    */
    WorkInstructionDetailComponent.prototype.loadRiskAssessments = function () {
        var _this = this;
        this.riskassessmentsLoading = true;
        this.riskAssessmentService.getRiskAssessments(this.workinstruction.jobId, this.workinstruction.id, this.riskassessmentsConfig, this.riskassessmentsPagination)
            .subscribe(function (response) {
            _this.riskAssessments = response.json();
            _this.riskassessmentsPagination = _this.getPagination(response);
            _this.riskassessmentsLoading = false;
        }, function (error) {
            _this.notificationService.notify('error', error);
            _this.riskassessmentsLoading = false;
        });
    };
    return WorkInstructionDetailComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
WorkInstructionDetailComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(322),
        styles: [
            "\n.tagline {\n  position: relative;\n  margin-top: 0;\n}\n.tagline-text {\n  vertical-align: middle;\n}\n.__slackin {\n  float: right;\n  margin-left: 10px;\n  vertical-align: middle;\n}\n\n.promo {\n  margin-bottom: 0;\n  font-style: italic;\n  padding: 10px;\n  background-color: #ff4020;\n  border-bottom: 5px solid #c00;\n}\n\n.gh-fork {\n  position: fixed;\n  top: 0;\n  right: 0;\n  border: 0;\n}\n\n/* dragula-specific example page styles */\n.wrapper {\n  display: table;\n}\n.container {\n  display: table-cell;\n  background-color: rgba(255, 255, 255, 0.2);\n  width: 50%;\n}\n.container:nth-child(odd) {\n  background-color: rgba(0, 0, 0, 0.2);\n}\n/*\n * note that styling gu-mirror directly is a bad practice because it's too generic.\n * you're better off giving the draggable elements a unique class and styling that directly!\n */\n.container > div,\n.gu-mirror {\n  margin: 10px;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.2);\n  transition: opacity 0.4s ease-in-out;\n}\n.container > div {\n  cursor: move;\n  cursor: grab;\n  cursor: -moz-grab;\n  cursor: -webkit-grab;\n}\n.gu-mirror {\n  cursor: grabbing;\n  cursor: -moz-grabbing;\n  cursor: -webkit-grabbing;\n}\n.container .ex-moved {\n  background-color: #e74c3c;\n}\n.container.ex-over {\n  background-color: rgba(255, 255, 255, 0.3);\n}\n#left-lovehandles > div,\n#right-lovehandles > div {\n  cursor: initial;\n}\n.handle {\n  padding: 0 5px;\n  margin-right: 5px;\n  background-color: rgba(0, 0, 0, 0.4);\n  cursor: move;\n}\n.image-thing {\n  margin: 20px 0;\n  display: block;\n  text-align: center;\n}\n.slack-join {\n  position: absolute;\n  font-weight: normal;\n  font-size: 14px;\n  right: 10px;\n  top: 50%;\n  margin-top: -8px;\n  line-height: 16px;\n}\n\n/* Carbon */\n\n#carbonads {\n  position: absolute;\n  display: block;\n  overflow: hidden;\n  margin-left: -180px;\n  padding: 1em;\n  max-width: calc(130px + 2em);\n  background-color: #aa5579;\n  text-align: center;\n  font-size: 12px;\n  font-family: Verdana, \"Helvetica Neue\", Helvetica, sans-serif;\n  line-height: 1.5;\n}\n\n#carbonads a {\n  color: inherit;\n  text-decoration: none;\n  font-weight: 400;\n  transition: color .2s ease-in-out;\n}\n\n#carbonads a:hover {\n  color: #221c3b;\n}\n\n#carbonads span {\n  display: block;\n  overflow: hidden;\n}\n\n.carbon-img {\n  display: block;\n  margin: 0 auto 1em;\n}\n\n.carbon-text {\n  display: block;\n  margin-bottom: 1em;\n}\n\n.carbon-poweredby {\n  display: block;\n  text-transform: uppercase;\n  letter-spacing: 1px;\n  font-size: 9px;\n}\n\n@media only screen and (min-width: 320px) and (max-width: 960px) {\n  #carbonads {\n    position: relative;\n    float: none;\n    margin: 0 auto -2em;\n    max-width: 330px;\n  }\n  #carbonads span {\n    position: relative;\n  }\n  #carbonads > span {\n    max-width: none;\n  }\n  .carbon-img {\n    float: left;\n    margin: 0 1em 0 0;\n  }\n  .carbon-text {\n    float: left;\n    margin-bottom: 0;\n    max-width: calc(100% - 130px - 1em);\n    text-align: left;\n  }\n  .carbon-poweredby {\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    display: block;\n  }\n}"
        ]
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        router_1.ActivatedRoute,
        router_1.Router,
        notification_service_1.NotificationService,
        workinstruction_service_1.WorkInstructionService,
        ng2_dragula_1.DragulaService,
        job_service_1.JobServices,
        riskassessment_service_1.RiskAssessmentService,
        state_service_1.StateService])
], WorkInstructionDetailComponent);
exports.WorkInstructionDetailComponent = WorkInstructionDetailComponent;


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var InProgressComponent = (function () {
    function InProgressComponent() {
    }
    return InProgressComponent;
}());
InProgressComponent = __decorate([
    core_1.Component({
        template: __webpack_require__(345)
    }),
    __metadata("design:paramtypes", [])
], InProgressComponent);
exports.InProgressComponent = InProgressComponent;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.phoneMask = ['(', /[1-9]/, /\d/, /\d/, ')', ' ', /\d/, /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/];


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.ssnMask = [/\d/, /\d/, /\d/, '-', /\d/, /\d/, '-', /\d/, /\d/, /\d/, /\d/];


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var CommonStyles = (function () {
    function CommonStyles() {
    }
    return CommonStyles;
}());
CommonStyles.pointStyles = [
    { 'id': -99, 'class': 'info', 'icon': 'info', 'type': 'transaction' },
    { 'id': 10, 'class': 'info', 'icon': 'info', 'type': 'transaction' },
    { 'id': 1100, 'class': 'success', 'icon': 'fa-building', 'type': 'client' },
    { 'id': 1150, 'class': 'primary', 'icon': 'fa-building', 'type': 'client' },
    { 'id': 1190, 'class': 'info', 'icon': 'fa-building', 'type': 'client' },
    { 'id': 1199, 'class': 'danger', 'icon': 'fa-building', 'type': 'client' },
    { 'id': 2100, 'class': 'success', 'icon': 'fa-cube', 'type': 'job' },
    { 'id': 2150, 'class': 'primary', 'icon': 'fa-cube', 'type': 'job' },
    { 'id': 2190, 'class': 'info', 'icon': 'fa-cube', 'type': 'job' },
    { 'id': 2199, 'class': 'danger', 'icon': 'fa-cube', 'type': 'job' },
    { 'id': 1200, 'class': 'success', 'icon': 'fa-map-marker', 'type': 'location' },
    { 'id': 1250, 'class': 'primary', 'icon': 'fa-map-marker', 'type': 'location' },
    { 'id': 1290, 'class': 'info', 'icon': 'fa-map-marker', 'type': 'location' },
    { 'id': 1299, 'class': 'danger', 'icon': 'fa-map-marker', 'type': 'location' },
    { 'id': 4100, 'class': 'success', 'icon': 'fa-map-signs', 'type': 'address' },
    { 'id': 4150, 'class': 'primary', 'icon': 'fa-map-signs', 'type': 'address' },
    { 'id': 4190, 'class': 'info', 'icon': 'fa-map-signs', 'type': 'address' },
    { 'id': 4199, 'class': 'danger', 'icon': 'fa-map-signs', 'type': 'address' },
    { 'id': 4200, 'class': 'success', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4230, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4239, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4250, 'class': 'primary', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4275, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4290, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4299, 'class': 'danger', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4300, 'class': 'success', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4350, 'class': 'primary', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4390, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 4399, 'class': 'danger', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 1300, 'class': 'success', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 1350, 'class': 'primary', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 1390, 'class': 'info', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 1399, 'class': 'danger', 'icon': 'fa-user', 'type': 'user' },
    { 'id': 2200, 'class': 'success', 'icon': 'list', 'type': 'job' },
    { 'id': 2250, 'class': 'primary', 'icon': 'list', 'type': 'job' },
    { 'id': 2230, 'class': 'info', 'icon': 'list', 'type': 'job' },
    { 'id': 2239, 'class': 'info', 'icon': 'list', 'type': 'job' },
    { 'id': 2290, 'class': 'danger', 'icon': 'list', 'type': 'job' },
    { 'id': 2300, 'class': 'success', 'icon': 'life-ring', 'type': 'job' },
    { 'id': 2350, 'class': 'primary', 'icon': 'life-ring', 'type': 'job' },
    { 'id': 2399, 'class': 'danger', 'icon': 'life-ring', 'type': 'job' },
    { 'id': 2400, 'class': 'success', 'icon': 'search', 'type': 'job' },
    { 'id': 2450, 'class': 'primary', 'icon': 'search', 'type': 'job' },
    { 'id': 2499, 'class': 'danger', 'icon': 'search', 'type': 'job' },
    { 'id': 2500, 'class': 'success', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2550, 'class': 'primary', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2599, 'class': 'danger', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2570, 'class': 'success', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2575, 'class': 'primary', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2579, 'class': 'danger', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2600, 'class': 'success', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2650, 'class': 'primary', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 2699, 'class': 'danger', 'icon': 'check-square-o', 'type': 'job' },
    { 'id': 3100, 'class': 'success', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 3150, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 3190, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 3200, 'class': 'success', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 3250, 'class': 'primary', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 3290, 'class': 'danger', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 3300, 'class': 'success', 'icon': 'window-close-o', 'type': 'job' },
    { 'id': 3350, 'class': 'primary', 'icon': 'window-close-o', 'type': 'job' },
    { 'id': 3390, 'class': 'danger', 'icon': 'window-close-o', 'type': 'job' },
    { 'id': 101000, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 101010, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 101020, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 101050, 'class': 'danger', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 101099, 'class': 'info', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 101100, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 102010, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 102050, 'class': 'danger', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 102099, 'class': 'info', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 102100, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 201000, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 201010, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 201020, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 201050, 'class': 'danger', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202000, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202010, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202020, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202050, 'class': 'danger', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202099, 'class': 'info', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 202100, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203000, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203010, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203020, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203050, 'class': 'danger', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203099, 'class': 'info', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 203100, 'class': 'primary', 'icon': 'usd', 'type': 'transaction' },
    { 'id': 300000, 'class': 'primary', 'icon': 'tasks', 'type': 'transaction' },
    { 'id': 311010, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 311015, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 311020, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 311050, 'class': 'danger', 'icon': 'list', 'type': 'transaction' },
    { 'id': 311100, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312010, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312015, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312020, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312050, 'class': 'danger', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312099, 'class': 'info', 'icon': 'list', 'type': 'transaction' },
    { 'id': 312100, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 313010, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 313020, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 313050, 'class': 'danger', 'icon': 'list', 'type': 'transaction' },
    { 'id': 313099, 'class': 'info', 'icon': 'list', 'type': 'transaction' },
    { 'id': 313100, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 314000, 'class': 'primary', 'icon': 'list', 'type': 'transaction' },
    { 'id': 320010, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 320015, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 320020, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 320050, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 320100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321010, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321015, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321020, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321050, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321099, 'class': 'info', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 321100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 322010, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 322020, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 322050, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 322099, 'class': 'info', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 322100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 330010, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 330015, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 330020, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 330050, 'class': 'danger', 'icon': 'search', 'type': 'transaction' },
    { 'id': 330100, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331010, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331015, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331020, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331050, 'class': 'danger', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331099, 'class': 'info', 'icon': 'search', 'type': 'transaction' },
    { 'id': 331100, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
    { 'id': 340010, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 340015, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 340020, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 340050, 'class': 'danger', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 340100, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 350010, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 350015, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 350020, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 350050, 'class': 'danger', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 350100, 'class': 'primary', 'icon': 'check-square-o', 'type': 'transaction' },
    { 'id': 390010, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 390015, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 390020, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 390050, 'class': 'danger', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 390100, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391010, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391015, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391020, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391050, 'class': 'danger', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391099, 'class': 'info', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 391100, 'class': 'primary', 'icon': 'window-close-o', 'type': 'transaction' },
    { 'id': 500010, 'class': 'primary', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 500015, 'class': 'primary', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 500020, 'class': 'primary', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 500050, 'class': 'danger', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 500100, 'class': 'primary', 'icon': 'file-text-o', 'type': 'transaction' },
    { 'id': 510100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 510015, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 510020, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 510050, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 510100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511010, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511015, 'class': 'danger', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511020, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511050, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511099, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 511100, 'class': 'primary', 'icon': 'life-ring', 'type': 'transaction' },
    { 'id': 800100, 'class': 'primary', 'icon': 'search', 'type': 'transaction' },
];
exports.CommonStyles = CommonStyles;


/***/ }),
/* 94 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var MenuItem = (function () {
    function MenuItem() {
    }
    return MenuItem;
}());
exports.MenuItem = MenuItem;


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var UserGrid = (function () {
    function UserGrid() {
    }
    return UserGrid;
}());
exports.UserGrid = UserGrid;
exports.userFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'users',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'name',
            columnHeader: 'Name',
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'emailAddress',
            columnHeader: 'Email Address'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'type',
            columnHeader: 'Type'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'lastLogin',
            columnHeader: 'Last Login'
        })
    ]
});


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var WorkInstructionStep = (function () {
    function WorkInstructionStep() {
    }
    return WorkInstructionStep;
}());
exports.WorkInstructionStep = WorkInstructionStep;
exports.workInstructionStepFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'steps',
    sortColumn: 'sequence',
    sortDirection: data_table_config_model_1.SortDirection.asc,
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'description',
            columnHeader: 'Step'
        })
    ]
});


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_RESULT__;/* FileSaver.js
 * A saveAs() FileSaver implementation.
 * 1.3.2
 * 2016-06-16 18:25:19
 *
 * By Eli Grey, http://eligrey.com
 * License: MIT
 *   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md
 */

/*global self */
/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

/*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */

var saveAs = saveAs || (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof view === "undefined" || typeof navigator !== "undefined" && /MSIE [1-9]\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, is_safari = /constructor/i.test(view.HTMLElement) || view.safari
		, is_chrome_ios =/CriOS\/[\d]+/.test(navigator.userAgent)
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
		, arbitrary_revoke_timeout = 1000 * 40 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			setTimeout(revoker, arbitrary_revoke_timeout);
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
			if (/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(blob.type)) {
				return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, force = type === force_saveable_type
				, object_url
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {
						// Safari doesn't allow downloading of blob urls
						var reader = new FileReader();
						reader.onloadend = function() {
							var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');
							var popup = view.open(url, '_blank');
							if(!popup) view.location.href = url;
							url=undefined; // release reference before dispatching
							filesaver.readyState = filesaver.DONE;
							dispatch_all();
						};
						reader.readAsDataURL(blob);
						filesaver.readyState = filesaver.INIT;
						return;
					}
					// don't create more object URLs than needed
					if (!object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (force) {
						view.location.href = object_url;
					} else {
						var opened = view.open(object_url, "_blank");
						if (!opened) {
							// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html
							view.location.href = object_url;
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
			;
			filesaver.readyState = filesaver.INIT;

			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				setTimeout(function() {
					save_link.href = object_url;
					save_link.download = name;
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}

			fs_error();
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name || blob.name || "download", no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			name = name || blob.name || "download";

			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name);
		};
	}

	FS_proto.abort = function(){};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));
// `self` is undefined in Firefox for Android content script context
// while `this` is nsIContentFrameMessageManager
// with an attribute `content` that corresponds to the window

if (typeof module !== "undefined" && module.exports) {
  module.exports.saveAs = saveAs;
} else if (("function" !== "undefined" && __webpack_require__(359) !== null) && (__webpack_require__(360) !== null)) {
  !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {
    return saveAs;
  }.call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}


/***/ }),
/* 98 */
/***/ (function(module, exports) {

var ENTITIES = [['Aacute', [193]], ['aacute', [225]], ['Abreve', [258]], ['abreve', [259]], ['ac', [8766]], ['acd', [8767]], ['acE', [8766, 819]], ['Acirc', [194]], ['acirc', [226]], ['acute', [180]], ['Acy', [1040]], ['acy', [1072]], ['AElig', [198]], ['aelig', [230]], ['af', [8289]], ['Afr', [120068]], ['afr', [120094]], ['Agrave', [192]], ['agrave', [224]], ['alefsym', [8501]], ['aleph', [8501]], ['Alpha', [913]], ['alpha', [945]], ['Amacr', [256]], ['amacr', [257]], ['amalg', [10815]], ['amp', [38]], ['AMP', [38]], ['andand', [10837]], ['And', [10835]], ['and', [8743]], ['andd', [10844]], ['andslope', [10840]], ['andv', [10842]], ['ang', [8736]], ['ange', [10660]], ['angle', [8736]], ['angmsdaa', [10664]], ['angmsdab', [10665]], ['angmsdac', [10666]], ['angmsdad', [10667]], ['angmsdae', [10668]], ['angmsdaf', [10669]], ['angmsdag', [10670]], ['angmsdah', [10671]], ['angmsd', [8737]], ['angrt', [8735]], ['angrtvb', [8894]], ['angrtvbd', [10653]], ['angsph', [8738]], ['angst', [197]], ['angzarr', [9084]], ['Aogon', [260]], ['aogon', [261]], ['Aopf', [120120]], ['aopf', [120146]], ['apacir', [10863]], ['ap', [8776]], ['apE', [10864]], ['ape', [8778]], ['apid', [8779]], ['apos', [39]], ['ApplyFunction', [8289]], ['approx', [8776]], ['approxeq', [8778]], ['Aring', [197]], ['aring', [229]], ['Ascr', [119964]], ['ascr', [119990]], ['Assign', [8788]], ['ast', [42]], ['asymp', [8776]], ['asympeq', [8781]], ['Atilde', [195]], ['atilde', [227]], ['Auml', [196]], ['auml', [228]], ['awconint', [8755]], ['awint', [10769]], ['backcong', [8780]], ['backepsilon', [1014]], ['backprime', [8245]], ['backsim', [8765]], ['backsimeq', [8909]], ['Backslash', [8726]], ['Barv', [10983]], ['barvee', [8893]], ['barwed', [8965]], ['Barwed', [8966]], ['barwedge', [8965]], ['bbrk', [9141]], ['bbrktbrk', [9142]], ['bcong', [8780]], ['Bcy', [1041]], ['bcy', [1073]], ['bdquo', [8222]], ['becaus', [8757]], ['because', [8757]], ['Because', [8757]], ['bemptyv', [10672]], ['bepsi', [1014]], ['bernou', [8492]], ['Bernoullis', [8492]], ['Beta', [914]], ['beta', [946]], ['beth', [8502]], ['between', [8812]], ['Bfr', [120069]], ['bfr', [120095]], ['bigcap', [8898]], ['bigcirc', [9711]], ['bigcup', [8899]], ['bigodot', [10752]], ['bigoplus', [10753]], ['bigotimes', [10754]], ['bigsqcup', [10758]], ['bigstar', [9733]], ['bigtriangledown', [9661]], ['bigtriangleup', [9651]], ['biguplus', [10756]], ['bigvee', [8897]], ['bigwedge', [8896]], ['bkarow', [10509]], ['blacklozenge', [10731]], ['blacksquare', [9642]], ['blacktriangle', [9652]], ['blacktriangledown', [9662]], ['blacktriangleleft', [9666]], ['blacktriangleright', [9656]], ['blank', [9251]], ['blk12', [9618]], ['blk14', [9617]], ['blk34', [9619]], ['block', [9608]], ['bne', [61, 8421]], ['bnequiv', [8801, 8421]], ['bNot', [10989]], ['bnot', [8976]], ['Bopf', [120121]], ['bopf', [120147]], ['bot', [8869]], ['bottom', [8869]], ['bowtie', [8904]], ['boxbox', [10697]], ['boxdl', [9488]], ['boxdL', [9557]], ['boxDl', [9558]], ['boxDL', [9559]], ['boxdr', [9484]], ['boxdR', [9554]], ['boxDr', [9555]], ['boxDR', [9556]], ['boxh', [9472]], ['boxH', [9552]], ['boxhd', [9516]], ['boxHd', [9572]], ['boxhD', [9573]], ['boxHD', [9574]], ['boxhu', [9524]], ['boxHu', [9575]], ['boxhU', [9576]], ['boxHU', [9577]], ['boxminus', [8863]], ['boxplus', [8862]], ['boxtimes', [8864]], ['boxul', [9496]], ['boxuL', [9563]], ['boxUl', [9564]], ['boxUL', [9565]], ['boxur', [9492]], ['boxuR', [9560]], ['boxUr', [9561]], ['boxUR', [9562]], ['boxv', [9474]], ['boxV', [9553]], ['boxvh', [9532]], ['boxvH', [9578]], ['boxVh', [9579]], ['boxVH', [9580]], ['boxvl', [9508]], ['boxvL', [9569]], ['boxVl', [9570]], ['boxVL', [9571]], ['boxvr', [9500]], ['boxvR', [9566]], ['boxVr', [9567]], ['boxVR', [9568]], ['bprime', [8245]], ['breve', [728]], ['Breve', [728]], ['brvbar', [166]], ['bscr', [119991]], ['Bscr', [8492]], ['bsemi', [8271]], ['bsim', [8765]], ['bsime', [8909]], ['bsolb', [10693]], ['bsol', [92]], ['bsolhsub', [10184]], ['bull', [8226]], ['bullet', [8226]], ['bump', [8782]], ['bumpE', [10926]], ['bumpe', [8783]], ['Bumpeq', [8782]], ['bumpeq', [8783]], ['Cacute', [262]], ['cacute', [263]], ['capand', [10820]], ['capbrcup', [10825]], ['capcap', [10827]], ['cap', [8745]], ['Cap', [8914]], ['capcup', [10823]], ['capdot', [10816]], ['CapitalDifferentialD', [8517]], ['caps', [8745, 65024]], ['caret', [8257]], ['caron', [711]], ['Cayleys', [8493]], ['ccaps', [10829]], ['Ccaron', [268]], ['ccaron', [269]], ['Ccedil', [199]], ['ccedil', [231]], ['Ccirc', [264]], ['ccirc', [265]], ['Cconint', [8752]], ['ccups', [10828]], ['ccupssm', [10832]], ['Cdot', [266]], ['cdot', [267]], ['cedil', [184]], ['Cedilla', [184]], ['cemptyv', [10674]], ['cent', [162]], ['centerdot', [183]], ['CenterDot', [183]], ['cfr', [120096]], ['Cfr', [8493]], ['CHcy', [1063]], ['chcy', [1095]], ['check', [10003]], ['checkmark', [10003]], ['Chi', [935]], ['chi', [967]], ['circ', [710]], ['circeq', [8791]], ['circlearrowleft', [8634]], ['circlearrowright', [8635]], ['circledast', [8859]], ['circledcirc', [8858]], ['circleddash', [8861]], ['CircleDot', [8857]], ['circledR', [174]], ['circledS', [9416]], ['CircleMinus', [8854]], ['CirclePlus', [8853]], ['CircleTimes', [8855]], ['cir', [9675]], ['cirE', [10691]], ['cire', [8791]], ['cirfnint', [10768]], ['cirmid', [10991]], ['cirscir', [10690]], ['ClockwiseContourIntegral', [8754]], ['clubs', [9827]], ['clubsuit', [9827]], ['colon', [58]], ['Colon', [8759]], ['Colone', [10868]], ['colone', [8788]], ['coloneq', [8788]], ['comma', [44]], ['commat', [64]], ['comp', [8705]], ['compfn', [8728]], ['complement', [8705]], ['complexes', [8450]], ['cong', [8773]], ['congdot', [10861]], ['Congruent', [8801]], ['conint', [8750]], ['Conint', [8751]], ['ContourIntegral', [8750]], ['copf', [120148]], ['Copf', [8450]], ['coprod', [8720]], ['Coproduct', [8720]], ['copy', [169]], ['COPY', [169]], ['copysr', [8471]], ['CounterClockwiseContourIntegral', [8755]], ['crarr', [8629]], ['cross', [10007]], ['Cross', [10799]], ['Cscr', [119966]], ['cscr', [119992]], ['csub', [10959]], ['csube', [10961]], ['csup', [10960]], ['csupe', [10962]], ['ctdot', [8943]], ['cudarrl', [10552]], ['cudarrr', [10549]], ['cuepr', [8926]], ['cuesc', [8927]], ['cularr', [8630]], ['cularrp', [10557]], ['cupbrcap', [10824]], ['cupcap', [10822]], ['CupCap', [8781]], ['cup', [8746]], ['Cup', [8915]], ['cupcup', [10826]], ['cupdot', [8845]], ['cupor', [10821]], ['cups', [8746, 65024]], ['curarr', [8631]], ['curarrm', [10556]], ['curlyeqprec', [8926]], ['curlyeqsucc', [8927]], ['curlyvee', [8910]], ['curlywedge', [8911]], ['curren', [164]], ['curvearrowleft', [8630]], ['curvearrowright', [8631]], ['cuvee', [8910]], ['cuwed', [8911]], ['cwconint', [8754]], ['cwint', [8753]], ['cylcty', [9005]], ['dagger', [8224]], ['Dagger', [8225]], ['daleth', [8504]], ['darr', [8595]], ['Darr', [8609]], ['dArr', [8659]], ['dash', [8208]], ['Dashv', [10980]], ['dashv', [8867]], ['dbkarow', [10511]], ['dblac', [733]], ['Dcaron', [270]], ['dcaron', [271]], ['Dcy', [1044]], ['dcy', [1076]], ['ddagger', [8225]], ['ddarr', [8650]], ['DD', [8517]], ['dd', [8518]], ['DDotrahd', [10513]], ['ddotseq', [10871]], ['deg', [176]], ['Del', [8711]], ['Delta', [916]], ['delta', [948]], ['demptyv', [10673]], ['dfisht', [10623]], ['Dfr', [120071]], ['dfr', [120097]], ['dHar', [10597]], ['dharl', [8643]], ['dharr', [8642]], ['DiacriticalAcute', [180]], ['DiacriticalDot', [729]], ['DiacriticalDoubleAcute', [733]], ['DiacriticalGrave', [96]], ['DiacriticalTilde', [732]], ['diam', [8900]], ['diamond', [8900]], ['Diamond', [8900]], ['diamondsuit', [9830]], ['diams', [9830]], ['die', [168]], ['DifferentialD', [8518]], ['digamma', [989]], ['disin', [8946]], ['div', [247]], ['divide', [247]], ['divideontimes', [8903]], ['divonx', [8903]], ['DJcy', [1026]], ['djcy', [1106]], ['dlcorn', [8990]], ['dlcrop', [8973]], ['dollar', [36]], ['Dopf', [120123]], ['dopf', [120149]], ['Dot', [168]], ['dot', [729]], ['DotDot', [8412]], ['doteq', [8784]], ['doteqdot', [8785]], ['DotEqual', [8784]], ['dotminus', [8760]], ['dotplus', [8724]], ['dotsquare', [8865]], ['doublebarwedge', [8966]], ['DoubleContourIntegral', [8751]], ['DoubleDot', [168]], ['DoubleDownArrow', [8659]], ['DoubleLeftArrow', [8656]], ['DoubleLeftRightArrow', [8660]], ['DoubleLeftTee', [10980]], ['DoubleLongLeftArrow', [10232]], ['DoubleLongLeftRightArrow', [10234]], ['DoubleLongRightArrow', [10233]], ['DoubleRightArrow', [8658]], ['DoubleRightTee', [8872]], ['DoubleUpArrow', [8657]], ['DoubleUpDownArrow', [8661]], ['DoubleVerticalBar', [8741]], ['DownArrowBar', [10515]], ['downarrow', [8595]], ['DownArrow', [8595]], ['Downarrow', [8659]], ['DownArrowUpArrow', [8693]], ['DownBreve', [785]], ['downdownarrows', [8650]], ['downharpoonleft', [8643]], ['downharpoonright', [8642]], ['DownLeftRightVector', [10576]], ['DownLeftTeeVector', [10590]], ['DownLeftVectorBar', [10582]], ['DownLeftVector', [8637]], ['DownRightTeeVector', [10591]], ['DownRightVectorBar', [10583]], ['DownRightVector', [8641]], ['DownTeeArrow', [8615]], ['DownTee', [8868]], ['drbkarow', [10512]], ['drcorn', [8991]], ['drcrop', [8972]], ['Dscr', [119967]], ['dscr', [119993]], ['DScy', [1029]], ['dscy', [1109]], ['dsol', [10742]], ['Dstrok', [272]], ['dstrok', [273]], ['dtdot', [8945]], ['dtri', [9663]], ['dtrif', [9662]], ['duarr', [8693]], ['duhar', [10607]], ['dwangle', [10662]], ['DZcy', [1039]], ['dzcy', [1119]], ['dzigrarr', [10239]], ['Eacute', [201]], ['eacute', [233]], ['easter', [10862]], ['Ecaron', [282]], ['ecaron', [283]], ['Ecirc', [202]], ['ecirc', [234]], ['ecir', [8790]], ['ecolon', [8789]], ['Ecy', [1069]], ['ecy', [1101]], ['eDDot', [10871]], ['Edot', [278]], ['edot', [279]], ['eDot', [8785]], ['ee', [8519]], ['efDot', [8786]], ['Efr', [120072]], ['efr', [120098]], ['eg', [10906]], ['Egrave', [200]], ['egrave', [232]], ['egs', [10902]], ['egsdot', [10904]], ['el', [10905]], ['Element', [8712]], ['elinters', [9191]], ['ell', [8467]], ['els', [10901]], ['elsdot', [10903]], ['Emacr', [274]], ['emacr', [275]], ['empty', [8709]], ['emptyset', [8709]], ['EmptySmallSquare', [9723]], ['emptyv', [8709]], ['EmptyVerySmallSquare', [9643]], ['emsp13', [8196]], ['emsp14', [8197]], ['emsp', [8195]], ['ENG', [330]], ['eng', [331]], ['ensp', [8194]], ['Eogon', [280]], ['eogon', [281]], ['Eopf', [120124]], ['eopf', [120150]], ['epar', [8917]], ['eparsl', [10723]], ['eplus', [10865]], ['epsi', [949]], ['Epsilon', [917]], ['epsilon', [949]], ['epsiv', [1013]], ['eqcirc', [8790]], ['eqcolon', [8789]], ['eqsim', [8770]], ['eqslantgtr', [10902]], ['eqslantless', [10901]], ['Equal', [10869]], ['equals', [61]], ['EqualTilde', [8770]], ['equest', [8799]], ['Equilibrium', [8652]], ['equiv', [8801]], ['equivDD', [10872]], ['eqvparsl', [10725]], ['erarr', [10609]], ['erDot', [8787]], ['escr', [8495]], ['Escr', [8496]], ['esdot', [8784]], ['Esim', [10867]], ['esim', [8770]], ['Eta', [919]], ['eta', [951]], ['ETH', [208]], ['eth', [240]], ['Euml', [203]], ['euml', [235]], ['euro', [8364]], ['excl', [33]], ['exist', [8707]], ['Exists', [8707]], ['expectation', [8496]], ['exponentiale', [8519]], ['ExponentialE', [8519]], ['fallingdotseq', [8786]], ['Fcy', [1060]], ['fcy', [1092]], ['female', [9792]], ['ffilig', [64259]], ['fflig', [64256]], ['ffllig', [64260]], ['Ffr', [120073]], ['ffr', [120099]], ['filig', [64257]], ['FilledSmallSquare', [9724]], ['FilledVerySmallSquare', [9642]], ['fjlig', [102, 106]], ['flat', [9837]], ['fllig', [64258]], ['fltns', [9649]], ['fnof', [402]], ['Fopf', [120125]], ['fopf', [120151]], ['forall', [8704]], ['ForAll', [8704]], ['fork', [8916]], ['forkv', [10969]], ['Fouriertrf', [8497]], ['fpartint', [10765]], ['frac12', [189]], ['frac13', [8531]], ['frac14', [188]], ['frac15', [8533]], ['frac16', [8537]], ['frac18', [8539]], ['frac23', [8532]], ['frac25', [8534]], ['frac34', [190]], ['frac35', [8535]], ['frac38', [8540]], ['frac45', [8536]], ['frac56', [8538]], ['frac58', [8541]], ['frac78', [8542]], ['frasl', [8260]], ['frown', [8994]], ['fscr', [119995]], ['Fscr', [8497]], ['gacute', [501]], ['Gamma', [915]], ['gamma', [947]], ['Gammad', [988]], ['gammad', [989]], ['gap', [10886]], ['Gbreve', [286]], ['gbreve', [287]], ['Gcedil', [290]], ['Gcirc', [284]], ['gcirc', [285]], ['Gcy', [1043]], ['gcy', [1075]], ['Gdot', [288]], ['gdot', [289]], ['ge', [8805]], ['gE', [8807]], ['gEl', [10892]], ['gel', [8923]], ['geq', [8805]], ['geqq', [8807]], ['geqslant', [10878]], ['gescc', [10921]], ['ges', [10878]], ['gesdot', [10880]], ['gesdoto', [10882]], ['gesdotol', [10884]], ['gesl', [8923, 65024]], ['gesles', [10900]], ['Gfr', [120074]], ['gfr', [120100]], ['gg', [8811]], ['Gg', [8921]], ['ggg', [8921]], ['gimel', [8503]], ['GJcy', [1027]], ['gjcy', [1107]], ['gla', [10917]], ['gl', [8823]], ['glE', [10898]], ['glj', [10916]], ['gnap', [10890]], ['gnapprox', [10890]], ['gne', [10888]], ['gnE', [8809]], ['gneq', [10888]], ['gneqq', [8809]], ['gnsim', [8935]], ['Gopf', [120126]], ['gopf', [120152]], ['grave', [96]], ['GreaterEqual', [8805]], ['GreaterEqualLess', [8923]], ['GreaterFullEqual', [8807]], ['GreaterGreater', [10914]], ['GreaterLess', [8823]], ['GreaterSlantEqual', [10878]], ['GreaterTilde', [8819]], ['Gscr', [119970]], ['gscr', [8458]], ['gsim', [8819]], ['gsime', [10894]], ['gsiml', [10896]], ['gtcc', [10919]], ['gtcir', [10874]], ['gt', [62]], ['GT', [62]], ['Gt', [8811]], ['gtdot', [8919]], ['gtlPar', [10645]], ['gtquest', [10876]], ['gtrapprox', [10886]], ['gtrarr', [10616]], ['gtrdot', [8919]], ['gtreqless', [8923]], ['gtreqqless', [10892]], ['gtrless', [8823]], ['gtrsim', [8819]], ['gvertneqq', [8809, 65024]], ['gvnE', [8809, 65024]], ['Hacek', [711]], ['hairsp', [8202]], ['half', [189]], ['hamilt', [8459]], ['HARDcy', [1066]], ['hardcy', [1098]], ['harrcir', [10568]], ['harr', [8596]], ['hArr', [8660]], ['harrw', [8621]], ['Hat', [94]], ['hbar', [8463]], ['Hcirc', [292]], ['hcirc', [293]], ['hearts', [9829]], ['heartsuit', [9829]], ['hellip', [8230]], ['hercon', [8889]], ['hfr', [120101]], ['Hfr', [8460]], ['HilbertSpace', [8459]], ['hksearow', [10533]], ['hkswarow', [10534]], ['hoarr', [8703]], ['homtht', [8763]], ['hookleftarrow', [8617]], ['hookrightarrow', [8618]], ['hopf', [120153]], ['Hopf', [8461]], ['horbar', [8213]], ['HorizontalLine', [9472]], ['hscr', [119997]], ['Hscr', [8459]], ['hslash', [8463]], ['Hstrok', [294]], ['hstrok', [295]], ['HumpDownHump', [8782]], ['HumpEqual', [8783]], ['hybull', [8259]], ['hyphen', [8208]], ['Iacute', [205]], ['iacute', [237]], ['ic', [8291]], ['Icirc', [206]], ['icirc', [238]], ['Icy', [1048]], ['icy', [1080]], ['Idot', [304]], ['IEcy', [1045]], ['iecy', [1077]], ['iexcl', [161]], ['iff', [8660]], ['ifr', [120102]], ['Ifr', [8465]], ['Igrave', [204]], ['igrave', [236]], ['ii', [8520]], ['iiiint', [10764]], ['iiint', [8749]], ['iinfin', [10716]], ['iiota', [8489]], ['IJlig', [306]], ['ijlig', [307]], ['Imacr', [298]], ['imacr', [299]], ['image', [8465]], ['ImaginaryI', [8520]], ['imagline', [8464]], ['imagpart', [8465]], ['imath', [305]], ['Im', [8465]], ['imof', [8887]], ['imped', [437]], ['Implies', [8658]], ['incare', [8453]], ['in', [8712]], ['infin', [8734]], ['infintie', [10717]], ['inodot', [305]], ['intcal', [8890]], ['int', [8747]], ['Int', [8748]], ['integers', [8484]], ['Integral', [8747]], ['intercal', [8890]], ['Intersection', [8898]], ['intlarhk', [10775]], ['intprod', [10812]], ['InvisibleComma', [8291]], ['InvisibleTimes', [8290]], ['IOcy', [1025]], ['iocy', [1105]], ['Iogon', [302]], ['iogon', [303]], ['Iopf', [120128]], ['iopf', [120154]], ['Iota', [921]], ['iota', [953]], ['iprod', [10812]], ['iquest', [191]], ['iscr', [119998]], ['Iscr', [8464]], ['isin', [8712]], ['isindot', [8949]], ['isinE', [8953]], ['isins', [8948]], ['isinsv', [8947]], ['isinv', [8712]], ['it', [8290]], ['Itilde', [296]], ['itilde', [297]], ['Iukcy', [1030]], ['iukcy', [1110]], ['Iuml', [207]], ['iuml', [239]], ['Jcirc', [308]], ['jcirc', [309]], ['Jcy', [1049]], ['jcy', [1081]], ['Jfr', [120077]], ['jfr', [120103]], ['jmath', [567]], ['Jopf', [120129]], ['jopf', [120155]], ['Jscr', [119973]], ['jscr', [119999]], ['Jsercy', [1032]], ['jsercy', [1112]], ['Jukcy', [1028]], ['jukcy', [1108]], ['Kappa', [922]], ['kappa', [954]], ['kappav', [1008]], ['Kcedil', [310]], ['kcedil', [311]], ['Kcy', [1050]], ['kcy', [1082]], ['Kfr', [120078]], ['kfr', [120104]], ['kgreen', [312]], ['KHcy', [1061]], ['khcy', [1093]], ['KJcy', [1036]], ['kjcy', [1116]], ['Kopf', [120130]], ['kopf', [120156]], ['Kscr', [119974]], ['kscr', [120000]], ['lAarr', [8666]], ['Lacute', [313]], ['lacute', [314]], ['laemptyv', [10676]], ['lagran', [8466]], ['Lambda', [923]], ['lambda', [955]], ['lang', [10216]], ['Lang', [10218]], ['langd', [10641]], ['langle', [10216]], ['lap', [10885]], ['Laplacetrf', [8466]], ['laquo', [171]], ['larrb', [8676]], ['larrbfs', [10527]], ['larr', [8592]], ['Larr', [8606]], ['lArr', [8656]], ['larrfs', [10525]], ['larrhk', [8617]], ['larrlp', [8619]], ['larrpl', [10553]], ['larrsim', [10611]], ['larrtl', [8610]], ['latail', [10521]], ['lAtail', [10523]], ['lat', [10923]], ['late', [10925]], ['lates', [10925, 65024]], ['lbarr', [10508]], ['lBarr', [10510]], ['lbbrk', [10098]], ['lbrace', [123]], ['lbrack', [91]], ['lbrke', [10635]], ['lbrksld', [10639]], ['lbrkslu', [10637]], ['Lcaron', [317]], ['lcaron', [318]], ['Lcedil', [315]], ['lcedil', [316]], ['lceil', [8968]], ['lcub', [123]], ['Lcy', [1051]], ['lcy', [1083]], ['ldca', [10550]], ['ldquo', [8220]], ['ldquor', [8222]], ['ldrdhar', [10599]], ['ldrushar', [10571]], ['ldsh', [8626]], ['le', [8804]], ['lE', [8806]], ['LeftAngleBracket', [10216]], ['LeftArrowBar', [8676]], ['leftarrow', [8592]], ['LeftArrow', [8592]], ['Leftarrow', [8656]], ['LeftArrowRightArrow', [8646]], ['leftarrowtail', [8610]], ['LeftCeiling', [8968]], ['LeftDoubleBracket', [10214]], ['LeftDownTeeVector', [10593]], ['LeftDownVectorBar', [10585]], ['LeftDownVector', [8643]], ['LeftFloor', [8970]], ['leftharpoondown', [8637]], ['leftharpoonup', [8636]], ['leftleftarrows', [8647]], ['leftrightarrow', [8596]], ['LeftRightArrow', [8596]], ['Leftrightarrow', [8660]], ['leftrightarrows', [8646]], ['leftrightharpoons', [8651]], ['leftrightsquigarrow', [8621]], ['LeftRightVector', [10574]], ['LeftTeeArrow', [8612]], ['LeftTee', [8867]], ['LeftTeeVector', [10586]], ['leftthreetimes', [8907]], ['LeftTriangleBar', [10703]], ['LeftTriangle', [8882]], ['LeftTriangleEqual', [8884]], ['LeftUpDownVector', [10577]], ['LeftUpTeeVector', [10592]], ['LeftUpVectorBar', [10584]], ['LeftUpVector', [8639]], ['LeftVectorBar', [10578]], ['LeftVector', [8636]], ['lEg', [10891]], ['leg', [8922]], ['leq', [8804]], ['leqq', [8806]], ['leqslant', [10877]], ['lescc', [10920]], ['les', [10877]], ['lesdot', [10879]], ['lesdoto', [10881]], ['lesdotor', [10883]], ['lesg', [8922, 65024]], ['lesges', [10899]], ['lessapprox', [10885]], ['lessdot', [8918]], ['lesseqgtr', [8922]], ['lesseqqgtr', [10891]], ['LessEqualGreater', [8922]], ['LessFullEqual', [8806]], ['LessGreater', [8822]], ['lessgtr', [8822]], ['LessLess', [10913]], ['lesssim', [8818]], ['LessSlantEqual', [10877]], ['LessTilde', [8818]], ['lfisht', [10620]], ['lfloor', [8970]], ['Lfr', [120079]], ['lfr', [120105]], ['lg', [8822]], ['lgE', [10897]], ['lHar', [10594]], ['lhard', [8637]], ['lharu', [8636]], ['lharul', [10602]], ['lhblk', [9604]], ['LJcy', [1033]], ['ljcy', [1113]], ['llarr', [8647]], ['ll', [8810]], ['Ll', [8920]], ['llcorner', [8990]], ['Lleftarrow', [8666]], ['llhard', [10603]], ['lltri', [9722]], ['Lmidot', [319]], ['lmidot', [320]], ['lmoustache', [9136]], ['lmoust', [9136]], ['lnap', [10889]], ['lnapprox', [10889]], ['lne', [10887]], ['lnE', [8808]], ['lneq', [10887]], ['lneqq', [8808]], ['lnsim', [8934]], ['loang', [10220]], ['loarr', [8701]], ['lobrk', [10214]], ['longleftarrow', [10229]], ['LongLeftArrow', [10229]], ['Longleftarrow', [10232]], ['longleftrightarrow', [10231]], ['LongLeftRightArrow', [10231]], ['Longleftrightarrow', [10234]], ['longmapsto', [10236]], ['longrightarrow', [10230]], ['LongRightArrow', [10230]], ['Longrightarrow', [10233]], ['looparrowleft', [8619]], ['looparrowright', [8620]], ['lopar', [10629]], ['Lopf', [120131]], ['lopf', [120157]], ['loplus', [10797]], ['lotimes', [10804]], ['lowast', [8727]], ['lowbar', [95]], ['LowerLeftArrow', [8601]], ['LowerRightArrow', [8600]], ['loz', [9674]], ['lozenge', [9674]], ['lozf', [10731]], ['lpar', [40]], ['lparlt', [10643]], ['lrarr', [8646]], ['lrcorner', [8991]], ['lrhar', [8651]], ['lrhard', [10605]], ['lrm', [8206]], ['lrtri', [8895]], ['lsaquo', [8249]], ['lscr', [120001]], ['Lscr', [8466]], ['lsh', [8624]], ['Lsh', [8624]], ['lsim', [8818]], ['lsime', [10893]], ['lsimg', [10895]], ['lsqb', [91]], ['lsquo', [8216]], ['lsquor', [8218]], ['Lstrok', [321]], ['lstrok', [322]], ['ltcc', [10918]], ['ltcir', [10873]], ['lt', [60]], ['LT', [60]], ['Lt', [8810]], ['ltdot', [8918]], ['lthree', [8907]], ['ltimes', [8905]], ['ltlarr', [10614]], ['ltquest', [10875]], ['ltri', [9667]], ['ltrie', [8884]], ['ltrif', [9666]], ['ltrPar', [10646]], ['lurdshar', [10570]], ['luruhar', [10598]], ['lvertneqq', [8808, 65024]], ['lvnE', [8808, 65024]], ['macr', [175]], ['male', [9794]], ['malt', [10016]], ['maltese', [10016]], ['Map', [10501]], ['map', [8614]], ['mapsto', [8614]], ['mapstodown', [8615]], ['mapstoleft', [8612]], ['mapstoup', [8613]], ['marker', [9646]], ['mcomma', [10793]], ['Mcy', [1052]], ['mcy', [1084]], ['mdash', [8212]], ['mDDot', [8762]], ['measuredangle', [8737]], ['MediumSpace', [8287]], ['Mellintrf', [8499]], ['Mfr', [120080]], ['mfr', [120106]], ['mho', [8487]], ['micro', [181]], ['midast', [42]], ['midcir', [10992]], ['mid', [8739]], ['middot', [183]], ['minusb', [8863]], ['minus', [8722]], ['minusd', [8760]], ['minusdu', [10794]], ['MinusPlus', [8723]], ['mlcp', [10971]], ['mldr', [8230]], ['mnplus', [8723]], ['models', [8871]], ['Mopf', [120132]], ['mopf', [120158]], ['mp', [8723]], ['mscr', [120002]], ['Mscr', [8499]], ['mstpos', [8766]], ['Mu', [924]], ['mu', [956]], ['multimap', [8888]], ['mumap', [8888]], ['nabla', [8711]], ['Nacute', [323]], ['nacute', [324]], ['nang', [8736, 8402]], ['nap', [8777]], ['napE', [10864, 824]], ['napid', [8779, 824]], ['napos', [329]], ['napprox', [8777]], ['natural', [9838]], ['naturals', [8469]], ['natur', [9838]], ['nbsp', [160]], ['nbump', [8782, 824]], ['nbumpe', [8783, 824]], ['ncap', [10819]], ['Ncaron', [327]], ['ncaron', [328]], ['Ncedil', [325]], ['ncedil', [326]], ['ncong', [8775]], ['ncongdot', [10861, 824]], ['ncup', [10818]], ['Ncy', [1053]], ['ncy', [1085]], ['ndash', [8211]], ['nearhk', [10532]], ['nearr', [8599]], ['neArr', [8663]], ['nearrow', [8599]], ['ne', [8800]], ['nedot', [8784, 824]], ['NegativeMediumSpace', [8203]], ['NegativeThickSpace', [8203]], ['NegativeThinSpace', [8203]], ['NegativeVeryThinSpace', [8203]], ['nequiv', [8802]], ['nesear', [10536]], ['nesim', [8770, 824]], ['NestedGreaterGreater', [8811]], ['NestedLessLess', [8810]], ['nexist', [8708]], ['nexists', [8708]], ['Nfr', [120081]], ['nfr', [120107]], ['ngE', [8807, 824]], ['nge', [8817]], ['ngeq', [8817]], ['ngeqq', [8807, 824]], ['ngeqslant', [10878, 824]], ['nges', [10878, 824]], ['nGg', [8921, 824]], ['ngsim', [8821]], ['nGt', [8811, 8402]], ['ngt', [8815]], ['ngtr', [8815]], ['nGtv', [8811, 824]], ['nharr', [8622]], ['nhArr', [8654]], ['nhpar', [10994]], ['ni', [8715]], ['nis', [8956]], ['nisd', [8954]], ['niv', [8715]], ['NJcy', [1034]], ['njcy', [1114]], ['nlarr', [8602]], ['nlArr', [8653]], ['nldr', [8229]], ['nlE', [8806, 824]], ['nle', [8816]], ['nleftarrow', [8602]], ['nLeftarrow', [8653]], ['nleftrightarrow', [8622]], ['nLeftrightarrow', [8654]], ['nleq', [8816]], ['nleqq', [8806, 824]], ['nleqslant', [10877, 824]], ['nles', [10877, 824]], ['nless', [8814]], ['nLl', [8920, 824]], ['nlsim', [8820]], ['nLt', [8810, 8402]], ['nlt', [8814]], ['nltri', [8938]], ['nltrie', [8940]], ['nLtv', [8810, 824]], ['nmid', [8740]], ['NoBreak', [8288]], ['NonBreakingSpace', [160]], ['nopf', [120159]], ['Nopf', [8469]], ['Not', [10988]], ['not', [172]], ['NotCongruent', [8802]], ['NotCupCap', [8813]], ['NotDoubleVerticalBar', [8742]], ['NotElement', [8713]], ['NotEqual', [8800]], ['NotEqualTilde', [8770, 824]], ['NotExists', [8708]], ['NotGreater', [8815]], ['NotGreaterEqual', [8817]], ['NotGreaterFullEqual', [8807, 824]], ['NotGreaterGreater', [8811, 824]], ['NotGreaterLess', [8825]], ['NotGreaterSlantEqual', [10878, 824]], ['NotGreaterTilde', [8821]], ['NotHumpDownHump', [8782, 824]], ['NotHumpEqual', [8783, 824]], ['notin', [8713]], ['notindot', [8949, 824]], ['notinE', [8953, 824]], ['notinva', [8713]], ['notinvb', [8951]], ['notinvc', [8950]], ['NotLeftTriangleBar', [10703, 824]], ['NotLeftTriangle', [8938]], ['NotLeftTriangleEqual', [8940]], ['NotLess', [8814]], ['NotLessEqual', [8816]], ['NotLessGreater', [8824]], ['NotLessLess', [8810, 824]], ['NotLessSlantEqual', [10877, 824]], ['NotLessTilde', [8820]], ['NotNestedGreaterGreater', [10914, 824]], ['NotNestedLessLess', [10913, 824]], ['notni', [8716]], ['notniva', [8716]], ['notnivb', [8958]], ['notnivc', [8957]], ['NotPrecedes', [8832]], ['NotPrecedesEqual', [10927, 824]], ['NotPrecedesSlantEqual', [8928]], ['NotReverseElement', [8716]], ['NotRightTriangleBar', [10704, 824]], ['NotRightTriangle', [8939]], ['NotRightTriangleEqual', [8941]], ['NotSquareSubset', [8847, 824]], ['NotSquareSubsetEqual', [8930]], ['NotSquareSuperset', [8848, 824]], ['NotSquareSupersetEqual', [8931]], ['NotSubset', [8834, 8402]], ['NotSubsetEqual', [8840]], ['NotSucceeds', [8833]], ['NotSucceedsEqual', [10928, 824]], ['NotSucceedsSlantEqual', [8929]], ['NotSucceedsTilde', [8831, 824]], ['NotSuperset', [8835, 8402]], ['NotSupersetEqual', [8841]], ['NotTilde', [8769]], ['NotTildeEqual', [8772]], ['NotTildeFullEqual', [8775]], ['NotTildeTilde', [8777]], ['NotVerticalBar', [8740]], ['nparallel', [8742]], ['npar', [8742]], ['nparsl', [11005, 8421]], ['npart', [8706, 824]], ['npolint', [10772]], ['npr', [8832]], ['nprcue', [8928]], ['nprec', [8832]], ['npreceq', [10927, 824]], ['npre', [10927, 824]], ['nrarrc', [10547, 824]], ['nrarr', [8603]], ['nrArr', [8655]], ['nrarrw', [8605, 824]], ['nrightarrow', [8603]], ['nRightarrow', [8655]], ['nrtri', [8939]], ['nrtrie', [8941]], ['nsc', [8833]], ['nsccue', [8929]], ['nsce', [10928, 824]], ['Nscr', [119977]], ['nscr', [120003]], ['nshortmid', [8740]], ['nshortparallel', [8742]], ['nsim', [8769]], ['nsime', [8772]], ['nsimeq', [8772]], ['nsmid', [8740]], ['nspar', [8742]], ['nsqsube', [8930]], ['nsqsupe', [8931]], ['nsub', [8836]], ['nsubE', [10949, 824]], ['nsube', [8840]], ['nsubset', [8834, 8402]], ['nsubseteq', [8840]], ['nsubseteqq', [10949, 824]], ['nsucc', [8833]], ['nsucceq', [10928, 824]], ['nsup', [8837]], ['nsupE', [10950, 824]], ['nsupe', [8841]], ['nsupset', [8835, 8402]], ['nsupseteq', [8841]], ['nsupseteqq', [10950, 824]], ['ntgl', [8825]], ['Ntilde', [209]], ['ntilde', [241]], ['ntlg', [8824]], ['ntriangleleft', [8938]], ['ntrianglelefteq', [8940]], ['ntriangleright', [8939]], ['ntrianglerighteq', [8941]], ['Nu', [925]], ['nu', [957]], ['num', [35]], ['numero', [8470]], ['numsp', [8199]], ['nvap', [8781, 8402]], ['nvdash', [8876]], ['nvDash', [8877]], ['nVdash', [8878]], ['nVDash', [8879]], ['nvge', [8805, 8402]], ['nvgt', [62, 8402]], ['nvHarr', [10500]], ['nvinfin', [10718]], ['nvlArr', [10498]], ['nvle', [8804, 8402]], ['nvlt', [60, 8402]], ['nvltrie', [8884, 8402]], ['nvrArr', [10499]], ['nvrtrie', [8885, 8402]], ['nvsim', [8764, 8402]], ['nwarhk', [10531]], ['nwarr', [8598]], ['nwArr', [8662]], ['nwarrow', [8598]], ['nwnear', [10535]], ['Oacute', [211]], ['oacute', [243]], ['oast', [8859]], ['Ocirc', [212]], ['ocirc', [244]], ['ocir', [8858]], ['Ocy', [1054]], ['ocy', [1086]], ['odash', [8861]], ['Odblac', [336]], ['odblac', [337]], ['odiv', [10808]], ['odot', [8857]], ['odsold', [10684]], ['OElig', [338]], ['oelig', [339]], ['ofcir', [10687]], ['Ofr', [120082]], ['ofr', [120108]], ['ogon', [731]], ['Ograve', [210]], ['ograve', [242]], ['ogt', [10689]], ['ohbar', [10677]], ['ohm', [937]], ['oint', [8750]], ['olarr', [8634]], ['olcir', [10686]], ['olcross', [10683]], ['oline', [8254]], ['olt', [10688]], ['Omacr', [332]], ['omacr', [333]], ['Omega', [937]], ['omega', [969]], ['Omicron', [927]], ['omicron', [959]], ['omid', [10678]], ['ominus', [8854]], ['Oopf', [120134]], ['oopf', [120160]], ['opar', [10679]], ['OpenCurlyDoubleQuote', [8220]], ['OpenCurlyQuote', [8216]], ['operp', [10681]], ['oplus', [8853]], ['orarr', [8635]], ['Or', [10836]], ['or', [8744]], ['ord', [10845]], ['order', [8500]], ['orderof', [8500]], ['ordf', [170]], ['ordm', [186]], ['origof', [8886]], ['oror', [10838]], ['orslope', [10839]], ['orv', [10843]], ['oS', [9416]], ['Oscr', [119978]], ['oscr', [8500]], ['Oslash', [216]], ['oslash', [248]], ['osol', [8856]], ['Otilde', [213]], ['otilde', [245]], ['otimesas', [10806]], ['Otimes', [10807]], ['otimes', [8855]], ['Ouml', [214]], ['ouml', [246]], ['ovbar', [9021]], ['OverBar', [8254]], ['OverBrace', [9182]], ['OverBracket', [9140]], ['OverParenthesis', [9180]], ['para', [182]], ['parallel', [8741]], ['par', [8741]], ['parsim', [10995]], ['parsl', [11005]], ['part', [8706]], ['PartialD', [8706]], ['Pcy', [1055]], ['pcy', [1087]], ['percnt', [37]], ['period', [46]], ['permil', [8240]], ['perp', [8869]], ['pertenk', [8241]], ['Pfr', [120083]], ['pfr', [120109]], ['Phi', [934]], ['phi', [966]], ['phiv', [981]], ['phmmat', [8499]], ['phone', [9742]], ['Pi', [928]], ['pi', [960]], ['pitchfork', [8916]], ['piv', [982]], ['planck', [8463]], ['planckh', [8462]], ['plankv', [8463]], ['plusacir', [10787]], ['plusb', [8862]], ['pluscir', [10786]], ['plus', [43]], ['plusdo', [8724]], ['plusdu', [10789]], ['pluse', [10866]], ['PlusMinus', [177]], ['plusmn', [177]], ['plussim', [10790]], ['plustwo', [10791]], ['pm', [177]], ['Poincareplane', [8460]], ['pointint', [10773]], ['popf', [120161]], ['Popf', [8473]], ['pound', [163]], ['prap', [10935]], ['Pr', [10939]], ['pr', [8826]], ['prcue', [8828]], ['precapprox', [10935]], ['prec', [8826]], ['preccurlyeq', [8828]], ['Precedes', [8826]], ['PrecedesEqual', [10927]], ['PrecedesSlantEqual', [8828]], ['PrecedesTilde', [8830]], ['preceq', [10927]], ['precnapprox', [10937]], ['precneqq', [10933]], ['precnsim', [8936]], ['pre', [10927]], ['prE', [10931]], ['precsim', [8830]], ['prime', [8242]], ['Prime', [8243]], ['primes', [8473]], ['prnap', [10937]], ['prnE', [10933]], ['prnsim', [8936]], ['prod', [8719]], ['Product', [8719]], ['profalar', [9006]], ['profline', [8978]], ['profsurf', [8979]], ['prop', [8733]], ['Proportional', [8733]], ['Proportion', [8759]], ['propto', [8733]], ['prsim', [8830]], ['prurel', [8880]], ['Pscr', [119979]], ['pscr', [120005]], ['Psi', [936]], ['psi', [968]], ['puncsp', [8200]], ['Qfr', [120084]], ['qfr', [120110]], ['qint', [10764]], ['qopf', [120162]], ['Qopf', [8474]], ['qprime', [8279]], ['Qscr', [119980]], ['qscr', [120006]], ['quaternions', [8461]], ['quatint', [10774]], ['quest', [63]], ['questeq', [8799]], ['quot', [34]], ['QUOT', [34]], ['rAarr', [8667]], ['race', [8765, 817]], ['Racute', [340]], ['racute', [341]], ['radic', [8730]], ['raemptyv', [10675]], ['rang', [10217]], ['Rang', [10219]], ['rangd', [10642]], ['range', [10661]], ['rangle', [10217]], ['raquo', [187]], ['rarrap', [10613]], ['rarrb', [8677]], ['rarrbfs', [10528]], ['rarrc', [10547]], ['rarr', [8594]], ['Rarr', [8608]], ['rArr', [8658]], ['rarrfs', [10526]], ['rarrhk', [8618]], ['rarrlp', [8620]], ['rarrpl', [10565]], ['rarrsim', [10612]], ['Rarrtl', [10518]], ['rarrtl', [8611]], ['rarrw', [8605]], ['ratail', [10522]], ['rAtail', [10524]], ['ratio', [8758]], ['rationals', [8474]], ['rbarr', [10509]], ['rBarr', [10511]], ['RBarr', [10512]], ['rbbrk', [10099]], ['rbrace', [125]], ['rbrack', [93]], ['rbrke', [10636]], ['rbrksld', [10638]], ['rbrkslu', [10640]], ['Rcaron', [344]], ['rcaron', [345]], ['Rcedil', [342]], ['rcedil', [343]], ['rceil', [8969]], ['rcub', [125]], ['Rcy', [1056]], ['rcy', [1088]], ['rdca', [10551]], ['rdldhar', [10601]], ['rdquo', [8221]], ['rdquor', [8221]], ['CloseCurlyDoubleQuote', [8221]], ['rdsh', [8627]], ['real', [8476]], ['realine', [8475]], ['realpart', [8476]], ['reals', [8477]], ['Re', [8476]], ['rect', [9645]], ['reg', [174]], ['REG', [174]], ['ReverseElement', [8715]], ['ReverseEquilibrium', [8651]], ['ReverseUpEquilibrium', [10607]], ['rfisht', [10621]], ['rfloor', [8971]], ['rfr', [120111]], ['Rfr', [8476]], ['rHar', [10596]], ['rhard', [8641]], ['rharu', [8640]], ['rharul', [10604]], ['Rho', [929]], ['rho', [961]], ['rhov', [1009]], ['RightAngleBracket', [10217]], ['RightArrowBar', [8677]], ['rightarrow', [8594]], ['RightArrow', [8594]], ['Rightarrow', [8658]], ['RightArrowLeftArrow', [8644]], ['rightarrowtail', [8611]], ['RightCeiling', [8969]], ['RightDoubleBracket', [10215]], ['RightDownTeeVector', [10589]], ['RightDownVectorBar', [10581]], ['RightDownVector', [8642]], ['RightFloor', [8971]], ['rightharpoondown', [8641]], ['rightharpoonup', [8640]], ['rightleftarrows', [8644]], ['rightleftharpoons', [8652]], ['rightrightarrows', [8649]], ['rightsquigarrow', [8605]], ['RightTeeArrow', [8614]], ['RightTee', [8866]], ['RightTeeVector', [10587]], ['rightthreetimes', [8908]], ['RightTriangleBar', [10704]], ['RightTriangle', [8883]], ['RightTriangleEqual', [8885]], ['RightUpDownVector', [10575]], ['RightUpTeeVector', [10588]], ['RightUpVectorBar', [10580]], ['RightUpVector', [8638]], ['RightVectorBar', [10579]], ['RightVector', [8640]], ['ring', [730]], ['risingdotseq', [8787]], ['rlarr', [8644]], ['rlhar', [8652]], ['rlm', [8207]], ['rmoustache', [9137]], ['rmoust', [9137]], ['rnmid', [10990]], ['roang', [10221]], ['roarr', [8702]], ['robrk', [10215]], ['ropar', [10630]], ['ropf', [120163]], ['Ropf', [8477]], ['roplus', [10798]], ['rotimes', [10805]], ['RoundImplies', [10608]], ['rpar', [41]], ['rpargt', [10644]], ['rppolint', [10770]], ['rrarr', [8649]], ['Rrightarrow', [8667]], ['rsaquo', [8250]], ['rscr', [120007]], ['Rscr', [8475]], ['rsh', [8625]], ['Rsh', [8625]], ['rsqb', [93]], ['rsquo', [8217]], ['rsquor', [8217]], ['CloseCurlyQuote', [8217]], ['rthree', [8908]], ['rtimes', [8906]], ['rtri', [9657]], ['rtrie', [8885]], ['rtrif', [9656]], ['rtriltri', [10702]], ['RuleDelayed', [10740]], ['ruluhar', [10600]], ['rx', [8478]], ['Sacute', [346]], ['sacute', [347]], ['sbquo', [8218]], ['scap', [10936]], ['Scaron', [352]], ['scaron', [353]], ['Sc', [10940]], ['sc', [8827]], ['sccue', [8829]], ['sce', [10928]], ['scE', [10932]], ['Scedil', [350]], ['scedil', [351]], ['Scirc', [348]], ['scirc', [349]], ['scnap', [10938]], ['scnE', [10934]], ['scnsim', [8937]], ['scpolint', [10771]], ['scsim', [8831]], ['Scy', [1057]], ['scy', [1089]], ['sdotb', [8865]], ['sdot', [8901]], ['sdote', [10854]], ['searhk', [10533]], ['searr', [8600]], ['seArr', [8664]], ['searrow', [8600]], ['sect', [167]], ['semi', [59]], ['seswar', [10537]], ['setminus', [8726]], ['setmn', [8726]], ['sext', [10038]], ['Sfr', [120086]], ['sfr', [120112]], ['sfrown', [8994]], ['sharp', [9839]], ['SHCHcy', [1065]], ['shchcy', [1097]], ['SHcy', [1064]], ['shcy', [1096]], ['ShortDownArrow', [8595]], ['ShortLeftArrow', [8592]], ['shortmid', [8739]], ['shortparallel', [8741]], ['ShortRightArrow', [8594]], ['ShortUpArrow', [8593]], ['shy', [173]], ['Sigma', [931]], ['sigma', [963]], ['sigmaf', [962]], ['sigmav', [962]], ['sim', [8764]], ['simdot', [10858]], ['sime', [8771]], ['simeq', [8771]], ['simg', [10910]], ['simgE', [10912]], ['siml', [10909]], ['simlE', [10911]], ['simne', [8774]], ['simplus', [10788]], ['simrarr', [10610]], ['slarr', [8592]], ['SmallCircle', [8728]], ['smallsetminus', [8726]], ['smashp', [10803]], ['smeparsl', [10724]], ['smid', [8739]], ['smile', [8995]], ['smt', [10922]], ['smte', [10924]], ['smtes', [10924, 65024]], ['SOFTcy', [1068]], ['softcy', [1100]], ['solbar', [9023]], ['solb', [10692]], ['sol', [47]], ['Sopf', [120138]], ['sopf', [120164]], ['spades', [9824]], ['spadesuit', [9824]], ['spar', [8741]], ['sqcap', [8851]], ['sqcaps', [8851, 65024]], ['sqcup', [8852]], ['sqcups', [8852, 65024]], ['Sqrt', [8730]], ['sqsub', [8847]], ['sqsube', [8849]], ['sqsubset', [8847]], ['sqsubseteq', [8849]], ['sqsup', [8848]], ['sqsupe', [8850]], ['sqsupset', [8848]], ['sqsupseteq', [8850]], ['square', [9633]], ['Square', [9633]], ['SquareIntersection', [8851]], ['SquareSubset', [8847]], ['SquareSubsetEqual', [8849]], ['SquareSuperset', [8848]], ['SquareSupersetEqual', [8850]], ['SquareUnion', [8852]], ['squarf', [9642]], ['squ', [9633]], ['squf', [9642]], ['srarr', [8594]], ['Sscr', [119982]], ['sscr', [120008]], ['ssetmn', [8726]], ['ssmile', [8995]], ['sstarf', [8902]], ['Star', [8902]], ['star', [9734]], ['starf', [9733]], ['straightepsilon', [1013]], ['straightphi', [981]], ['strns', [175]], ['sub', [8834]], ['Sub', [8912]], ['subdot', [10941]], ['subE', [10949]], ['sube', [8838]], ['subedot', [10947]], ['submult', [10945]], ['subnE', [10955]], ['subne', [8842]], ['subplus', [10943]], ['subrarr', [10617]], ['subset', [8834]], ['Subset', [8912]], ['subseteq', [8838]], ['subseteqq', [10949]], ['SubsetEqual', [8838]], ['subsetneq', [8842]], ['subsetneqq', [10955]], ['subsim', [10951]], ['subsub', [10965]], ['subsup', [10963]], ['succapprox', [10936]], ['succ', [8827]], ['succcurlyeq', [8829]], ['Succeeds', [8827]], ['SucceedsEqual', [10928]], ['SucceedsSlantEqual', [8829]], ['SucceedsTilde', [8831]], ['succeq', [10928]], ['succnapprox', [10938]], ['succneqq', [10934]], ['succnsim', [8937]], ['succsim', [8831]], ['SuchThat', [8715]], ['sum', [8721]], ['Sum', [8721]], ['sung', [9834]], ['sup1', [185]], ['sup2', [178]], ['sup3', [179]], ['sup', [8835]], ['Sup', [8913]], ['supdot', [10942]], ['supdsub', [10968]], ['supE', [10950]], ['supe', [8839]], ['supedot', [10948]], ['Superset', [8835]], ['SupersetEqual', [8839]], ['suphsol', [10185]], ['suphsub', [10967]], ['suplarr', [10619]], ['supmult', [10946]], ['supnE', [10956]], ['supne', [8843]], ['supplus', [10944]], ['supset', [8835]], ['Supset', [8913]], ['supseteq', [8839]], ['supseteqq', [10950]], ['supsetneq', [8843]], ['supsetneqq', [10956]], ['supsim', [10952]], ['supsub', [10964]], ['supsup', [10966]], ['swarhk', [10534]], ['swarr', [8601]], ['swArr', [8665]], ['swarrow', [8601]], ['swnwar', [10538]], ['szlig', [223]], ['Tab', [9]], ['target', [8982]], ['Tau', [932]], ['tau', [964]], ['tbrk', [9140]], ['Tcaron', [356]], ['tcaron', [357]], ['Tcedil', [354]], ['tcedil', [355]], ['Tcy', [1058]], ['tcy', [1090]], ['tdot', [8411]], ['telrec', [8981]], ['Tfr', [120087]], ['tfr', [120113]], ['there4', [8756]], ['therefore', [8756]], ['Therefore', [8756]], ['Theta', [920]], ['theta', [952]], ['thetasym', [977]], ['thetav', [977]], ['thickapprox', [8776]], ['thicksim', [8764]], ['ThickSpace', [8287, 8202]], ['ThinSpace', [8201]], ['thinsp', [8201]], ['thkap', [8776]], ['thksim', [8764]], ['THORN', [222]], ['thorn', [254]], ['tilde', [732]], ['Tilde', [8764]], ['TildeEqual', [8771]], ['TildeFullEqual', [8773]], ['TildeTilde', [8776]], ['timesbar', [10801]], ['timesb', [8864]], ['times', [215]], ['timesd', [10800]], ['tint', [8749]], ['toea', [10536]], ['topbot', [9014]], ['topcir', [10993]], ['top', [8868]], ['Topf', [120139]], ['topf', [120165]], ['topfork', [10970]], ['tosa', [10537]], ['tprime', [8244]], ['trade', [8482]], ['TRADE', [8482]], ['triangle', [9653]], ['triangledown', [9663]], ['triangleleft', [9667]], ['trianglelefteq', [8884]], ['triangleq', [8796]], ['triangleright', [9657]], ['trianglerighteq', [8885]], ['tridot', [9708]], ['trie', [8796]], ['triminus', [10810]], ['TripleDot', [8411]], ['triplus', [10809]], ['trisb', [10701]], ['tritime', [10811]], ['trpezium', [9186]], ['Tscr', [119983]], ['tscr', [120009]], ['TScy', [1062]], ['tscy', [1094]], ['TSHcy', [1035]], ['tshcy', [1115]], ['Tstrok', [358]], ['tstrok', [359]], ['twixt', [8812]], ['twoheadleftarrow', [8606]], ['twoheadrightarrow', [8608]], ['Uacute', [218]], ['uacute', [250]], ['uarr', [8593]], ['Uarr', [8607]], ['uArr', [8657]], ['Uarrocir', [10569]], ['Ubrcy', [1038]], ['ubrcy', [1118]], ['Ubreve', [364]], ['ubreve', [365]], ['Ucirc', [219]], ['ucirc', [251]], ['Ucy', [1059]], ['ucy', [1091]], ['udarr', [8645]], ['Udblac', [368]], ['udblac', [369]], ['udhar', [10606]], ['ufisht', [10622]], ['Ufr', [120088]], ['ufr', [120114]], ['Ugrave', [217]], ['ugrave', [249]], ['uHar', [10595]], ['uharl', [8639]], ['uharr', [8638]], ['uhblk', [9600]], ['ulcorn', [8988]], ['ulcorner', [8988]], ['ulcrop', [8975]], ['ultri', [9720]], ['Umacr', [362]], ['umacr', [363]], ['uml', [168]], ['UnderBar', [95]], ['UnderBrace', [9183]], ['UnderBracket', [9141]], ['UnderParenthesis', [9181]], ['Union', [8899]], ['UnionPlus', [8846]], ['Uogon', [370]], ['uogon', [371]], ['Uopf', [120140]], ['uopf', [120166]], ['UpArrowBar', [10514]], ['uparrow', [8593]], ['UpArrow', [8593]], ['Uparrow', [8657]], ['UpArrowDownArrow', [8645]], ['updownarrow', [8597]], ['UpDownArrow', [8597]], ['Updownarrow', [8661]], ['UpEquilibrium', [10606]], ['upharpoonleft', [8639]], ['upharpoonright', [8638]], ['uplus', [8846]], ['UpperLeftArrow', [8598]], ['UpperRightArrow', [8599]], ['upsi', [965]], ['Upsi', [978]], ['upsih', [978]], ['Upsilon', [933]], ['upsilon', [965]], ['UpTeeArrow', [8613]], ['UpTee', [8869]], ['upuparrows', [8648]], ['urcorn', [8989]], ['urcorner', [8989]], ['urcrop', [8974]], ['Uring', [366]], ['uring', [367]], ['urtri', [9721]], ['Uscr', [119984]], ['uscr', [120010]], ['utdot', [8944]], ['Utilde', [360]], ['utilde', [361]], ['utri', [9653]], ['utrif', [9652]], ['uuarr', [8648]], ['Uuml', [220]], ['uuml', [252]], ['uwangle', [10663]], ['vangrt', [10652]], ['varepsilon', [1013]], ['varkappa', [1008]], ['varnothing', [8709]], ['varphi', [981]], ['varpi', [982]], ['varpropto', [8733]], ['varr', [8597]], ['vArr', [8661]], ['varrho', [1009]], ['varsigma', [962]], ['varsubsetneq', [8842, 65024]], ['varsubsetneqq', [10955, 65024]], ['varsupsetneq', [8843, 65024]], ['varsupsetneqq', [10956, 65024]], ['vartheta', [977]], ['vartriangleleft', [8882]], ['vartriangleright', [8883]], ['vBar', [10984]], ['Vbar', [10987]], ['vBarv', [10985]], ['Vcy', [1042]], ['vcy', [1074]], ['vdash', [8866]], ['vDash', [8872]], ['Vdash', [8873]], ['VDash', [8875]], ['Vdashl', [10982]], ['veebar', [8891]], ['vee', [8744]], ['Vee', [8897]], ['veeeq', [8794]], ['vellip', [8942]], ['verbar', [124]], ['Verbar', [8214]], ['vert', [124]], ['Vert', [8214]], ['VerticalBar', [8739]], ['VerticalLine', [124]], ['VerticalSeparator', [10072]], ['VerticalTilde', [8768]], ['VeryThinSpace', [8202]], ['Vfr', [120089]], ['vfr', [120115]], ['vltri', [8882]], ['vnsub', [8834, 8402]], ['vnsup', [8835, 8402]], ['Vopf', [120141]], ['vopf', [120167]], ['vprop', [8733]], ['vrtri', [8883]], ['Vscr', [119985]], ['vscr', [120011]], ['vsubnE', [10955, 65024]], ['vsubne', [8842, 65024]], ['vsupnE', [10956, 65024]], ['vsupne', [8843, 65024]], ['Vvdash', [8874]], ['vzigzag', [10650]], ['Wcirc', [372]], ['wcirc', [373]], ['wedbar', [10847]], ['wedge', [8743]], ['Wedge', [8896]], ['wedgeq', [8793]], ['weierp', [8472]], ['Wfr', [120090]], ['wfr', [120116]], ['Wopf', [120142]], ['wopf', [120168]], ['wp', [8472]], ['wr', [8768]], ['wreath', [8768]], ['Wscr', [119986]], ['wscr', [120012]], ['xcap', [8898]], ['xcirc', [9711]], ['xcup', [8899]], ['xdtri', [9661]], ['Xfr', [120091]], ['xfr', [120117]], ['xharr', [10231]], ['xhArr', [10234]], ['Xi', [926]], ['xi', [958]], ['xlarr', [10229]], ['xlArr', [10232]], ['xmap', [10236]], ['xnis', [8955]], ['xodot', [10752]], ['Xopf', [120143]], ['xopf', [120169]], ['xoplus', [10753]], ['xotime', [10754]], ['xrarr', [10230]], ['xrArr', [10233]], ['Xscr', [119987]], ['xscr', [120013]], ['xsqcup', [10758]], ['xuplus', [10756]], ['xutri', [9651]], ['xvee', [8897]], ['xwedge', [8896]], ['Yacute', [221]], ['yacute', [253]], ['YAcy', [1071]], ['yacy', [1103]], ['Ycirc', [374]], ['ycirc', [375]], ['Ycy', [1067]], ['ycy', [1099]], ['yen', [165]], ['Yfr', [120092]], ['yfr', [120118]], ['YIcy', [1031]], ['yicy', [1111]], ['Yopf', [120144]], ['yopf', [120170]], ['Yscr', [119988]], ['yscr', [120014]], ['YUcy', [1070]], ['yucy', [1102]], ['yuml', [255]], ['Yuml', [376]], ['Zacute', [377]], ['zacute', [378]], ['Zcaron', [381]], ['zcaron', [382]], ['Zcy', [1047]], ['zcy', [1079]], ['Zdot', [379]], ['zdot', [380]], ['zeetrf', [8488]], ['ZeroWidthSpace', [8203]], ['Zeta', [918]], ['zeta', [950]], ['zfr', [120119]], ['Zfr', [8488]], ['ZHcy', [1046]], ['zhcy', [1078]], ['zigrarr', [8669]], ['zopf', [120171]], ['Zopf', [8484]], ['Zscr', [119989]], ['zscr', [120015]], ['zwj', [8205]], ['zwnj', [8204]]];

var alphaIndex = {};
var charIndex = {};

createIndexes(alphaIndex, charIndex);

/**
 * @constructor
 */
function Html5Entities() {}

/**
 * @param {String} str
 * @returns {String}
 */
Html5Entities.prototype.decode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
        var chr;
        if (entity.charAt(0) === "#") {
            var code = entity.charAt(1) === 'x' ?
                parseInt(entity.substr(2).toLowerCase(), 16) :
                parseInt(entity.substr(1));

            if (!(isNaN(code) || code < -32768 || code > 65535)) {
                chr = String.fromCharCode(code);
            }
        } else {
            chr = alphaIndex[entity];
        }
        return chr || s;
    });
};

/**
 * @param {String} str
 * @returns {String}
 */
 Html5Entities.decode = function(str) {
    return new Html5Entities().decode(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
Html5Entities.prototype.encode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var charInfo = charIndex[str.charCodeAt(i)];
        if (charInfo) {
            var alpha = charInfo[str.charCodeAt(i + 1)];
            if (alpha) {
                i++;
            } else {
                alpha = charInfo[''];
            }
            if (alpha) {
                result += "&" + alpha + ";";
                i++;
                continue;
            }
        }
        result += str.charAt(i);
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
 Html5Entities.encode = function(str) {
    return new Html5Entities().encode(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
Html5Entities.prototype.encodeNonUTF = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        var charInfo = charIndex[c];
        if (charInfo) {
            var alpha = charInfo[str.charCodeAt(i + 1)];
            if (alpha) {
                i++;
            } else {
                alpha = charInfo[''];
            }
            if (alpha) {
                result += "&" + alpha + ";";
                i++;
                continue;
            }
        }
        if (c < 32 || c > 126) {
            result += '&#' + c + ';';
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
 Html5Entities.encodeNonUTF = function(str) {
    return new Html5Entities().encodeNonUTF(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
Html5Entities.prototype.encodeNonASCII = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
 Html5Entities.encodeNonASCII = function(str) {
    return new Html5Entities().encodeNonASCII(str);
 };

/**
 * @param {Object} alphaIndex Passed by reference.
 * @param {Object} charIndex Passed by reference.
 */
function createIndexes(alphaIndex, charIndex) {
    var i = ENTITIES.length;
    var _results = [];
    while (i--) {
        var e = ENTITIES[i];
        var alpha = e[0];
        var chars = e[1];
        var chr = chars[0];
        var addChar = (chr < 32 || chr > 126) || chr === 62 || chr === 60 || chr === 38 || chr === 34 || chr === 39;
        var charInfo;
        if (addChar) {
            charInfo = charIndex[chr] = charIndex[chr] || {};
        }
        if (chars[1]) {
            var chr2 = chars[1];
            alphaIndex[alpha] = String.fromCharCode(chr) + String.fromCharCode(chr2);
            _results.push(addChar && (charInfo[chr2] = alpha));
        } else {
            alphaIndex[alpha] = String.fromCharCode(chr);
            _results.push(addChar && (charInfo[''] = alpha));
        }
    }
}

module.exports = Html5Entities;


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Afrikaans [af]
//! author : Werner Mollentze : https://github.com/wernerm

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var af = moment.defineLocale('af', {
    months : 'Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag'.split('_'),
    weekdaysShort : 'Son_Maa_Din_Woe_Don_Vry_Sat'.split('_'),
    weekdaysMin : 'So_Ma_Di_Wo_Do_Vr_Sa'.split('_'),
    meridiemParse: /vm|nm/i,
    isPM : function (input) {
        return /^nm$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'vm' : 'VM';
        } else {
            return isLower ? 'nm' : 'NM';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Vandag om] LT',
        nextDay : '[Môre om] LT',
        nextWeek : 'dddd [om] LT',
        lastDay : '[Gister om] LT',
        lastWeek : '[Laas] dddd [om] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'oor %s',
        past : '%s gelede',
        s : '\'n paar sekondes',
        m : '\'n minuut',
        mm : '%d minute',
        h : '\'n uur',
        hh : '%d ure',
        d : '\'n dag',
        dd : '%d dae',
        M : '\'n maand',
        MM : '%d maande',
        y : '\'n jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de'); // Thanks to Joris Röling : https://github.com/jjupiter
    },
    week : {
        dow : 1, // Maandag is die eerste dag van die week.
        doy : 4  // Die week wat die 4de Januarie bevat is die eerste week van die jaar.
    }
});

return af;

})));


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Algeria) [ar-dz]
//! author : Noureddine LOUAHEDJ : https://github.com/noureddineme

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arDz = moment.defineLocale('ar-dz', {
    months : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'أح_إث_ثلا_أر_خم_جم_سب'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 4  // The week that contains Jan 1st is the first week of the year.
    }
});

return arDz;

})));


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Kuwait) [ar-kw]
//! author : Nusret Parlak: https://github.com/nusretparlak

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arKw = moment.defineLocale('ar-kw', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arKw;

})));


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Lybia) [ar-ly]
//! author : Ali Hmer: https://github.com/kikoanis

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '1',
    '2': '2',
    '3': '3',
    '4': '4',
    '5': '5',
    '6': '6',
    '7': '7',
    '8': '8',
    '9': '9',
    '0': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'يناير',
    'فبراير',
    'مارس',
    'أبريل',
    'مايو',
    'يونيو',
    'يوليو',
    'أغسطس',
    'سبتمبر',
    'أكتوبر',
    'نوفمبر',
    'ديسمبر'
];

var arLy = moment.defineLocale('ar-ly', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arLy;

})));


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Morocco) [ar-ma]
//! author : ElFadili Yassine : https://github.com/ElFadiliY
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arMa = moment.defineLocale('ar-ma', {
    months : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر'.split('_'),
    weekdays : 'الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return arMa;

})));


/***/ }),
/* 104 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic (Saudi Arabia) [ar-sa]
//! author : Suhail Alkowaileet : https://github.com/xsoh

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};

var arSa = moment.defineLocale('ar-sa', {
    months : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort : 'يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'في %s',
        past : 'منذ %s',
        s : 'ثوان',
        m : 'دقيقة',
        mm : '%d دقائق',
        h : 'ساعة',
        hh : '%d ساعات',
        d : 'يوم',
        dd : '%d أيام',
        M : 'شهر',
        MM : '%d أشهر',
        y : 'سنة',
        yy : '%d سنوات'
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return arSa;

})));


/***/ }),
/* 105 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale  :  Arabic (Tunisia) [ar-tn]
//! author : Nader Toukabri : https://github.com/naderio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var arTn = moment.defineLocale('ar-tn', {
    months: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    monthsShort: 'جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر'.split('_'),
    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[اليوم على الساعة] LT',
        nextDay: '[غدا على الساعة] LT',
        nextWeek: 'dddd [على الساعة] LT',
        lastDay: '[أمس على الساعة] LT',
        lastWeek: 'dddd [على الساعة] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'في %s',
        past: 'منذ %s',
        s: 'ثوان',
        m: 'دقيقة',
        mm: '%d دقائق',
        h: 'ساعة',
        hh: '%d ساعات',
        d: 'يوم',
        dd: '%d أيام',
        M: 'شهر',
        MM: '%d أشهر',
        y: 'سنة',
        yy: '%d سنوات'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return arTn;

})));


/***/ }),
/* 106 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Arabic [ar]
//! author : Abdel Said: https://github.com/abdelsaid
//! author : Ahmed Elkhatib
//! author : forabi https://github.com/forabi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '١',
    '2': '٢',
    '3': '٣',
    '4': '٤',
    '5': '٥',
    '6': '٦',
    '7': '٧',
    '8': '٨',
    '9': '٩',
    '0': '٠'
};
var numberMap = {
    '١': '1',
    '٢': '2',
    '٣': '3',
    '٤': '4',
    '٥': '5',
    '٦': '6',
    '٧': '7',
    '٨': '8',
    '٩': '9',
    '٠': '0'
};
var pluralForm = function (n) {
    return n === 0 ? 0 : n === 1 ? 1 : n === 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5;
};
var plurals = {
    s : ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],
    m : ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],
    h : ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],
    d : ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],
    M : ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],
    y : ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']
};
var pluralize = function (u) {
    return function (number, withoutSuffix, string, isFuture) {
        var f = pluralForm(number),
            str = plurals[u][pluralForm(number)];
        if (f === 2) {
            str = str[withoutSuffix ? 0 : 1];
        }
        return str.replace(/%d/i, number);
    };
};
var months = [
    'كانون الثاني يناير',
    'شباط فبراير',
    'آذار مارس',
    'نيسان أبريل',
    'أيار مايو',
    'حزيران يونيو',
    'تموز يوليو',
    'آب أغسطس',
    'أيلول سبتمبر',
    'تشرين الأول أكتوبر',
    'تشرين الثاني نوفمبر',
    'كانون الأول ديسمبر'
];

var ar = moment.defineLocale('ar', {
    months : months,
    monthsShort : months,
    weekdays : 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),
    weekdaysShort : 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),
    weekdaysMin : 'ح_ن_ث_ر_خ_ج_س'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/\u200FM/\u200FYYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ص|م/,
    isPM : function (input) {
        return 'م' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ص';
        } else {
            return 'م';
        }
    },
    calendar : {
        sameDay: '[اليوم عند الساعة] LT',
        nextDay: '[غدًا عند الساعة] LT',
        nextWeek: 'dddd [عند الساعة] LT',
        lastDay: '[أمس عند الساعة] LT',
        lastWeek: 'dddd [عند الساعة] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'بعد %s',
        past : 'منذ %s',
        s : pluralize('s'),
        m : pluralize('m'),
        mm : pluralize('m'),
        h : pluralize('h'),
        hh : pluralize('h'),
        d : pluralize('d'),
        dd : pluralize('d'),
        M : pluralize('M'),
        MM : pluralize('M'),
        y : pluralize('y'),
        yy : pluralize('y')
    },
    preparse: function (string) {
        return string.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return ar;

})));


/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Azerbaijani [az]
//! author : topchiyev : https://github.com/topchiyev

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '-inci',
    5: '-inci',
    8: '-inci',
    70: '-inci',
    80: '-inci',
    2: '-nci',
    7: '-nci',
    20: '-nci',
    50: '-nci',
    3: '-üncü',
    4: '-üncü',
    100: '-üncü',
    6: '-ncı',
    9: '-uncu',
    10: '-uncu',
    30: '-uncu',
    60: '-ıncı',
    90: '-ıncı'
};

var az = moment.defineLocale('az', {
    months : 'yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr'.split('_'),
    monthsShort : 'yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek'.split('_'),
    weekdays : 'Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə'.split('_'),
    weekdaysShort : 'Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən'.split('_'),
    weekdaysMin : 'Bz_BE_ÇA_Çə_CA_Cü_Şə'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[sabah saat] LT',
        nextWeek : '[gələn həftə] dddd [saat] LT',
        lastDay : '[dünən] LT',
        lastWeek : '[keçən həftə] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s əvvəl',
        s : 'birneçə saniyyə',
        m : 'bir dəqiqə',
        mm : '%d dəqiqə',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir il',
        yy : '%d il'
    },
    meridiemParse: /gecə|səhər|gündüz|axşam/,
    isPM : function (input) {
        return /^(gündüz|axşam)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'gecə';
        } else if (hour < 12) {
            return 'səhər';
        } else if (hour < 17) {
            return 'gündüz';
        } else {
            return 'axşam';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '-ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return az;

})));


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Belarusian [be]
//! author : Dmitry Demidov : https://github.com/demidov91
//! author: Praleska: http://praleska.pro/
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'хвіліна_хвіліны_хвілін' : 'хвіліну_хвіліны_хвілін',
        'hh': withoutSuffix ? 'гадзіна_гадзіны_гадзін' : 'гадзіну_гадзіны_гадзін',
        'dd': 'дзень_дні_дзён',
        'MM': 'месяц_месяцы_месяцаў',
        'yy': 'год_гады_гадоў'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвіліна' : 'хвіліну';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'гадзіна' : 'гадзіну';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}

var be = moment.defineLocale('be', {
    months : {
        format: 'студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня'.split('_'),
        standalone: 'студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань'.split('_')
    },
    monthsShort : 'студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж'.split('_'),
    weekdays : {
        format: 'нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу'.split('_'),
        standalone: 'нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/
    },
    weekdaysShort : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_ат_ср_чц_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., HH:mm',
        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
    },
    calendar : {
        sameDay: '[Сёння ў] LT',
        nextDay: '[Заўтра ў] LT',
        lastDay: '[Учора ў] LT',
        nextWeek: function () {
            return '[У] dddd [ў] LT';
        },
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return '[У мінулую] dddd [ў] LT';
                case 1:
                case 2:
                case 4:
                    return '[У мінулы] dddd [ў] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'праз %s',
        past : '%s таму',
        s : 'некалькі секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithPlural,
        hh : relativeTimeWithPlural,
        d : 'дзень',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночы|раніцы|дня|вечара/,
    isPM : function (input) {
        return /^(дня|вечара)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночы';
        } else if (hour < 12) {
            return 'раніцы';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечара';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return (number % 10 === 2 || number % 10 === 3) && (number % 100 !== 12 && number % 100 !== 13) ? number + '-і' : number + '-ы';
            case 'D':
                return number + '-га';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return be;

})));


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bulgarian [bg]
//! author : Krasen Borisov : https://github.com/kraz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var bg = moment.defineLocale('bg', {
    months : 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сря_чет_пет_съб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Днес в] LT',
        nextDay : '[Утре в] LT',
        nextWeek : 'dddd [в] LT',
        lastDay : '[Вчера в] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[В изминалата] dddd [в] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[В изминалия] dddd [в] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'след %s',
        past : 'преди %s',
        s : 'няколко секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дни',
        M : 'месец',
        MM : '%d месеца',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bg;

})));


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bambara [bm]
//! author : Estelle Comment : https://github.com/estellecomment

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

// Language contact person : Abdoufata Kane : https://github.com/abdoufata

var bm = moment.defineLocale('bm', {
    months : 'Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo'.split('_'),
    monthsShort : 'Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des'.split('_'),
    weekdays : 'Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri'.split('_'),
    weekdaysShort : 'Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib'.split('_'),
    weekdaysMin : 'Ka_Nt_Ta_Ar_Al_Ju_Si'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'MMMM [tile] D [san] YYYY',
        LLL : 'MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm',
        LLLL : 'dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm'
    },
    calendar : {
        sameDay : '[Bi lɛrɛ] LT',
        nextDay : '[Sini lɛrɛ] LT',
        nextWeek : 'dddd [don lɛrɛ] LT',
        lastDay : '[Kunu lɛrɛ] LT',
        lastWeek : 'dddd [tɛmɛnen lɛrɛ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s kɔnɔ',
        past : 'a bɛ %s bɔ',
        s : 'sanga dama dama',
        m : 'miniti kelen',
        mm : 'miniti %d',
        h : 'lɛrɛ kelen',
        hh : 'lɛrɛ %d',
        d : 'tile kelen',
        dd : 'tile %d',
        M : 'kalo kelen',
        MM : 'kalo %d',
        y : 'san kelen',
        yy : 'san %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return bm;

})));


/***/ }),
/* 111 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bengali [bn]
//! author : Kaushik Gandhi : https://github.com/kaushikgandhi

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '১',
    '2': '২',
    '3': '৩',
    '4': '৪',
    '5': '৫',
    '6': '৬',
    '7': '৭',
    '8': '৮',
    '9': '৯',
    '0': '০'
};
var numberMap = {
    '১': '1',
    '২': '2',
    '৩': '3',
    '৪': '4',
    '৫': '5',
    '৬': '6',
    '৭': '7',
    '৮': '8',
    '৯': '9',
    '০': '0'
};

var bn = moment.defineLocale('bn', {
    months : 'জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর'.split('_'),
    monthsShort : 'জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে'.split('_'),
    weekdays : 'রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার'.split('_'),
    weekdaysShort : 'রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি'.split('_'),
    weekdaysMin : 'রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি'.split('_'),
    longDateFormat : {
        LT : 'A h:mm সময়',
        LTS : 'A h:mm:ss সময়',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm সময়',
        LLLL : 'dddd, D MMMM YYYY, A h:mm সময়'
    },
    calendar : {
        sameDay : '[আজ] LT',
        nextDay : '[আগামীকাল] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[গতকাল] LT',
        lastWeek : '[গত] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s পরে',
        past : '%s আগে',
        s : 'কয়েক সেকেন্ড',
        m : 'এক মিনিট',
        mm : '%d মিনিট',
        h : 'এক ঘন্টা',
        hh : '%d ঘন্টা',
        d : 'এক দিন',
        dd : '%d দিন',
        M : 'এক মাস',
        MM : '%d মাস',
        y : 'এক বছর',
        yy : '%d বছর'
    },
    preparse: function (string) {
        return string.replace(/[১২৩৪৫৬৭৮৯০]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'রাত' && hour >= 4) ||
                (meridiem === 'দুপুর' && hour < 5) ||
                meridiem === 'বিকাল') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'রাত';
        } else if (hour < 10) {
            return 'সকাল';
        } else if (hour < 17) {
            return 'দুপুর';
        } else if (hour < 20) {
            return 'বিকাল';
        } else {
            return 'রাত';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bn;

})));


/***/ }),
/* 112 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tibetan [bo]
//! author : Thupten N. Chakrishar : https://github.com/vajradog

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '༡',
    '2': '༢',
    '3': '༣',
    '4': '༤',
    '5': '༥',
    '6': '༦',
    '7': '༧',
    '8': '༨',
    '9': '༩',
    '0': '༠'
};
var numberMap = {
    '༡': '1',
    '༢': '2',
    '༣': '3',
    '༤': '4',
    '༥': '5',
    '༦': '6',
    '༧': '7',
    '༨': '8',
    '༩': '9',
    '༠': '0'
};

var bo = moment.defineLocale('bo', {
    months : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    monthsShort : 'ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ'.split('_'),
    weekdays : 'གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་'.split('_'),
    weekdaysShort : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    weekdaysMin : 'ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[དི་རིང] LT',
        nextDay : '[སང་ཉིན] LT',
        nextWeek : '[བདུན་ཕྲག་རྗེས་མ], LT',
        lastDay : '[ཁ་སང] LT',
        lastWeek : '[བདུན་ཕྲག་མཐའ་མ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ལ་',
        past : '%s སྔན་ལ',
        s : 'ལམ་སང',
        m : 'སྐར་མ་གཅིག',
        mm : '%d སྐར་མ',
        h : 'ཆུ་ཚོད་གཅིག',
        hh : '%d ཆུ་ཚོད',
        d : 'ཉིན་གཅིག',
        dd : '%d ཉིན་',
        M : 'ཟླ་བ་གཅིག',
        MM : '%d ཟླ་བ',
        y : 'ལོ་གཅིག',
        yy : '%d ལོ'
    },
    preparse: function (string) {
        return string.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'མཚན་མོ' && hour >= 4) ||
                (meridiem === 'ཉིན་གུང' && hour < 5) ||
                meridiem === 'དགོང་དག') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'མཚན་མོ';
        } else if (hour < 10) {
            return 'ཞོགས་ཀས';
        } else if (hour < 17) {
            return 'ཉིན་གུང';
        } else if (hour < 20) {
            return 'དགོང་དག';
        } else {
            return 'མཚན་མོ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return bo;

})));


/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Breton [br]
//! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function relativeTimeWithMutation(number, withoutSuffix, key) {
    var format = {
        'mm': 'munutenn',
        'MM': 'miz',
        'dd': 'devezh'
    };
    return number + ' ' + mutation(format[key], number);
}
function specialMutationForYears(number) {
    switch (lastNumber(number)) {
        case 1:
        case 3:
        case 4:
        case 5:
        case 9:
            return number + ' bloaz';
        default:
            return number + ' vloaz';
    }
}
function lastNumber(number) {
    if (number > 9) {
        return lastNumber(number % 10);
    }
    return number;
}
function mutation(text, number) {
    if (number === 2) {
        return softMutation(text);
    }
    return text;
}
function softMutation(text) {
    var mutationTable = {
        'm': 'v',
        'b': 'v',
        'd': 'z'
    };
    if (mutationTable[text.charAt(0)] === undefined) {
        return text;
    }
    return mutationTable[text.charAt(0)] + text.substring(1);
}

var br = moment.defineLocale('br', {
    months : 'Genver_C\'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu'.split('_'),
    monthsShort : 'Gen_C\'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker'.split('_'),
    weekdays : 'Sul_Lun_Meurzh_Merc\'her_Yaou_Gwener_Sadorn'.split('_'),
    weekdaysShort : 'Sul_Lun_Meu_Mer_Yao_Gwe_Sad'.split('_'),
    weekdaysMin : 'Su_Lu_Me_Mer_Ya_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h[e]mm A',
        LTS : 'h[e]mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [a viz] MMMM YYYY',
        LLL : 'D [a viz] MMMM YYYY h[e]mm A',
        LLLL : 'dddd, D [a viz] MMMM YYYY h[e]mm A'
    },
    calendar : {
        sameDay : '[Hiziv da] LT',
        nextDay : '[Warc\'hoazh da] LT',
        nextWeek : 'dddd [da] LT',
        lastDay : '[Dec\'h da] LT',
        lastWeek : 'dddd [paset da] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'a-benn %s',
        past : '%s \'zo',
        s : 'un nebeud segondennoù',
        m : 'ur vunutenn',
        mm : relativeTimeWithMutation,
        h : 'un eur',
        hh : '%d eur',
        d : 'un devezh',
        dd : relativeTimeWithMutation,
        M : 'ur miz',
        MM : relativeTimeWithMutation,
        y : 'ur bloaz',
        yy : specialMutationForYears
    },
    dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
    ordinal : function (number) {
        var output = (number === 1) ? 'añ' : 'vet';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return br;

})));


/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Bosnian [bs]
//! author : Nedim Cholich : https://github.com/frontyard
//! based on (hr) translation by Bojan Marković

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var bs = moment.defineLocale('bs', {
    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return bs;

})));


/***/ }),
/* 115 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Catalan [ca]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ca = moment.defineLocale('ca', {
    months : {
        standalone: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),
        format: 'de gener_de febrer_de març_d\'abril_de maig_de juny_de juliol_d\'agost_de setembre_d\'octubre_de novembre_de desembre'.split('_'),
        isFormat: /D[oD]?(\s)+MMMM/
    },
    monthsShort : 'gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),
    weekdaysShort : 'dg._dl._dt._dc._dj._dv._ds.'.split('_'),
    weekdaysMin : 'dg_dl_dt_dc_dj_dv_ds'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [de] YYYY',
        ll : 'D MMM YYYY',
        LLL : 'D MMMM [de] YYYY [a les] H:mm',
        lll : 'D MMM YYYY, H:mm',
        LLLL : 'dddd D MMMM [de] YYYY [a les] H:mm',
        llll : 'ddd D MMM YYYY, H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[avui a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextDay : function () {
            return '[demà a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastDay : function () {
            return '[ahir a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [passat a ' + ((this.hours() !== 1) ? 'les' : 'la') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'd\'aquí %s',
        past : 'fa %s',
        s : 'uns segons',
        m : 'un minut',
        mm : '%d minuts',
        h : 'una hora',
        hh : '%d hores',
        d : 'un dia',
        dd : '%d dies',
        M : 'un mes',
        MM : '%d mesos',
        y : 'un any',
        yy : '%d anys'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
    ordinal : function (number, period) {
        var output = (number === 1) ? 'r' :
            (number === 2) ? 'n' :
            (number === 3) ? 'r' :
            (number === 4) ? 't' : 'è';
        if (period === 'w' || period === 'W') {
            output = 'a';
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ca;

})));


/***/ }),
/* 116 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Czech [cs]
//! author : petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');
var monthsShort = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');
function plural(n) {
    return (n > 1) && (n < 5) && (~~(n / 10) !== 1);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minuty' : 'minut');
            } else {
                return result + 'minutami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodin');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'den' : 'dnem';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dny' : 'dní');
            } else {
                return result + 'dny';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'měsíce' : 'měsíců');
            } else {
                return result + 'měsíci';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'let');
            } else {
                return result + 'lety';
            }
            break;
    }
}

var cs = moment.defineLocale('cs', {
    months : months,
    monthsShort : monthsShort,
    monthsParse : (function (months, monthsShort) {
        var i, _monthsParse = [];
        for (i = 0; i < 12; i++) {
            // use custom parser to solve problem with July (červenec)
            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');
        }
        return _monthsParse;
    }(months, monthsShort)),
    shortMonthsParse : (function (monthsShort) {
        var i, _shortMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');
        }
        return _shortMonthsParse;
    }(monthsShort)),
    longMonthsParse : (function (months) {
        var i, _longMonthsParse = [];
        for (i = 0; i < 12; i++) {
            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');
        }
        return _longMonthsParse;
    }(months)),
    weekdays : 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),
    weekdaysShort : 'ne_po_út_st_čt_pá_so'.split('_'),
    weekdaysMin : 'ne_po_út_st_čt_pá_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm',
        l : 'D. M. YYYY'
    },
    calendar : {
        sameDay: '[dnes v] LT',
        nextDay: '[zítra v] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v neděli v] LT';
                case 1:
                case 2:
                    return '[v] dddd [v] LT';
                case 3:
                    return '[ve středu v] LT';
                case 4:
                    return '[ve čtvrtek v] LT';
                case 5:
                    return '[v pátek v] LT';
                case 6:
                    return '[v sobotu v] LT';
            }
        },
        lastDay: '[včera v] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulou neděli v] LT';
                case 1:
                case 2:
                    return '[minulé] dddd [v] LT';
                case 3:
                    return '[minulou středu v] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [v] LT';
                case 6:
                    return '[minulou sobotu v] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'před %s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse : /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cs;

})));


/***/ }),
/* 117 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chuvash [cv]
//! author : Anatoly Mironov : https://github.com/mirontoli

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var cv = moment.defineLocale('cv', {
    months : 'кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав'.split('_'),
    monthsShort : 'кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш'.split('_'),
    weekdays : 'вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун'.split('_'),
    weekdaysShort : 'выр_тун_ытл_юн_кӗҫ_эрн_шӑм'.split('_'),
    weekdaysMin : 'вр_тн_ыт_юн_кҫ_эр_шм'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]',
        LLL : 'YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm',
        LLLL : 'dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm'
    },
    calendar : {
        sameDay: '[Паян] LT [сехетре]',
        nextDay: '[Ыран] LT [сехетре]',
        lastDay: '[Ӗнер] LT [сехетре]',
        nextWeek: '[Ҫитес] dddd LT [сехетре]',
        lastWeek: '[Иртнӗ] dddd LT [сехетре]',
        sameElse: 'L'
    },
    relativeTime : {
        future : function (output) {
            var affix = /сехет$/i.exec(output) ? 'рен' : /ҫул$/i.exec(output) ? 'тан' : 'ран';
            return output + affix;
        },
        past : '%s каялла',
        s : 'пӗр-ик ҫеккунт',
        m : 'пӗр минут',
        mm : '%d минут',
        h : 'пӗр сехет',
        hh : '%d сехет',
        d : 'пӗр кун',
        dd : '%d кун',
        M : 'пӗр уйӑх',
        MM : '%d уйӑх',
        y : 'пӗр ҫул',
        yy : '%d ҫул'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
    ordinal : '%d-мӗш',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return cv;

})));


/***/ }),
/* 118 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Welsh [cy]
//! author : Robert Allen : https://github.com/robgallen
//! author : https://github.com/ryangreaves

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var cy = moment.defineLocale('cy', {
    months: 'Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr'.split('_'),
    monthsShort: 'Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag'.split('_'),
    weekdays: 'Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn'.split('_'),
    weekdaysShort: 'Sul_Llun_Maw_Mer_Iau_Gwe_Sad'.split('_'),
    weekdaysMin: 'Su_Ll_Ma_Me_Ia_Gw_Sa'.split('_'),
    weekdaysParseExact : true,
    // time formats are the same as en-gb
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[Heddiw am] LT',
        nextDay: '[Yfory am] LT',
        nextWeek: 'dddd [am] LT',
        lastDay: '[Ddoe am] LT',
        lastWeek: 'dddd [diwethaf am] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'mewn %s',
        past: '%s yn ôl',
        s: 'ychydig eiliadau',
        m: 'munud',
        mm: '%d munud',
        h: 'awr',
        hh: '%d awr',
        d: 'diwrnod',
        dd: '%d diwrnod',
        M: 'mis',
        MM: '%d mis',
        y: 'blwyddyn',
        yy: '%d flynedd'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
    // traditional ordinal numbers above 31 are not commonly used in colloquial Welsh
    ordinal: function (number) {
        var b = number,
            output = '',
            lookup = [
                '', 'af', 'il', 'ydd', 'ydd', 'ed', 'ed', 'ed', 'fed', 'fed', 'fed', // 1af to 10fed
                'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'eg', 'fed', 'eg', 'fed' // 11eg to 20fed
            ];
        if (b > 20) {
            if (b === 40 || b === 50 || b === 60 || b === 80 || b === 100) {
                output = 'fed'; // not 30ain, 70ain or 90ain
            } else {
                output = 'ain';
            }
        } else if (b > 0) {
            output = lookup[b];
        }
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return cy;

})));


/***/ }),
/* 119 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Danish [da]
//! author : Ulrik Nielsen : https://github.com/mrbase

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var da = moment.defineLocale('da', {
    months : 'januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'søn_man_tir_ons_tor_fre_lør'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay : '[i dag kl.] LT',
        nextDay : '[i morgen kl.] LT',
        nextWeek : 'på dddd [kl.] LT',
        lastDay : '[i går kl.] LT',
        lastWeek : '[i] dddd[s kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'få sekunder',
        m : 'et minut',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dage',
        M : 'en måned',
        MM : '%d måneder',
        y : 'et år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return da;

})));


/***/ }),
/* 120 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Austria) [de-at]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Martin Groller : https://github.com/MadMG
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deAt = moment.defineLocale('de-at', {
    months : 'Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deAt;

})));


/***/ }),
/* 121 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German (Switzerland) [de-ch]
//! author : sschueller : https://github.com/sschueller

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


// based on: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var deCh = moment.defineLocale('de-ch', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH.mm',
        LTS: 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH.mm',
        LLLL : 'dddd, D. MMMM YYYY HH.mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return deCh;

})));


/***/ }),
/* 122 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : German [de]
//! author : lluchs : https://github.com/lluchs
//! author: Menelion Elensúle: https://github.com/Oire
//! author : Mikolaj Dadela : https://github.com/mik01aj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eine Minute', 'einer Minute'],
        'h': ['eine Stunde', 'einer Stunde'],
        'd': ['ein Tag', 'einem Tag'],
        'dd': [number + ' Tage', number + ' Tagen'],
        'M': ['ein Monat', 'einem Monat'],
        'MM': [number + ' Monate', number + ' Monaten'],
        'y': ['ein Jahr', 'einem Jahr'],
        'yy': [number + ' Jahre', number + ' Jahren']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var de = moment.defineLocale('de', {
    months : 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort : 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),
    weekdaysShort : 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),
    weekdaysMin : 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY HH:mm',
        LLLL : 'dddd, D. MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[heute um] LT [Uhr]',
        sameElse: 'L',
        nextDay: '[morgen um] LT [Uhr]',
        nextWeek: 'dddd [um] LT [Uhr]',
        lastDay: '[gestern um] LT [Uhr]',
        lastWeek: '[letzten] dddd [um] LT [Uhr]'
    },
    relativeTime : {
        future : 'in %s',
        past : 'vor %s',
        s : 'ein paar Sekunden',
        m : processRelativeTime,
        mm : '%d Minuten',
        h : processRelativeTime,
        hh : '%d Stunden',
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return de;

})));


/***/ }),
/* 123 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maldivian [dv]
//! author : Jawish Hameed : https://github.com/jawish

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'ޖެނުއަރީ',
    'ފެބްރުއަރީ',
    'މާރިޗު',
    'އޭޕްރީލު',
    'މޭ',
    'ޖޫން',
    'ޖުލައި',
    'އޯގަސްޓު',
    'ސެޕްޓެމްބަރު',
    'އޮކްޓޯބަރު',
    'ނޮވެމްބަރު',
    'ޑިސެމްބަރު'
];
var weekdays = [
    'އާދިއްތަ',
    'ހޯމަ',
    'އަންގާރަ',
    'ބުދަ',
    'ބުރާސްފަތި',
    'ހުކުރު',
    'ހޮނިހިރު'
];

var dv = moment.defineLocale('dv', {
    months : months,
    monthsShort : months,
    weekdays : weekdays,
    weekdaysShort : weekdays,
    weekdaysMin : 'އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި'.split('_'),
    longDateFormat : {

        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'D/M/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /މކ|މފ/,
    isPM : function (input) {
        return 'މފ' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'މކ';
        } else {
            return 'މފ';
        }
    },
    calendar : {
        sameDay : '[މިއަދު] LT',
        nextDay : '[މާދަމާ] LT',
        nextWeek : 'dddd LT',
        lastDay : '[އިއްޔެ] LT',
        lastWeek : '[ފާއިތުވި] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ތެރޭގައި %s',
        past : 'ކުރިން %s',
        s : 'ސިކުންތުކޮޅެއް',
        m : 'މިނިޓެއް',
        mm : 'މިނިޓު %d',
        h : 'ގަޑިއިރެއް',
        hh : 'ގަޑިއިރު %d',
        d : 'ދުވަހެއް',
        dd : 'ދުވަސް %d',
        M : 'މަހެއް',
        MM : 'މަސް %d',
        y : 'އަހަރެއް',
        yy : 'އަހަރު %d'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 7,  // Sunday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return dv;

})));


/***/ }),
/* 124 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Greek [el]
//! author : Aggelos Karalias : https://github.com/mehiel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';

function isFunction(input) {
    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';
}


var el = moment.defineLocale('el', {
    monthsNominativeEl : 'Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος'.split('_'),
    monthsGenitiveEl : 'Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου'.split('_'),
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return this._monthsNominativeEl;
        } else if (typeof format === 'string' && /D/.test(format.substring(0, format.indexOf('MMMM')))) { // if there is a day number before 'MMMM'
            return this._monthsGenitiveEl[momentToFormat.month()];
        } else {
            return this._monthsNominativeEl[momentToFormat.month()];
        }
    },
    monthsShort : 'Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ'.split('_'),
    weekdays : 'Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο'.split('_'),
    weekdaysShort : 'Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ'.split('_'),
    weekdaysMin : 'Κυ_Δε_Τρ_Τε_Πε_Πα_Σα'.split('_'),
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'μμ' : 'ΜΜ';
        } else {
            return isLower ? 'πμ' : 'ΠΜ';
        }
    },
    isPM : function (input) {
        return ((input + '').toLowerCase()[0] === 'μ');
    },
    meridiemParse : /[ΠΜ]\.?Μ?\.?/i,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendarEl : {
        sameDay : '[Σήμερα {}] LT',
        nextDay : '[Αύριο {}] LT',
        nextWeek : 'dddd [{}] LT',
        lastDay : '[Χθες {}] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 6:
                    return '[το προηγούμενο] dddd [{}] LT';
                default:
                    return '[την προηγούμενη] dddd [{}] LT';
            }
        },
        sameElse : 'L'
    },
    calendar : function (key, mom) {
        var output = this._calendarEl[key],
            hours = mom && mom.hours();
        if (isFunction(output)) {
            output = output.apply(mom);
        }
        return output.replace('{}', (hours % 12 === 1 ? 'στη' : 'στις'));
    },
    relativeTime : {
        future : 'σε %s',
        past : '%s πριν',
        s : 'λίγα δευτερόλεπτα',
        m : 'ένα λεπτό',
        mm : '%d λεπτά',
        h : 'μία ώρα',
        hh : '%d ώρες',
        d : 'μία μέρα',
        dd : '%d μέρες',
        M : 'ένας μήνας',
        MM : '%d μήνες',
        y : 'ένας χρόνος',
        yy : '%d χρόνια'
    },
    dayOfMonthOrdinalParse: /\d{1,2}η/,
    ordinal: '%dη',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4st is the first week of the year.
    }
});

return el;

})));


/***/ }),
/* 125 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Australia) [en-au]
//! author : Jared Morse : https://github.com/jarcoal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enAu = moment.defineLocale('en-au', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enAu;

})));


/***/ }),
/* 126 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Canada) [en-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enCa = moment.defineLocale('en-ca', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'YYYY-MM-DD',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY h:mm A',
        LLLL : 'dddd, MMMM D, YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    }
});

return enCa;

})));


/***/ }),
/* 127 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (United Kingdom) [en-gb]
//! author : Chris Gedrim : https://github.com/chrisgedrim

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enGb = moment.defineLocale('en-gb', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enGb;

})));


/***/ }),
/* 128 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (Ireland) [en-ie]
//! author : Chris Cartlidge : https://github.com/chriscartlidge

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enIe = moment.defineLocale('en-ie', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enIe;

})));


/***/ }),
/* 129 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : English (New Zealand) [en-nz]
//! author : Luke McGregor : https://github.com/lukemcgregor

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var enNz = moment.defineLocale('en-nz', {
    months : 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),
    weekdays : 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),
    weekdaysShort : 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
    weekdaysMin : 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Today at] LT',
        nextDay : '[Tomorrow at] LT',
        nextWeek : 'dddd [at] LT',
        lastDay : '[Yesterday at] LT',
        lastWeek : '[Last] dddd [at] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'in %s',
        past : '%s ago',
        s : 'a few seconds',
        m : 'a minute',
        mm : '%d minutes',
        h : 'an hour',
        hh : '%d hours',
        d : 'a day',
        dd : '%d days',
        M : 'a month',
        MM : '%d months',
        y : 'a year',
        yy : '%d years'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return enNz;

})));


/***/ }),
/* 130 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Esperanto [eo]
//! author : Colin Dean : https://github.com/colindean
//! author : Mia Nordentoft Imperatori : https://github.com/miestasmia
//! comment : miestasmia corrected the translation by colindean

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var eo = moment.defineLocale('eo', {
    months : 'januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec'.split('_'),
    weekdays : 'dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato'.split('_'),
    weekdaysShort : 'dim_lun_mard_merk_ĵaŭ_ven_sab'.split('_'),
    weekdaysMin : 'di_lu_ma_me_ĵa_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D[-a de] MMMM, YYYY',
        LLL : 'D[-a de] MMMM, YYYY HH:mm',
        LLLL : 'dddd, [la] D[-a de] MMMM, YYYY HH:mm'
    },
    meridiemParse: /[ap]\.t\.m/i,
    isPM: function (input) {
        return input.charAt(0).toLowerCase() === 'p';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'p.t.m.' : 'P.T.M.';
        } else {
            return isLower ? 'a.t.m.' : 'A.T.M.';
        }
    },
    calendar : {
        sameDay : '[Hodiaŭ je] LT',
        nextDay : '[Morgaŭ je] LT',
        nextWeek : 'dddd [je] LT',
        lastDay : '[Hieraŭ je] LT',
        lastWeek : '[pasinta] dddd [je] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'post %s',
        past : 'antaŭ %s',
        s : 'sekundoj',
        m : 'minuto',
        mm : '%d minutoj',
        h : 'horo',
        hh : '%d horoj',
        d : 'tago',//ne 'diurno', ĉar estas uzita por proksimumo
        dd : '%d tagoj',
        M : 'monato',
        MM : '%d monatoj',
        y : 'jaro',
        yy : '%d jaroj'
    },
    dayOfMonthOrdinalParse: /\d{1,2}a/,
    ordinal : '%da',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eo;

})));


/***/ }),
/* 131 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (Dominican Republic) [es-do]

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var esDo = moment.defineLocale('es-do', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse: monthsParse,
    longMonthsParse: monthsParse,
    shortMonthsParse: monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY h:mm A',
        LLLL : 'dddd, D [de] MMMM [de] YYYY h:mm A'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return esDo;

})));


/***/ }),
/* 132 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish (United States) [es-us]
//! author : bustta : https://github.com/bustta

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var esUs = moment.defineLocale('es-us', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'MM/DD/YYYY',
        LL : 'MMMM [de] D [de] YYYY',
        LLL : 'MMMM [de] D [de] YYYY H:mm',
        LLLL : 'dddd, MMMM [de] D [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return esUs;

})));


/***/ }),
/* 133 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Spanish [es]
//! author : Julio Napurí : https://github.com/julionc

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortDot = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');
var monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');

var monthsParse = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];
var monthsRegex = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i;

var es = moment.defineLocale('es', {
    months : 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortDot;
        } else if (/-MMM-/.test(format)) {
            return monthsShort[m.month()];
        } else {
            return monthsShortDot[m.month()];
        }
    },
    monthsRegex : monthsRegex,
    monthsShortRegex : monthsRegex,
    monthsStrictRegex : /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
    monthsShortStrictRegex : /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,
    weekdays : 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mi_ju_vi_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextDay : function () {
            return '[mañana a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastDay : function () {
            return '[ayer a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        lastWeek : function () {
            return '[el] dddd [pasado a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'en %s',
        past : 'hace %s',
        s : 'unos segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'una hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un año',
        yy : '%d años'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return es;

})));


/***/ }),
/* 134 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Estonian [et]
//! author : Henry Kehlmann : https://github.com/madhenry
//! improvements : Illimar Tambek : https://github.com/ragulka

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's' : ['mõne sekundi', 'mõni sekund', 'paar sekundit'],
        'm' : ['ühe minuti', 'üks minut'],
        'mm': [number + ' minuti', number + ' minutit'],
        'h' : ['ühe tunni', 'tund aega', 'üks tund'],
        'hh': [number + ' tunni', number + ' tundi'],
        'd' : ['ühe päeva', 'üks päev'],
        'M' : ['kuu aja', 'kuu aega', 'üks kuu'],
        'MM': [number + ' kuu', number + ' kuud'],
        'y' : ['ühe aasta', 'aasta', 'üks aasta'],
        'yy': [number + ' aasta', number + ' aastat']
    };
    if (withoutSuffix) {
        return format[key][2] ? format[key][2] : format[key][1];
    }
    return isFuture ? format[key][0] : format[key][1];
}

var et = moment.defineLocale('et', {
    months        : 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),
    monthsShort   : 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),
    weekdays      : 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),
    weekdaysShort : 'P_E_T_K_N_R_L'.split('_'),
    weekdaysMin   : 'P_E_T_K_N_R_L'.split('_'),
    longDateFormat : {
        LT   : 'H:mm',
        LTS : 'H:mm:ss',
        L    : 'DD.MM.YYYY',
        LL   : 'D. MMMM YYYY',
        LLL  : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[Täna,] LT',
        nextDay  : '[Homme,] LT',
        nextWeek : '[Järgmine] dddd LT',
        lastDay  : '[Eile,] LT',
        lastWeek : '[Eelmine] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s pärast',
        past   : '%s tagasi',
        s      : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : '%d päeva',
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return et;

})));


/***/ }),
/* 135 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Basque [eu]
//! author : Eneko Illarramendi : https://github.com/eillarra

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var eu = moment.defineLocale('eu', {
    months : 'urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua'.split('_'),
    monthsShort : 'urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.'.split('_'),
    monthsParseExact : true,
    weekdays : 'igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata'.split('_'),
    weekdaysShort : 'ig._al._ar._az._og._ol._lr.'.split('_'),
    weekdaysMin : 'ig_al_ar_az_og_ol_lr'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY[ko] MMMM[ren] D[a]',
        LLL : 'YYYY[ko] MMMM[ren] D[a] HH:mm',
        LLLL : 'dddd, YYYY[ko] MMMM[ren] D[a] HH:mm',
        l : 'YYYY-M-D',
        ll : 'YYYY[ko] MMM D[a]',
        lll : 'YYYY[ko] MMM D[a] HH:mm',
        llll : 'ddd, YYYY[ko] MMM D[a] HH:mm'
    },
    calendar : {
        sameDay : '[gaur] LT[etan]',
        nextDay : '[bihar] LT[etan]',
        nextWeek : 'dddd LT[etan]',
        lastDay : '[atzo] LT[etan]',
        lastWeek : '[aurreko] dddd LT[etan]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s barru',
        past : 'duela %s',
        s : 'segundo batzuk',
        m : 'minutu bat',
        mm : '%d minutu',
        h : 'ordu bat',
        hh : '%d ordu',
        d : 'egun bat',
        dd : '%d egun',
        M : 'hilabete bat',
        MM : '%d hilabete',
        y : 'urte bat',
        yy : '%d urte'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return eu;

})));


/***/ }),
/* 136 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Persian [fa]
//! author : Ebrahim Byagowi : https://github.com/ebraminio

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '۱',
    '2': '۲',
    '3': '۳',
    '4': '۴',
    '5': '۵',
    '6': '۶',
    '7': '۷',
    '8': '۸',
    '9': '۹',
    '0': '۰'
};
var numberMap = {
    '۱': '1',
    '۲': '2',
    '۳': '3',
    '۴': '4',
    '۵': '5',
    '۶': '6',
    '۷': '7',
    '۸': '8',
    '۹': '9',
    '۰': '0'
};

var fa = moment.defineLocale('fa', {
    months : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    monthsShort : 'ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر'.split('_'),
    weekdays : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysShort : 'یک\u200cشنبه_دوشنبه_سه\u200cشنبه_چهارشنبه_پنج\u200cشنبه_جمعه_شنبه'.split('_'),
    weekdaysMin : 'ی_د_س_چ_پ_ج_ش'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function (input) {
        return /بعد از ظهر/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'قبل از ظهر';
        } else {
            return 'بعد از ظهر';
        }
    },
    calendar : {
        sameDay : '[امروز ساعت] LT',
        nextDay : '[فردا ساعت] LT',
        nextWeek : 'dddd [ساعت] LT',
        lastDay : '[دیروز ساعت] LT',
        lastWeek : 'dddd [پیش] [ساعت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'در %s',
        past : '%s پیش',
        s : 'چند ثانیه',
        m : 'یک دقیقه',
        mm : '%d دقیقه',
        h : 'یک ساعت',
        hh : '%d ساعت',
        d : 'یک روز',
        dd : '%d روز',
        M : 'یک ماه',
        MM : '%d ماه',
        y : 'یک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/[۰-۹]/g, function (match) {
            return numberMap[match];
        }).replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        }).replace(/,/g, '،');
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal : '%dم',
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12 // The week that contains Jan 1st is the first week of the year.
    }
});

return fa;

})));


/***/ }),
/* 137 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Finnish [fi]
//! author : Tarmo Aidantausta : https://github.com/bleadof

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');
var numbersFuture = [
        'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',
        numbersPast[7], numbersPast[8], numbersPast[9]
    ];
function translate(number, withoutSuffix, key, isFuture) {
    var result = '';
    switch (key) {
        case 's':
            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';
        case 'm':
            return isFuture ? 'minuutin' : 'minuutti';
        case 'mm':
            result = isFuture ? 'minuutin' : 'minuuttia';
            break;
        case 'h':
            return isFuture ? 'tunnin' : 'tunti';
        case 'hh':
            result = isFuture ? 'tunnin' : 'tuntia';
            break;
        case 'd':
            return isFuture ? 'päivän' : 'päivä';
        case 'dd':
            result = isFuture ? 'päivän' : 'päivää';
            break;
        case 'M':
            return isFuture ? 'kuukauden' : 'kuukausi';
        case 'MM':
            result = isFuture ? 'kuukauden' : 'kuukautta';
            break;
        case 'y':
            return isFuture ? 'vuoden' : 'vuosi';
        case 'yy':
            result = isFuture ? 'vuoden' : 'vuotta';
            break;
    }
    result = verbalNumber(number, isFuture) + ' ' + result;
    return result;
}
function verbalNumber(number, isFuture) {
    return number < 10 ? (isFuture ? numbersFuture[number] : numbersPast[number]) : number;
}

var fi = moment.defineLocale('fi', {
    months : 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),
    monthsShort : 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),
    weekdays : 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),
    weekdaysShort : 'su_ma_ti_ke_to_pe_la'.split('_'),
    weekdaysMin : 'su_ma_ti_ke_to_pe_la'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'Do MMMM[ta] YYYY',
        LLL : 'Do MMMM[ta] YYYY, [klo] HH.mm',
        LLLL : 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',
        l : 'D.M.YYYY',
        ll : 'Do MMM YYYY',
        lll : 'Do MMM YYYY, [klo] HH.mm',
        llll : 'ddd, Do MMM YYYY, [klo] HH.mm'
    },
    calendar : {
        sameDay : '[tänään] [klo] LT',
        nextDay : '[huomenna] [klo] LT',
        nextWeek : 'dddd [klo] LT',
        lastDay : '[eilen] [klo] LT',
        lastWeek : '[viime] dddd[na] [klo] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s päästä',
        past : '%s sitten',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fi;

})));


/***/ }),
/* 138 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Faroese [fo]
//! author : Ragnar Johannesen : https://github.com/ragnar123

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var fo = moment.defineLocale('fo', {
    months : 'januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur'.split('_'),
    weekdaysShort : 'sun_mán_týs_mik_hós_frí_ley'.split('_'),
    weekdaysMin : 'su_má_tý_mi_hó_fr_le'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D. MMMM, YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Í dag kl.] LT',
        nextDay : '[Í morgin kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[Í gjár kl.] LT',
        lastWeek : '[síðstu] dddd [kl] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'um %s',
        past : '%s síðani',
        s : 'fá sekund',
        m : 'ein minutt',
        mm : '%d minuttir',
        h : 'ein tími',
        hh : '%d tímar',
        d : 'ein dagur',
        dd : '%d dagar',
        M : 'ein mánaði',
        MM : '%d mánaðir',
        y : 'eitt ár',
        yy : '%d ár'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fo;

})));


/***/ }),
/* 139 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Canada) [fr-ca]
//! author : Jonathan Abourbih : https://github.com/jonbca

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var frCa = moment.defineLocale('fr-ca', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    }
});

return frCa;

})));


/***/ }),
/* 140 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French (Switzerland) [fr-ch]
//! author : Gaspard Bucher : https://github.com/gaspard

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var frCh = moment.defineLocale('fr-ch', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
    ordinal : function (number, period) {
        switch (period) {
            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'D':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return frCh;

})));


/***/ }),
/* 141 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : French [fr]
//! author : John Fischer : https://github.com/jfroffice

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var fr = moment.defineLocale('fr', {
    months : 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),
    monthsShort : 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),
    monthsParseExact : true,
    weekdays : 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),
    weekdaysShort : 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),
    weekdaysMin : 'Di_Lu_Ma_Me_Je_Ve_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Aujourd’hui à] LT',
        nextDay : '[Demain à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[Hier à] LT',
        lastWeek : 'dddd [dernier à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dans %s',
        past : 'il y a %s',
        s : 'quelques secondes',
        m : 'une minute',
        mm : '%d minutes',
        h : 'une heure',
        hh : '%d heures',
        d : 'un jour',
        dd : '%d jours',
        M : 'un mois',
        MM : '%d mois',
        y : 'un an',
        yy : '%d ans'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
    ordinal : function (number, period) {
        switch (period) {
            // TODO: Return 'e' when day of month > 1. Move this case inside
            // block for masculine words below.
            // See https://github.com/moment/moment/issues/3375
            case 'D':
                return number + (number === 1 ? 'er' : '');

            // Words with masculine grammatical gender: mois, trimestre, jour
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
                return number + (number === 1 ? 'er' : 'e');

            // Words with feminine grammatical gender: semaine
            case 'w':
            case 'W':
                return number + (number === 1 ? 're' : 'e');
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fr;

})));


/***/ }),
/* 142 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Frisian [fy]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_');

var fy = moment.defineLocale('fy', {
    months : 'jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },
    monthsParseExact : true,
    weekdays : 'snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon'.split('_'),
    weekdaysShort : 'si._mo._ti._wo._to._fr._so.'.split('_'),
    weekdaysMin : 'Si_Mo_Ti_Wo_To_Fr_So'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[hjoed om] LT',
        nextDay: '[moarn om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[juster om] LT',
        lastWeek: '[ôfrûne] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'oer %s',
        past : '%s lyn',
        s : 'in pear sekonden',
        m : 'ien minút',
        mm : '%d minuten',
        h : 'ien oere',
        hh : '%d oeren',
        d : 'ien dei',
        dd : '%d dagen',
        M : 'ien moanne',
        MM : '%d moannen',
        y : 'ien jier',
        yy : '%d jierren'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return fy;

})));


/***/ }),
/* 143 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Scottish Gaelic [gd]
//! author : Jon Ashdown : https://github.com/jonashdown

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'Am Faoilleach', 'An Gearran', 'Am Màrt', 'An Giblean', 'An Cèitean', 'An t-Ògmhios', 'An t-Iuchar', 'An Lùnastal', 'An t-Sultain', 'An Dàmhair', 'An t-Samhain', 'An Dùbhlachd'
];

var monthsShort = ['Faoi', 'Gear', 'Màrt', 'Gibl', 'Cèit', 'Ògmh', 'Iuch', 'Lùn', 'Sult', 'Dàmh', 'Samh', 'Dùbh'];

var weekdays = ['Didòmhnaich', 'Diluain', 'Dimàirt', 'Diciadain', 'Diardaoin', 'Dihaoine', 'Disathairne'];

var weekdaysShort = ['Did', 'Dil', 'Dim', 'Dic', 'Dia', 'Dih', 'Dis'];

var weekdaysMin = ['Dò', 'Lu', 'Mà', 'Ci', 'Ar', 'Ha', 'Sa'];

var gd = moment.defineLocale('gd', {
    months : months,
    monthsShort : monthsShort,
    monthsParseExact : true,
    weekdays : weekdays,
    weekdaysShort : weekdaysShort,
    weekdaysMin : weekdaysMin,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[An-diugh aig] LT',
        nextDay : '[A-màireach aig] LT',
        nextWeek : 'dddd [aig] LT',
        lastDay : '[An-dè aig] LT',
        lastWeek : 'dddd [seo chaidh] [aig] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ann an %s',
        past : 'bho chionn %s',
        s : 'beagan diogan',
        m : 'mionaid',
        mm : '%d mionaidean',
        h : 'uair',
        hh : '%d uairean',
        d : 'latha',
        dd : '%d latha',
        M : 'mìos',
        MM : '%d mìosan',
        y : 'bliadhna',
        yy : '%d bliadhna'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(d|na|mh)/,
    ordinal : function (number) {
        var output = number === 1 ? 'd' : number % 10 === 2 ? 'na' : 'mh';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gd;

})));


/***/ }),
/* 144 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Galician [gl]
//! author : Juan G. Hurtado : https://github.com/juanghurtado

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var gl = moment.defineLocale('gl', {
    months : 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),
    monthsShort : 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),
    weekdaysShort : 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),
    weekdaysMin : 'do_lu_ma_mé_xo_ve_sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY H:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY H:mm'
    },
    calendar : {
        sameDay : function () {
            return '[hoxe ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextDay : function () {
            return '[mañá ' + ((this.hours() !== 1) ? 'ás' : 'á') + '] LT';
        },
        nextWeek : function () {
            return 'dddd [' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        lastDay : function () {
            return '[onte ' + ((this.hours() !== 1) ? 'á' : 'a') + '] LT';
        },
        lastWeek : function () {
            return '[o] dddd [pasado ' + ((this.hours() !== 1) ? 'ás' : 'a') + '] LT';
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : function (str) {
            if (str.indexOf('un') === 0) {
                return 'n' + str;
            }
            return 'en ' + str;
        },
        past : 'hai %s',
        s : 'uns segundos',
        m : 'un minuto',
        mm : '%d minutos',
        h : 'unha hora',
        hh : '%d horas',
        d : 'un día',
        dd : '%d días',
        M : 'un mes',
        MM : '%d meses',
        y : 'un ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return gl;

})));


/***/ }),
/* 145 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Konkani Latin script [gom-latn]
//! author : The Discoverer : https://github.com/WikiDiscoverer

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['thodde secondanim', 'thodde second'],
        'm': ['eka mintan', 'ek minute'],
        'mm': [number + ' mintanim', number + ' mintam'],
        'h': ['eka horan', 'ek hor'],
        'hh': [number + ' horanim', number + ' hor'],
        'd': ['eka disan', 'ek dis'],
        'dd': [number + ' disanim', number + ' dis'],
        'M': ['eka mhoinean', 'ek mhoino'],
        'MM': [number + ' mhoineanim', number + ' mhoine'],
        'y': ['eka vorsan', 'ek voros'],
        'yy': [number + ' vorsanim', number + ' vorsam']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}

var gomLatn = moment.defineLocale('gom-latn', {
    months : 'Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr'.split('_'),
    monthsShort : 'Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays : 'Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son\'var'.split('_'),
    weekdaysShort : 'Ait._Som._Mon._Bud._Bre._Suk._Son.'.split('_'),
    weekdaysMin : 'Ai_Sm_Mo_Bu_Br_Su_Sn'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'A h:mm [vazta]',
        LTS : 'A h:mm:ss [vazta]',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY A h:mm [vazta]',
        LLLL : 'dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]',
        llll: 'ddd, D MMM YYYY, A h:mm [vazta]'
    },
    calendar : {
        sameDay: '[Aiz] LT',
        nextDay: '[Faleam] LT',
        nextWeek: '[Ieta to] dddd[,] LT',
        lastDay: '[Kal] LT',
        lastWeek: '[Fatlo] dddd[,] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s',
        past : '%s adim',
        s : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse : /\d{1,2}(er)/,
    ordinal : function (number, period) {
        switch (period) {
            // the ordinal 'er' only applies to day of the month
            case 'D':
                return number + 'er';
            default:
            case 'M':
            case 'Q':
            case 'DDD':
            case 'd':
            case 'w':
            case 'W':
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    },
    meridiemParse: /rati|sokalli|donparam|sanje/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'rati') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'sokalli') {
            return hour;
        } else if (meridiem === 'donparam') {
            return hour > 12 ? hour : hour + 12;
        } else if (meridiem === 'sanje') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'rati';
        } else if (hour < 12) {
            return 'sokalli';
        } else if (hour < 16) {
            return 'donparam';
        } else if (hour < 20) {
            return 'sanje';
        } else {
            return 'rati';
        }
    }
});

return gomLatn;

})));


/***/ }),
/* 146 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Gujarati [gu]
//! author : Kaushik Thanki : https://github.com/Kaushik1987

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
        '1': '૧',
        '2': '૨',
        '3': '૩',
        '4': '૪',
        '5': '૫',
        '6': '૬',
        '7': '૭',
        '8': '૮',
        '9': '૯',
        '0': '૦'
    };
var numberMap = {
        '૧': '1',
        '૨': '2',
        '૩': '3',
        '૪': '4',
        '૫': '5',
        '૬': '6',
        '૭': '7',
        '૮': '8',
        '૯': '9',
        '૦': '0'
    };

var gu = moment.defineLocale('gu', {
    months: 'જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર'.split('_'),
    monthsShort: 'જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.'.split('_'),
    monthsParseExact: true,
    weekdays: 'રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર'.split('_'),
    weekdaysShort: 'રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ'.split('_'),
    weekdaysMin: 'ર_સો_મં_બુ_ગુ_શુ_શ'.split('_'),
    longDateFormat: {
        LT: 'A h:mm વાગ્યે',
        LTS: 'A h:mm:ss વાગ્યે',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY, A h:mm વાગ્યે',
        LLLL: 'dddd, D MMMM YYYY, A h:mm વાગ્યે'
    },
    calendar: {
        sameDay: '[આજ] LT',
        nextDay: '[કાલે] LT',
        nextWeek: 'dddd, LT',
        lastDay: '[ગઇકાલે] LT',
        lastWeek: '[પાછલા] dddd, LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%s મા',
        past: '%s પેહલા',
        s: 'અમુક પળો',
        m: 'એક મિનિટ',
        mm: '%d મિનિટ',
        h: 'એક કલાક',
        hh: '%d કલાક',
        d: 'એક દિવસ',
        dd: '%d દિવસ',
        M: 'એક મહિનો',
        MM: '%d મહિનો',
        y: 'એક વર્ષ',
        yy: '%d વર્ષ'
    },
    preparse: function (string) {
        return string.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Gujarati notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Gujarati.
    meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'રાત') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'સવાર') {
            return hour;
        } else if (meridiem === 'બપોર') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'સાંજ') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'રાત';
        } else if (hour < 10) {
            return 'સવાર';
        } else if (hour < 17) {
            return 'બપોર';
        } else if (hour < 20) {
            return 'સાંજ';
        } else {
            return 'રાત';
        }
    },
    week: {
        dow: 0, // Sunday is the first day of the week.
        doy: 6 // The week that contains Jan 1st is the first week of the year.
    }
});

return gu;

})));


/***/ }),
/* 147 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hebrew [he]
//! author : Tomer Cohen : https://github.com/tomer
//! author : Moshe Simantov : https://github.com/DevelopmentIL
//! author : Tal Ater : https://github.com/TalAter

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var he = moment.defineLocale('he', {
    months : 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),
    monthsShort : 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),
    weekdays : 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),
    weekdaysShort : 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),
    weekdaysMin : 'א_ב_ג_ד_ה_ו_ש'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [ב]MMMM YYYY',
        LLL : 'D [ב]MMMM YYYY HH:mm',
        LLLL : 'dddd, D [ב]MMMM YYYY HH:mm',
        l : 'D/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[היום ב־]LT',
        nextDay : '[מחר ב־]LT',
        nextWeek : 'dddd [בשעה] LT',
        lastDay : '[אתמול ב־]LT',
        lastWeek : '[ביום] dddd [האחרון בשעה] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'בעוד %s',
        past : 'לפני %s',
        s : 'מספר שניות',
        m : 'דקה',
        mm : '%d דקות',
        h : 'שעה',
        hh : function (number) {
            if (number === 2) {
                return 'שעתיים';
            }
            return number + ' שעות';
        },
        d : 'יום',
        dd : function (number) {
            if (number === 2) {
                return 'יומיים';
            }
            return number + ' ימים';
        },
        M : 'חודש',
        MM : function (number) {
            if (number === 2) {
                return 'חודשיים';
            }
            return number + ' חודשים';
        },
        y : 'שנה',
        yy : function (number) {
            if (number === 2) {
                return 'שנתיים';
            } else if (number % 10 === 0 && number !== 10) {
                return number + ' שנה';
            }
            return number + ' שנים';
        }
    },
    meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
    isPM : function (input) {
        return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 5) {
            return 'לפנות בוקר';
        } else if (hour < 10) {
            return 'בבוקר';
        } else if (hour < 12) {
            return isLower ? 'לפנה"צ' : 'לפני הצהריים';
        } else if (hour < 18) {
            return isLower ? 'אחה"צ' : 'אחרי הצהריים';
        } else {
            return 'בערב';
        }
    }
});

return he;

})));


/***/ }),
/* 148 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hindi [hi]
//! author : Mayank Singhal : https://github.com/mayanksinghal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var hi = moment.defineLocale('hi', {
    months : 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),
    monthsShort : 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),
    monthsParseExact: true,
    weekdays : 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm बजे',
        LTS : 'A h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, A h:mm बजे'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[कल] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[कल] LT',
        lastWeek : '[पिछले] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s में',
        past : '%s पहले',
        s : 'कुछ ही क्षण',
        m : 'एक मिनट',
        mm : '%d मिनट',
        h : 'एक घंटा',
        hh : '%d घंटे',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महीने',
        MM : '%d महीने',
        y : 'एक वर्ष',
        yy : '%d वर्ष'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Hindi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.
    meridiemParse: /रात|सुबह|दोपहर|शाम/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सुबह') {
            return hour;
        } else if (meridiem === 'दोपहर') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'शाम') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात';
        } else if (hour < 10) {
            return 'सुबह';
        } else if (hour < 17) {
            return 'दोपहर';
        } else if (hour < 20) {
            return 'शाम';
        } else {
            return 'रात';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return hi;

})));


/***/ }),
/* 149 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Croatian [hr]
//! author : Bojan Marković : https://github.com/bmarkovic

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'jedna minuta' : 'jedne minute';
        case 'mm':
            if (number === 1) {
                result += 'minuta';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'minute';
            } else {
                result += 'minuta';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'jedan sat' : 'jednog sata';
        case 'hh':
            if (number === 1) {
                result += 'sat';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'sata';
            } else {
                result += 'sati';
            }
            return result;
        case 'dd':
            if (number === 1) {
                result += 'dan';
            } else {
                result += 'dana';
            }
            return result;
        case 'MM':
            if (number === 1) {
                result += 'mjesec';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'mjeseca';
            } else {
                result += 'mjeseci';
            }
            return result;
        case 'yy':
            if (number === 1) {
                result += 'godina';
            } else if (number === 2 || number === 3 || number === 4) {
                result += 'godine';
            } else {
                result += 'godina';
            }
            return result;
    }
}

var hr = moment.defineLocale('hr', {
    months : {
        format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split('_'),
        standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split('_')
    },
    monthsShort : 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort : 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin : 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danas u] LT',
        nextDay  : '[sutra u] LT',
        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[jučer u] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                    return '[prošlu] dddd [u] LT';
                case 6:
                    return '[prošle] [subote] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prošli] dddd [u] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'par sekundi',
        m      : translate,
        mm     : translate,
        h      : translate,
        hh     : translate,
        d      : 'dan',
        dd     : translate,
        M      : 'mjesec',
        MM     : translate,
        y      : 'godinu',
        yy     : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hr;

})));


/***/ }),
/* 150 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Hungarian [hu]
//! author : Adam Brunner : https://github.com/adambrunner

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');
function translate(number, withoutSuffix, key, isFuture) {
    var num = number;
    switch (key) {
        case 's':
            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';
        case 'm':
            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'mm':
            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');
        case 'h':
            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'hh':
            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');
        case 'd':
            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'dd':
            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');
        case 'M':
            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'MM':
            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');
        case 'y':
            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');
        case 'yy':
            return num + (isFuture || withoutSuffix ? ' év' : ' éve');
    }
    return '';
}
function week(isFuture) {
    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[this.day()] + '] LT[-kor]';
}

var hu = moment.defineLocale('hu', {
    months : 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),
    monthsShort : 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),
    weekdays : 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),
    weekdaysShort : 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),
    weekdaysMin : 'v_h_k_sze_cs_p_szo'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'YYYY.MM.DD.',
        LL : 'YYYY. MMMM D.',
        LLL : 'YYYY. MMMM D. H:mm',
        LLLL : 'YYYY. MMMM D., dddd H:mm'
    },
    meridiemParse: /de|du/i,
    isPM: function (input) {
        return input.charAt(1).toLowerCase() === 'u';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower === true ? 'de' : 'DE';
        } else {
            return isLower === true ? 'du' : 'DU';
        }
    },
    calendar : {
        sameDay : '[ma] LT[-kor]',
        nextDay : '[holnap] LT[-kor]',
        nextWeek : function () {
            return week.call(this, true);
        },
        lastDay : '[tegnap] LT[-kor]',
        lastWeek : function () {
            return week.call(this, false);
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s múlva',
        past : '%s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return hu;

})));


/***/ }),
/* 151 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Armenian [hy-am]
//! author : Armendarabyan : https://github.com/armendarabyan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var hyAm = moment.defineLocale('hy-am', {
    months : {
        format: 'հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի'.split('_'),
        standalone: 'հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր'.split('_')
    },
    monthsShort : 'հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ'.split('_'),
    weekdays : 'կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ'.split('_'),
    weekdaysShort : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    weekdaysMin : 'կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY թ.',
        LLL : 'D MMMM YYYY թ., HH:mm',
        LLLL : 'dddd, D MMMM YYYY թ., HH:mm'
    },
    calendar : {
        sameDay: '[այսօր] LT',
        nextDay: '[վաղը] LT',
        lastDay: '[երեկ] LT',
        nextWeek: function () {
            return 'dddd [օրը ժամը] LT';
        },
        lastWeek: function () {
            return '[անցած] dddd [օրը ժամը] LT';
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s հետո',
        past : '%s առաջ',
        s : 'մի քանի վայրկյան',
        m : 'րոպե',
        mm : '%d րոպե',
        h : 'ժամ',
        hh : '%d ժամ',
        d : 'օր',
        dd : '%d օր',
        M : 'ամիս',
        MM : '%d ամիս',
        y : 'տարի',
        yy : '%d տարի'
    },
    meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
    isPM: function (input) {
        return /^(ցերեկվա|երեկոյան)$/.test(input);
    },
    meridiem : function (hour) {
        if (hour < 4) {
            return 'գիշերվա';
        } else if (hour < 12) {
            return 'առավոտվա';
        } else if (hour < 17) {
            return 'ցերեկվա';
        } else {
            return 'երեկոյան';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'DDD':
            case 'w':
            case 'W':
            case 'DDDo':
                if (number === 1) {
                    return number + '-ին';
                }
                return number + '-րդ';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return hyAm;

})));


/***/ }),
/* 152 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Indonesian [id]
//! author : Mohammad Satrio Utomo : https://github.com/tyok
//! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var id = moment.defineLocale('id', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|siang|sore|malam/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'siang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sore' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'siang';
        } else if (hours < 19) {
            return 'sore';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Besok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kemarin pukul] LT',
        lastWeek : 'dddd [lalu pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lalu',
        s : 'beberapa detik',
        m : 'semenit',
        mm : '%d menit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return id;

})));


/***/ }),
/* 153 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Icelandic [is]
//! author : Hinrik Örn Sigurðsson : https://github.com/hinrik

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(n) {
    if (n % 100 === 11) {
        return true;
    } else if (n % 10 === 1) {
        return false;
    }
    return true;
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nokkrar sekúndur' : 'nokkrum sekúndum';
        case 'm':
            return withoutSuffix ? 'mínúta' : 'mínútu';
        case 'mm':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'mínútur' : 'mínútum');
            } else if (withoutSuffix) {
                return result + 'mínúta';
            }
            return result + 'mínútu';
        case 'hh':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'klukkustundir' : 'klukkustundum');
            }
            return result + 'klukkustund';
        case 'd':
            if (withoutSuffix) {
                return 'dagur';
            }
            return isFuture ? 'dag' : 'degi';
        case 'dd':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'dagar';
                }
                return result + (isFuture ? 'daga' : 'dögum');
            } else if (withoutSuffix) {
                return result + 'dagur';
            }
            return result + (isFuture ? 'dag' : 'degi');
        case 'M':
            if (withoutSuffix) {
                return 'mánuður';
            }
            return isFuture ? 'mánuð' : 'mánuði';
        case 'MM':
            if (plural(number)) {
                if (withoutSuffix) {
                    return result + 'mánuðir';
                }
                return result + (isFuture ? 'mánuði' : 'mánuðum');
            } else if (withoutSuffix) {
                return result + 'mánuður';
            }
            return result + (isFuture ? 'mánuð' : 'mánuði');
        case 'y':
            return withoutSuffix || isFuture ? 'ár' : 'ári';
        case 'yy':
            if (plural(number)) {
                return result + (withoutSuffix || isFuture ? 'ár' : 'árum');
            }
            return result + (withoutSuffix || isFuture ? 'ár' : 'ári');
    }
}

var is = moment.defineLocale('is', {
    months : 'janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des'.split('_'),
    weekdays : 'sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur'.split('_'),
    weekdaysShort : 'sun_mán_þri_mið_fim_fös_lau'.split('_'),
    weekdaysMin : 'Su_Má_Þr_Mi_Fi_Fö_La'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd, D. MMMM YYYY [kl.] H:mm'
    },
    calendar : {
        sameDay : '[í dag kl.] LT',
        nextDay : '[á morgun kl.] LT',
        nextWeek : 'dddd [kl.] LT',
        lastDay : '[í gær kl.] LT',
        lastWeek : '[síðasta] dddd [kl.] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'eftir %s',
        past : 'fyrir %s síðan',
        s : translate,
        m : translate,
        mm : translate,
        h : 'klukkustund',
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return is;

})));


/***/ }),
/* 154 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Italian [it]
//! author : Lorenzo : https://github.com/aliem
//! author: Mattia Larentis: https://github.com/nostalgiaz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var it = moment.defineLocale('it', {
    months : 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),
    monthsShort : 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),
    weekdays : 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),
    weekdaysShort : 'dom_lun_mar_mer_gio_ven_sab'.split('_'),
    weekdaysMin : 'do_lu_ma_me_gi_ve_sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Oggi alle] LT',
        nextDay: '[Domani alle] LT',
        nextWeek: 'dddd [alle] LT',
        lastDay: '[Ieri alle] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[la scorsa] dddd [alle] LT';
                default:
                    return '[lo scorso] dddd [alle] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : function (s) {
            return ((/^[0-9].+$/).test(s) ? 'tra' : 'in') + ' ' + s;
        },
        past : '%s fa',
        s : 'alcuni secondi',
        m : 'un minuto',
        mm : '%d minuti',
        h : 'un\'ora',
        hh : '%d ore',
        d : 'un giorno',
        dd : '%d giorni',
        M : 'un mese',
        MM : '%d mesi',
        y : 'un anno',
        yy : '%d anni'
    },
    dayOfMonthOrdinalParse : /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return it;

})));


/***/ }),
/* 155 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Japanese [ja]
//! author : LI Long : https://github.com/baryon

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ja = moment.defineLocale('ja', {
    months : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),
    weekdaysShort : '日_月_火_水_木_金_土'.split('_'),
    weekdaysMin : '日_月_火_水_木_金_土'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY年M月D日',
        LLL : 'YYYY年M月D日 HH:mm',
        LLLL : 'YYYY年M月D日 HH:mm dddd',
        l : 'YYYY/MM/DD',
        ll : 'YYYY年M月D日',
        lll : 'YYYY年M月D日 HH:mm',
        llll : 'YYYY年M月D日 HH:mm dddd'
    },
    meridiemParse: /午前|午後/i,
    isPM : function (input) {
        return input === '午後';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return '午前';
        } else {
            return '午後';
        }
    },
    calendar : {
        sameDay : '[今日] LT',
        nextDay : '[明日] LT',
        nextWeek : '[来週]dddd LT',
        lastDay : '[昨日] LT',
        lastWeek : '[前週]dddd LT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse : /\d{1,2}日/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s後',
        past : '%s前',
        s : '数秒',
        m : '1分',
        mm : '%d分',
        h : '1時間',
        hh : '%d時間',
        d : '1日',
        dd : '%d日',
        M : '1ヶ月',
        MM : '%dヶ月',
        y : '1年',
        yy : '%d年'
    }
});

return ja;

})));


/***/ }),
/* 156 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Javanese [jv]
//! author : Rony Lantip : https://github.com/lantip
//! reference: http://jv.wikipedia.org/wiki/Basa_Jawa

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var jv = moment.defineLocale('jv', {
    months : 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember'.split('_'),
    monthsShort : 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des'.split('_'),
    weekdays : 'Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu'.split('_'),
    weekdaysShort : 'Min_Sen_Sel_Reb_Kem_Jem_Sep'.split('_'),
    weekdaysMin : 'Mg_Sn_Sl_Rb_Km_Jm_Sp'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /enjing|siyang|sonten|ndalu/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'enjing') {
            return hour;
        } else if (meridiem === 'siyang') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'sonten' || meridiem === 'ndalu') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'enjing';
        } else if (hours < 15) {
            return 'siyang';
        } else if (hours < 19) {
            return 'sonten';
        } else {
            return 'ndalu';
        }
    },
    calendar : {
        sameDay : '[Dinten puniko pukul] LT',
        nextDay : '[Mbenjang pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kala wingi pukul] LT',
        lastWeek : 'dddd [kepengker pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'wonten ing %s',
        past : '%s ingkang kepengker',
        s : 'sawetawis detik',
        m : 'setunggal menit',
        mm : '%d menit',
        h : 'setunggal jam',
        hh : '%d jam',
        d : 'sedinten',
        dd : '%d dinten',
        M : 'sewulan',
        MM : '%d wulan',
        y : 'setaun',
        yy : '%d taun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return jv;

})));


/***/ }),
/* 157 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Georgian [ka]
//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ka = moment.defineLocale('ka', {
    months : {
        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_'),
        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_')
    },
    monthsShort : 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),
    weekdays : {
        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),
        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),
        isFormat: /(წინა|შემდეგ)/
    },
    weekdaysShort : 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),
    weekdaysMin : 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[დღეს] LT[-ზე]',
        nextDay : '[ხვალ] LT[-ზე]',
        lastDay : '[გუშინ] LT[-ზე]',
        nextWeek : '[შემდეგ] dddd LT[-ზე]',
        lastWeek : '[წინა] dddd LT-ზე',
        sameElse : 'L'
    },
    relativeTime : {
        future : function (s) {
            return (/(წამი|წუთი|საათი|წელი)/).test(s) ?
                s.replace(/ი$/, 'ში') :
                s + 'ში';
        },
        past : function (s) {
            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(s)) {
                return s.replace(/(ი|ე)$/, 'ის უკან');
            }
            if ((/წელი/).test(s)) {
                return s.replace(/წელი$/, 'წლის უკან');
            }
        },
        s : 'რამდენიმე წამი',
        m : 'წუთი',
        mm : '%d წუთი',
        h : 'საათი',
        hh : '%d საათი',
        d : 'დღე',
        dd : '%d დღე',
        M : 'თვე',
        MM : '%d თვე',
        y : 'წელი',
        yy : '%d წელი'
    },
    dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
    ordinal : function (number) {
        if (number === 0) {
            return number;
        }
        if (number === 1) {
            return number + '-ლი';
        }
        if ((number < 20) || (number <= 100 && (number % 20 === 0)) || (number % 100 === 0)) {
            return 'მე-' + number;
        }
        return number + '-ე';
    },
    week : {
        dow : 1,
        doy : 7
    }
});

return ka;

})));


/***/ }),
/* 158 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kazakh [kk]
//! authors : Nurlan Rakhimzhanov : https://github.com/nurlan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    0: '-ші',
    1: '-ші',
    2: '-ші',
    3: '-ші',
    4: '-ші',
    5: '-ші',
    6: '-шы',
    7: '-ші',
    8: '-ші',
    9: '-шы',
    10: '-шы',
    20: '-шы',
    30: '-шы',
    40: '-шы',
    50: '-ші',
    60: '-шы',
    70: '-ші',
    80: '-ші',
    90: '-шы',
    100: '-ші'
};

var kk = moment.defineLocale('kk', {
    months : 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),
    monthsShort : 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),
    weekdays : 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),
    weekdaysShort : 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),
    weekdaysMin : 'жк_дй_сй_ср_бй_жм_сн'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгін сағат] LT',
        nextDay : '[Ертең сағат] LT',
        nextWeek : 'dddd [сағат] LT',
        lastDay : '[Кеше сағат] LT',
        lastWeek : '[Өткен аптаның] dddd [сағат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ішінде',
        past : '%s бұрын',
        s : 'бірнеше секунд',
        m : 'бір минут',
        mm : '%d минут',
        h : 'бір сағат',
        hh : '%d сағат',
        d : 'бір күн',
        dd : '%d күн',
        M : 'бір ай',
        MM : '%d ай',
        y : 'бір жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return kk;

})));


/***/ }),
/* 159 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Cambodian [km]
//! author : Kruy Vanna : https://github.com/kruyvanna

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var km = moment.defineLocale('km', {
    months: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    monthsShort: 'មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ'.split('_'),
    weekdays: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysShort: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    weekdaysMin: 'អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS : 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd, D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ថ្ងៃនេះ ម៉ោង] LT',
        nextDay: '[ស្អែក ម៉ោង] LT',
        nextWeek: 'dddd [ម៉ោង] LT',
        lastDay: '[ម្សិលមិញ ម៉ោង] LT',
        lastWeek: 'dddd [សប្តាហ៍មុន] [ម៉ោង] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: '%sទៀត',
        past: '%sមុន',
        s: 'ប៉ុន្មានវិនាទី',
        m: 'មួយនាទី',
        mm: '%d នាទី',
        h: 'មួយម៉ោង',
        hh: '%d ម៉ោង',
        d: 'មួយថ្ងៃ',
        dd: '%d ថ្ងៃ',
        M: 'មួយខែ',
        MM: '%d ខែ',
        y: 'មួយឆ្នាំ',
        yy: '%d ឆ្នាំ'
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return km;

})));


/***/ }),
/* 160 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kannada [kn]
//! author : Rajeev Naik : https://github.com/rajeevnaikte

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '೧',
    '2': '೨',
    '3': '೩',
    '4': '೪',
    '5': '೫',
    '6': '೬',
    '7': '೭',
    '8': '೮',
    '9': '೯',
    '0': '೦'
};
var numberMap = {
    '೧': '1',
    '೨': '2',
    '೩': '3',
    '೪': '4',
    '೫': '5',
    '೬': '6',
    '೭': '7',
    '೮': '8',
    '೯': '9',
    '೦': '0'
};

var kn = moment.defineLocale('kn', {
    months : 'ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್'.split('_'),
    monthsShort : 'ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬ_ಅಕ್ಟೋಬ_ನವೆಂಬ_ಡಿಸೆಂಬ'.split('_'),
    monthsParseExact: true,
    weekdays : 'ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ'.split('_'),
    weekdaysShort : 'ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ'.split('_'),
    weekdaysMin : 'ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[ಇಂದು] LT',
        nextDay : '[ನಾಳೆ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ನಿನ್ನೆ] LT',
        lastWeek : '[ಕೊನೆಯ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ನಂತರ',
        past : '%s ಹಿಂದೆ',
        s : 'ಕೆಲವು ಕ್ಷಣಗಳು',
        m : 'ಒಂದು ನಿಮಿಷ',
        mm : '%d ನಿಮಿಷ',
        h : 'ಒಂದು ಗಂಟೆ',
        hh : '%d ಗಂಟೆ',
        d : 'ಒಂದು ದಿನ',
        dd : '%d ದಿನ',
        M : 'ಒಂದು ತಿಂಗಳು',
        MM : '%d ತಿಂಗಳು',
        y : 'ಒಂದು ವರ್ಷ',
        yy : '%d ವರ್ಷ'
    },
    preparse: function (string) {
        return string.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ರಾತ್ರಿ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ಬೆಳಿಗ್ಗೆ') {
            return hour;
        } else if (meridiem === 'ಮಧ್ಯಾಹ್ನ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ಸಂಜೆ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ರಾತ್ರಿ';
        } else if (hour < 10) {
            return 'ಬೆಳಿಗ್ಗೆ';
        } else if (hour < 17) {
            return 'ಮಧ್ಯಾಹ್ನ';
        } else if (hour < 20) {
            return 'ಸಂಜೆ';
        } else {
            return 'ರಾತ್ರಿ';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
    ordinal : function (number) {
        return number + 'ನೇ';
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return kn;

})));


/***/ }),
/* 161 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Korean [ko]
//! author : Kyungwook, Park : https://github.com/kyungw00k
//! author : Jeeeyul Lee <jeeeyul@gmail.com>

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ko = moment.defineLocale('ko', {
    months : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    monthsShort : '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),
    weekdays : '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),
    weekdaysShort : '일_월_화_수_목_금_토'.split('_'),
    weekdaysMin : '일_월_화_수_목_금_토'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'YYYY.MM.DD',
        LL : 'YYYY년 MMMM D일',
        LLL : 'YYYY년 MMMM D일 A h:mm',
        LLLL : 'YYYY년 MMMM D일 dddd A h:mm',
        l : 'YYYY.MM.DD',
        ll : 'YYYY년 MMMM D일',
        lll : 'YYYY년 MMMM D일 A h:mm',
        llll : 'YYYY년 MMMM D일 dddd A h:mm'
    },
    calendar : {
        sameDay : '오늘 LT',
        nextDay : '내일 LT',
        nextWeek : 'dddd LT',
        lastDay : '어제 LT',
        lastWeek : '지난주 dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s 후',
        past : '%s 전',
        s : '몇 초',
        ss : '%d초',
        m : '1분',
        mm : '%d분',
        h : '한 시간',
        hh : '%d시간',
        d : '하루',
        dd : '%d일',
        M : '한 달',
        MM : '%d달',
        y : '일 년',
        yy : '%d년'
    },
    dayOfMonthOrdinalParse : /\d{1,2}(일|월|주)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '일';
            case 'M':
                return number + '월';
            case 'w':
            case 'W':
                return number + '주';
            default:
                return number;
        }
    },
    meridiemParse : /오전|오후/,
    isPM : function (token) {
        return token === '오후';
    },
    meridiem : function (hour, minute, isUpper) {
        return hour < 12 ? '오전' : '오후';
    }
});

return ko;

})));


/***/ }),
/* 162 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Kyrgyz [ky]
//! author : Chyngyz Arystan uulu : https://github.com/chyngyz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var suffixes = {
    0: '-чү',
    1: '-чи',
    2: '-чи',
    3: '-чү',
    4: '-чү',
    5: '-чи',
    6: '-чы',
    7: '-чи',
    8: '-чи',
    9: '-чу',
    10: '-чу',
    20: '-чы',
    30: '-чу',
    40: '-чы',
    50: '-чү',
    60: '-чы',
    70: '-чи',
    80: '-чи',
    90: '-чу',
    100: '-чү'
};

var ky = moment.defineLocale('ky', {
    months : 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_'),
    monthsShort : 'янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби'.split('_'),
    weekdaysShort : 'Жек_Дүй_Шей_Шар_Бей_Жум_Ише'.split('_'),
    weekdaysMin : 'Жк_Дй_Шй_Шр_Бй_Жм_Иш'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Бүгүн саат] LT',
        nextDay : '[Эртең саат] LT',
        nextWeek : 'dddd [саат] LT',
        lastDay : '[Кече саат] LT',
        lastWeek : '[Өткен аптанын] dddd [күнү] [саат] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ичинде',
        past : '%s мурун',
        s : 'бирнече секунд',
        m : 'бир мүнөт',
        mm : '%d мүнөт',
        h : 'бир саат',
        hh : '%d саат',
        d : 'бир күн',
        dd : '%d күн',
        M : 'бир ай',
        MM : '%d ай',
        y : 'бир жыл',
        yy : '%d жыл'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
    ordinal : function (number) {
        var a = number % 10,
            b = number >= 100 ? 100 : null;
        return number + (suffixes[number] || suffixes[a] || suffixes[b]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ky;

})));


/***/ }),
/* 163 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Luxembourgish [lb]
//! author : mweimerskirch : https://github.com/mweimerskirch
//! author : David Raison : https://github.com/kwisatz

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        'm': ['eng Minutt', 'enger Minutt'],
        'h': ['eng Stonn', 'enger Stonn'],
        'd': ['een Dag', 'engem Dag'],
        'M': ['ee Mount', 'engem Mount'],
        'y': ['ee Joer', 'engem Joer']
    };
    return withoutSuffix ? format[key][0] : format[key][1];
}
function processFutureTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'a ' + string;
    }
    return 'an ' + string;
}
function processPastTime(string) {
    var number = string.substr(0, string.indexOf(' '));
    if (eifelerRegelAppliesToNumber(number)) {
        return 'viru ' + string;
    }
    return 'virun ' + string;
}
/**
 * Returns true if the word before the given number loses the '-n' ending.
 * e.g. 'an 10 Deeg' but 'a 5 Deeg'
 *
 * @param number {integer}
 * @returns {boolean}
 */
function eifelerRegelAppliesToNumber(number) {
    number = parseInt(number, 10);
    if (isNaN(number)) {
        return false;
    }
    if (number < 0) {
        // Negative Number --> always true
        return true;
    } else if (number < 10) {
        // Only 1 digit
        if (4 <= number && number <= 7) {
            return true;
        }
        return false;
    } else if (number < 100) {
        // 2 digits
        var lastDigit = number % 10, firstDigit = number / 10;
        if (lastDigit === 0) {
            return eifelerRegelAppliesToNumber(firstDigit);
        }
        return eifelerRegelAppliesToNumber(lastDigit);
    } else if (number < 10000) {
        // 3 or 4 digits --> recursively check first digit
        while (number >= 10) {
            number = number / 10;
        }
        return eifelerRegelAppliesToNumber(number);
    } else {
        // Anything larger than 4 digits: recursively check first n-3 digits
        number = number / 1000;
        return eifelerRegelAppliesToNumber(number);
    }
}

var lb = moment.defineLocale('lb', {
    months: 'Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),
    monthsShort: 'Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.'.split('_'),
    monthsParseExact : true,
    weekdays: 'Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg'.split('_'),
    weekdaysShort: 'So._Mé._Dë._Më._Do._Fr._Sa.'.split('_'),
    weekdaysMin: 'So_Mé_Dë_Më_Do_Fr_Sa'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm [Auer]',
        LTS: 'H:mm:ss [Auer]',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm [Auer]',
        LLLL: 'dddd, D. MMMM YYYY H:mm [Auer]'
    },
    calendar: {
        sameDay: '[Haut um] LT',
        sameElse: 'L',
        nextDay: '[Muer um] LT',
        nextWeek: 'dddd [um] LT',
        lastDay: '[Gëschter um] LT',
        lastWeek: function () {
            // Different date string for 'Dënschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
            switch (this.day()) {
                case 2:
                case 4:
                    return '[Leschten] dddd [um] LT';
                default:
                    return '[Leschte] dddd [um] LT';
            }
        }
    },
    relativeTime : {
        future : processFutureTime,
        past : processPastTime,
        s : 'e puer Sekonnen',
        m : processRelativeTime,
        mm : '%d Minutten',
        h : processRelativeTime,
        hh : '%d Stonnen',
        d : processRelativeTime,
        dd : '%d Deeg',
        M : processRelativeTime,
        MM : '%d Méint',
        y : processRelativeTime,
        yy : '%d Joer'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal: '%d.',
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lb;

})));


/***/ }),
/* 164 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lao [lo]
//! author : Ryan Hart : https://github.com/ryanhart2

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var lo = moment.defineLocale('lo', {
    months : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    monthsShort : 'ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ'.split('_'),
    weekdays : 'ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysShort : 'ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ'.split('_'),
    weekdaysMin : 'ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'ວັນdddd D MMMM YYYY HH:mm'
    },
    meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
    isPM: function (input) {
        return input === 'ຕອນແລງ';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ຕອນເຊົ້າ';
        } else {
            return 'ຕອນແລງ';
        }
    },
    calendar : {
        sameDay : '[ມື້ນີ້ເວລາ] LT',
        nextDay : '[ມື້ອື່ນເວລາ] LT',
        nextWeek : '[ວັນ]dddd[ໜ້າເວລາ] LT',
        lastDay : '[ມື້ວານນີ້ເວລາ] LT',
        lastWeek : '[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ອີກ %s',
        past : '%sຜ່ານມາ',
        s : 'ບໍ່ເທົ່າໃດວິນາທີ',
        m : '1 ນາທີ',
        mm : '%d ນາທີ',
        h : '1 ຊົ່ວໂມງ',
        hh : '%d ຊົ່ວໂມງ',
        d : '1 ມື້',
        dd : '%d ມື້',
        M : '1 ເດືອນ',
        MM : '%d ເດືອນ',
        y : '1 ປີ',
        yy : '%d ປີ'
    },
    dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
    ordinal : function (number) {
        return 'ທີ່' + number;
    }
});

return lo;

})));


/***/ }),
/* 165 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Lithuanian [lt]
//! author : Mindaugas Mozūras : https://github.com/mmozuras

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var units = {
    'm' : 'minutė_minutės_minutę',
    'mm': 'minutės_minučių_minutes',
    'h' : 'valanda_valandos_valandą',
    'hh': 'valandos_valandų_valandas',
    'd' : 'diena_dienos_dieną',
    'dd': 'dienos_dienų_dienas',
    'M' : 'mėnuo_mėnesio_mėnesį',
    'MM': 'mėnesiai_mėnesių_mėnesius',
    'y' : 'metai_metų_metus',
    'yy': 'metai_metų_metus'
};
function translateSeconds(number, withoutSuffix, key, isFuture) {
    if (withoutSuffix) {
        return 'kelios sekundės';
    } else {
        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';
    }
}
function translateSingular(number, withoutSuffix, key, isFuture) {
    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);
}
function special(number) {
    return number % 10 === 0 || (number > 10 && number < 20);
}
function forms(key) {
    return units[key].split('_');
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    if (number === 1) {
        return result + translateSingular(number, withoutSuffix, key[0], isFuture);
    } else if (withoutSuffix) {
        return result + (special(number) ? forms(key)[1] : forms(key)[0]);
    } else {
        if (isFuture) {
            return result + forms(key)[1];
        } else {
            return result + (special(number) ? forms(key)[1] : forms(key)[2]);
        }
    }
}
var lt = moment.defineLocale('lt', {
    months : {
        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),
        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),
        isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
    },
    monthsShort : 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),
    weekdays : {
        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),
        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),
        isFormat: /dddd HH:mm/
    },
    weekdaysShort : 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),
    weekdaysMin : 'S_P_A_T_K_Pn_Š'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'YYYY [m.] MMMM D [d.]',
        LLL : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        LLLL : 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',
        l : 'YYYY-MM-DD',
        ll : 'YYYY [m.] MMMM D [d.]',
        lll : 'YYYY [m.] MMMM D [d.], HH:mm [val.]',
        llll : 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'
    },
    calendar : {
        sameDay : '[Šiandien] LT',
        nextDay : '[Rytoj] LT',
        nextWeek : 'dddd LT',
        lastDay : '[Vakar] LT',
        lastWeek : '[Praėjusį] dddd LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'po %s',
        past : 'prieš %s',
        s : translateSeconds,
        m : translateSingular,
        mm : translate,
        h : translateSingular,
        hh : translate,
        d : translateSingular,
        dd : translate,
        M : translateSingular,
        MM : translate,
        y : translateSingular,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}-oji/,
    ordinal : function (number) {
        return number + '-oji';
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lt;

})));


/***/ }),
/* 166 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Latvian [lv]
//! author : Kristaps Karlsons : https://github.com/skakri
//! author : Jānis Elmeris : https://github.com/JanisE

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var units = {
    'm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'mm': 'minūtes_minūtēm_minūte_minūtes'.split('_'),
    'h': 'stundas_stundām_stunda_stundas'.split('_'),
    'hh': 'stundas_stundām_stunda_stundas'.split('_'),
    'd': 'dienas_dienām_diena_dienas'.split('_'),
    'dd': 'dienas_dienām_diena_dienas'.split('_'),
    'M': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'MM': 'mēneša_mēnešiem_mēnesis_mēneši'.split('_'),
    'y': 'gada_gadiem_gads_gadi'.split('_'),
    'yy': 'gada_gadiem_gads_gadi'.split('_')
};
/**
 * @param withoutSuffix boolean true = a length of time; false = before/after a period of time.
 */
function format(forms, number, withoutSuffix) {
    if (withoutSuffix) {
        // E.g. "21 minūte", "3 minūtes".
        return number % 10 === 1 && number % 100 !== 11 ? forms[2] : forms[3];
    } else {
        // E.g. "21 minūtes" as in "pēc 21 minūtes".
        // E.g. "3 minūtēm" as in "pēc 3 minūtēm".
        return number % 10 === 1 && number % 100 !== 11 ? forms[0] : forms[1];
    }
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    return number + ' ' + format(units[key], number, withoutSuffix);
}
function relativeTimeWithSingular(number, withoutSuffix, key) {
    return format(units[key], number, withoutSuffix);
}
function relativeSeconds(number, withoutSuffix) {
    return withoutSuffix ? 'dažas sekundes' : 'dažām sekundēm';
}

var lv = moment.defineLocale('lv', {
    months : 'janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena'.split('_'),
    weekdaysShort : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysMin : 'Sv_P_O_T_C_Pk_S'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY.',
        LL : 'YYYY. [gada] D. MMMM',
        LLL : 'YYYY. [gada] D. MMMM, HH:mm',
        LLLL : 'YYYY. [gada] D. MMMM, dddd, HH:mm'
    },
    calendar : {
        sameDay : '[Šodien pulksten] LT',
        nextDay : '[Rīt pulksten] LT',
        nextWeek : 'dddd [pulksten] LT',
        lastDay : '[Vakar pulksten] LT',
        lastWeek : '[Pagājušā] dddd [pulksten] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'pēc %s',
        past : 'pirms %s',
        s : relativeSeconds,
        m : relativeTimeWithSingular,
        mm : relativeTimeWithPlural,
        h : relativeTimeWithSingular,
        hh : relativeTimeWithPlural,
        d : relativeTimeWithSingular,
        dd : relativeTimeWithPlural,
        M : relativeTimeWithSingular,
        MM : relativeTimeWithPlural,
        y : relativeTimeWithSingular,
        yy : relativeTimeWithPlural
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return lv;

})));


/***/ }),
/* 167 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Montenegrin [me]
//! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['jedan minut', 'jednog minuta'],
        mm: ['minut', 'minuta', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mjesec', 'mjeseca', 'mjeseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var me = moment.defineLocale('me', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact : true,
    weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sjutra u] LT',

        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedjelju] [u] LT';
                case 3:
                    return '[u] [srijedu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedjelje] [u] LT',
                '[prošlog] [ponedjeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srijede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'prije %s',
        s      : 'nekoliko sekundi',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mjesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return me;

})));


/***/ }),
/* 168 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Maori [mi]
//! author : John Corrigan <robbiecloset@gmail.com> : https://github.com/johnideal

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var mi = moment.defineLocale('mi', {
    months: 'Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea'.split('_'),
    monthsShort: 'Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki'.split('_'),
    monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
    monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
    weekdays: 'Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei'.split('_'),
    weekdaysShort: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    weekdaysMin: 'Ta_Ma_Tū_We_Tāi_Pa_Hā'.split('_'),
    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY [i] HH:mm',
        LLLL: 'dddd, D MMMM YYYY [i] HH:mm'
    },
    calendar: {
        sameDay: '[i teie mahana, i] LT',
        nextDay: '[apopo i] LT',
        nextWeek: 'dddd [i] LT',
        lastDay: '[inanahi i] LT',
        lastWeek: 'dddd [whakamutunga i] LT',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'i roto i %s',
        past: '%s i mua',
        s: 'te hēkona ruarua',
        m: 'he meneti',
        mm: '%d meneti',
        h: 'te haora',
        hh: '%d haora',
        d: 'he ra',
        dd: '%d ra',
        M: 'he marama',
        MM: '%d marama',
        y: 'he tau',
        yy: '%d tau'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal: '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return mi;

})));


/***/ }),
/* 169 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Macedonian [mk]
//! author : Borislav Mickov : https://github.com/B0k0

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var mk = moment.defineLocale('mk', {
    months : 'јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември'.split('_'),
    monthsShort : 'јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек'.split('_'),
    weekdays : 'недела_понеделник_вторник_среда_четврток_петок_сабота'.split('_'),
    weekdaysShort : 'нед_пон_вто_сре_чет_пет_саб'.split('_'),
    weekdaysMin : 'нe_пo_вт_ср_че_пе_сa'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'D.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay : '[Денес во] LT',
        nextDay : '[Утре во] LT',
        nextWeek : '[Во] dddd [во] LT',
        lastDay : '[Вчера во] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 6:
                    return '[Изминатата] dddd [во] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[Изминатиот] dddd [во] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'после %s',
        past : 'пред %s',
        s : 'неколку секунди',
        m : 'минута',
        mm : '%d минути',
        h : 'час',
        hh : '%d часа',
        d : 'ден',
        dd : '%d дена',
        M : 'месец',
        MM : '%d месеци',
        y : 'година',
        yy : '%d години'
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
    ordinal : function (number) {
        var lastDigit = number % 10,
            last2Digits = number % 100;
        if (number === 0) {
            return number + '-ев';
        } else if (last2Digits === 0) {
            return number + '-ен';
        } else if (last2Digits > 10 && last2Digits < 20) {
            return number + '-ти';
        } else if (lastDigit === 1) {
            return number + '-ви';
        } else if (lastDigit === 2) {
            return number + '-ри';
        } else if (lastDigit === 7 || lastDigit === 8) {
            return number + '-ми';
        } else {
            return number + '-ти';
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return mk;

})));


/***/ }),
/* 170 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malayalam [ml]
//! author : Floyd Pink : https://github.com/floydpink

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ml = moment.defineLocale('ml', {
    months : 'ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ'.split('_'),
    monthsShort : 'ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച'.split('_'),
    weekdaysShort : 'ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി'.split('_'),
    weekdaysMin : 'ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm -നു',
        LTS : 'A h:mm:ss -നു',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm -നു',
        LLLL : 'dddd, D MMMM YYYY, A h:mm -നു'
    },
    calendar : {
        sameDay : '[ഇന്ന്] LT',
        nextDay : '[നാളെ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ഇന്നലെ] LT',
        lastWeek : '[കഴിഞ്ഞ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s കഴിഞ്ഞ്',
        past : '%s മുൻപ്',
        s : 'അൽപ നിമിഷങ്ങൾ',
        m : 'ഒരു മിനിറ്റ്',
        mm : '%d മിനിറ്റ്',
        h : 'ഒരു മണിക്കൂർ',
        hh : '%d മണിക്കൂർ',
        d : 'ഒരു ദിവസം',
        dd : '%d ദിവസം',
        M : 'ഒരു മാസം',
        MM : '%d മാസം',
        y : 'ഒരു വർഷം',
        yy : '%d വർഷം'
    },
    meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if ((meridiem === 'രാത്രി' && hour >= 4) ||
                meridiem === 'ഉച്ച കഴിഞ്ഞ്' ||
                meridiem === 'വൈകുന്നേരം') {
            return hour + 12;
        } else {
            return hour;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'രാത്രി';
        } else if (hour < 12) {
            return 'രാവിലെ';
        } else if (hour < 17) {
            return 'ഉച്ച കഴിഞ്ഞ്';
        } else if (hour < 20) {
            return 'വൈകുന്നേരം';
        } else {
            return 'രാത്രി';
        }
    }
});

return ml;

})));


/***/ }),
/* 171 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Marathi [mr]
//! author : Harshad Kale : https://github.com/kalehv
//! author : Vivek Athalye : https://github.com/vnathalye

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

function relativeTimeMr(number, withoutSuffix, string, isFuture)
{
    var output = '';
    if (withoutSuffix) {
        switch (string) {
            case 's': output = 'काही सेकंद'; break;
            case 'm': output = 'एक मिनिट'; break;
            case 'mm': output = '%d मिनिटे'; break;
            case 'h': output = 'एक तास'; break;
            case 'hh': output = '%d तास'; break;
            case 'd': output = 'एक दिवस'; break;
            case 'dd': output = '%d दिवस'; break;
            case 'M': output = 'एक महिना'; break;
            case 'MM': output = '%d महिने'; break;
            case 'y': output = 'एक वर्ष'; break;
            case 'yy': output = '%d वर्षे'; break;
        }
    }
    else {
        switch (string) {
            case 's': output = 'काही सेकंदां'; break;
            case 'm': output = 'एका मिनिटा'; break;
            case 'mm': output = '%d मिनिटां'; break;
            case 'h': output = 'एका तासा'; break;
            case 'hh': output = '%d तासां'; break;
            case 'd': output = 'एका दिवसा'; break;
            case 'dd': output = '%d दिवसां'; break;
            case 'M': output = 'एका महिन्या'; break;
            case 'MM': output = '%d महिन्यां'; break;
            case 'y': output = 'एका वर्षा'; break;
            case 'yy': output = '%d वर्षां'; break;
        }
    }
    return output.replace(/%d/i, number);
}

var mr = moment.defineLocale('mr', {
    months : 'जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर'.split('_'),
    monthsShort: 'जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.'.split('_'),
    monthsParseExact : true,
    weekdays : 'रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),
    weekdaysShort : 'रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि'.split('_'),
    weekdaysMin : 'र_सो_मं_बु_गु_शु_श'.split('_'),
    longDateFormat : {
        LT : 'A h:mm वाजता',
        LTS : 'A h:mm:ss वाजता',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm वाजता',
        LLLL : 'dddd, D MMMM YYYY, A h:mm वाजता'
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[उद्या] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[काल] LT',
        lastWeek: '[मागील] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future: '%sमध्ये',
        past: '%sपूर्वी',
        s: relativeTimeMr,
        m: relativeTimeMr,
        mm: relativeTimeMr,
        h: relativeTimeMr,
        hh: relativeTimeMr,
        d: relativeTimeMr,
        dd: relativeTimeMr,
        M: relativeTimeMr,
        MM: relativeTimeMr,
        y: relativeTimeMr,
        yy: relativeTimeMr
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'रात्री') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'सकाळी') {
            return hour;
        } else if (meridiem === 'दुपारी') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'सायंकाळी') {
            return hour + 12;
        }
    },
    meridiem: function (hour, minute, isLower) {
        if (hour < 4) {
            return 'रात्री';
        } else if (hour < 10) {
            return 'सकाळी';
        } else if (hour < 17) {
            return 'दुपारी';
        } else if (hour < 20) {
            return 'सायंकाळी';
        } else {
            return 'रात्री';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return mr;

})));


/***/ }),
/* 172 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms-my]
//! note : DEPRECATED, the correct one is [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var msMy = moment.defineLocale('ms-my', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return msMy;

})));


/***/ }),
/* 173 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Malay [ms]
//! author : Weldan Jamili : https://github.com/weldan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ms = moment.defineLocale('ms', {
    months : 'Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis'.split('_'),
    weekdays : 'Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu'.split('_'),
    weekdaysShort : 'Ahd_Isn_Sel_Rab_Kha_Jum_Sab'.split('_'),
    weekdaysMin : 'Ah_Is_Sl_Rb_Km_Jm_Sb'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [pukul] HH.mm',
        LLLL : 'dddd, D MMMM YYYY [pukul] HH.mm'
    },
    meridiemParse: /pagi|tengahari|petang|malam/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'pagi') {
            return hour;
        } else if (meridiem === 'tengahari') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'petang' || meridiem === 'malam') {
            return hour + 12;
        }
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'pagi';
        } else if (hours < 15) {
            return 'tengahari';
        } else if (hours < 19) {
            return 'petang';
        } else {
            return 'malam';
        }
    },
    calendar : {
        sameDay : '[Hari ini pukul] LT',
        nextDay : '[Esok pukul] LT',
        nextWeek : 'dddd [pukul] LT',
        lastDay : '[Kelmarin pukul] LT',
        lastWeek : 'dddd [lepas pukul] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'dalam %s',
        past : '%s yang lepas',
        s : 'beberapa saat',
        m : 'seminit',
        mm : '%d minit',
        h : 'sejam',
        hh : '%d jam',
        d : 'sehari',
        dd : '%d hari',
        M : 'sebulan',
        MM : '%d bulan',
        y : 'setahun',
        yy : '%d tahun'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ms;

})));


/***/ }),
/* 174 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Burmese [my]
//! author : Squar team, mysquar.com
//! author : David Rossellat : https://github.com/gholadr
//! author : Tin Aung Lin : https://github.com/thanyawzinmin

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '၁',
    '2': '၂',
    '3': '၃',
    '4': '၄',
    '5': '၅',
    '6': '၆',
    '7': '၇',
    '8': '၈',
    '9': '၉',
    '0': '၀'
};
var numberMap = {
    '၁': '1',
    '၂': '2',
    '၃': '3',
    '၄': '4',
    '၅': '5',
    '၆': '6',
    '၇': '7',
    '၈': '8',
    '၉': '9',
    '၀': '0'
};

var my = moment.defineLocale('my', {
    months: 'ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ'.split('_'),
    monthsShort: 'ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ'.split('_'),
    weekdays: 'တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ'.split('_'),
    weekdaysShort: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),
    weekdaysMin: 'နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ'.split('_'),

    longDateFormat: {
        LT: 'HH:mm',
        LTS: 'HH:mm:ss',
        L: 'DD/MM/YYYY',
        LL: 'D MMMM YYYY',
        LLL: 'D MMMM YYYY HH:mm',
        LLLL: 'dddd D MMMM YYYY HH:mm'
    },
    calendar: {
        sameDay: '[ယနေ.] LT [မှာ]',
        nextDay: '[မနက်ဖြန်] LT [မှာ]',
        nextWeek: 'dddd LT [မှာ]',
        lastDay: '[မနေ.က] LT [မှာ]',
        lastWeek: '[ပြီးခဲ့သော] dddd LT [မှာ]',
        sameElse: 'L'
    },
    relativeTime: {
        future: 'လာမည့် %s မှာ',
        past: 'လွန်ခဲ့သော %s က',
        s: 'စက္ကန်.အနည်းငယ်',
        m: 'တစ်မိနစ်',
        mm: '%d မိနစ်',
        h: 'တစ်နာရီ',
        hh: '%d နာရီ',
        d: 'တစ်ရက်',
        dd: '%d ရက်',
        M: 'တစ်လ',
        MM: '%d လ',
        y: 'တစ်နှစ်',
        yy: '%d နှစ်'
    },
    preparse: function (string) {
        return string.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    week: {
        dow: 1, // Monday is the first day of the week.
        doy: 4 // The week that contains Jan 1st is the first week of the year.
    }
});

return my;

})));


/***/ }),
/* 175 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Norwegian Bokmål [nb]
//! authors : Espen Hovlandsdal : https://github.com/rexxars
//!           Sigurd Gartmann : https://github.com/sigurdga

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var nb = moment.defineLocale('nb', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),
    monthsParseExact : true,
    weekdays : 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),
    weekdaysShort : 'sø._ma._ti._on._to._fr._lø.'.split('_'),
    weekdaysMin : 'sø_ma_ti_on_to_fr_lø'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[i dag kl.] LT',
        nextDay: '[i morgen kl.] LT',
        nextWeek: 'dddd [kl.] LT',
        lastDay: '[i går kl.] LT',
        lastWeek: '[forrige] dddd [kl.] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s siden',
        s : 'noen sekunder',
        m : 'ett minutt',
        mm : '%d minutter',
        h : 'en time',
        hh : '%d timer',
        d : 'en dag',
        dd : '%d dager',
        M : 'en måned',
        MM : '%d måneder',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nb;

})));


/***/ }),
/* 176 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nepalese [ne]
//! author : suvash : https://github.com/suvash

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '१',
    '2': '२',
    '3': '३',
    '4': '४',
    '5': '५',
    '6': '६',
    '7': '७',
    '8': '८',
    '9': '९',
    '0': '०'
};
var numberMap = {
    '१': '1',
    '२': '2',
    '३': '3',
    '४': '4',
    '५': '5',
    '६': '6',
    '७': '7',
    '८': '8',
    '९': '9',
    '०': '0'
};

var ne = moment.defineLocale('ne', {
    months : 'जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर'.split('_'),
    monthsShort : 'जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.'.split('_'),
    monthsParseExact : true,
    weekdays : 'आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार'.split('_'),
    weekdaysShort : 'आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.'.split('_'),
    weekdaysMin : 'आ._सो._मं._बु._बि._शु._श.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'Aको h:mm बजे',
        LTS : 'Aको h:mm:ss बजे',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, Aको h:mm बजे',
        LLLL : 'dddd, D MMMM YYYY, Aको h:mm बजे'
    },
    preparse: function (string) {
        return string.replace(/[१२३४५६७८९०]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'राति') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'बिहान') {
            return hour;
        } else if (meridiem === 'दिउँसो') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'साँझ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 3) {
            return 'राति';
        } else if (hour < 12) {
            return 'बिहान';
        } else if (hour < 16) {
            return 'दिउँसो';
        } else if (hour < 20) {
            return 'साँझ';
        } else {
            return 'राति';
        }
    },
    calendar : {
        sameDay : '[आज] LT',
        nextDay : '[भोलि] LT',
        nextWeek : '[आउँदो] dddd[,] LT',
        lastDay : '[हिजो] LT',
        lastWeek : '[गएको] dddd[,] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sमा',
        past : '%s अगाडि',
        s : 'केही क्षण',
        m : 'एक मिनेट',
        mm : '%d मिनेट',
        h : 'एक घण्टा',
        hh : '%d घण्टा',
        d : 'एक दिन',
        dd : '%d दिन',
        M : 'एक महिना',
        MM : '%d महिना',
        y : 'एक बर्ष',
        yy : '%d बर्ष'
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ne;

})));


/***/ }),
/* 177 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch (Belgium) [nl-be]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nlBe = moment.defineLocale('nl-be', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nlBe;

})));


/***/ }),
/* 178 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Dutch [nl]
//! author : Joris Röling : https://github.com/jorisroling
//! author : Jacob Middag : https://github.com/middagj

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');
var monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');

var monthsParse = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];
var monthsRegex = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i;

var nl = moment.defineLocale('nl', {
    months : 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),
    monthsShort : function (m, format) {
        if (!m) {
            return monthsShortWithDots;
        } else if (/-MMM-/.test(format)) {
            return monthsShortWithoutDots[m.month()];
        } else {
            return monthsShortWithDots[m.month()];
        }
    },

    monthsRegex: monthsRegex,
    monthsShortRegex: monthsRegex,
    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
    monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,

    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    weekdays : 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),
    weekdaysShort : 'zo._ma._di._wo._do._vr._za.'.split('_'),
    weekdaysMin : 'zo_ma_di_wo_do_vr_za'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD-MM-YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[vandaag om] LT',
        nextDay: '[morgen om] LT',
        nextWeek: 'dddd [om] LT',
        lastDay: '[gisteren om] LT',
        lastWeek: '[afgelopen] dddd [om] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'over %s',
        past : '%s geleden',
        s : 'een paar seconden',
        m : 'één minuut',
        mm : '%d minuten',
        h : 'één uur',
        hh : '%d uur',
        d : 'één dag',
        dd : '%d dagen',
        M : 'één maand',
        MM : '%d maanden',
        y : 'één jaar',
        yy : '%d jaar'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
    ordinal : function (number) {
        return number + ((number === 1 || number === 8 || number >= 20) ? 'ste' : 'de');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nl;

})));


/***/ }),
/* 179 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Nynorsk [nn]
//! author : https://github.com/mechuwind

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var nn = moment.defineLocale('nn', {
    months : 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),
    monthsShort : 'jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des'.split('_'),
    weekdays : 'sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag'.split('_'),
    weekdaysShort : 'sun_mån_tys_ons_tor_fre_lau'.split('_'),
    weekdaysMin : 'su_må_ty_on_to_fr_lø'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY [kl.] H:mm',
        LLLL : 'dddd D. MMMM YYYY [kl.] HH:mm'
    },
    calendar : {
        sameDay: '[I dag klokka] LT',
        nextDay: '[I morgon klokka] LT',
        nextWeek: 'dddd [klokka] LT',
        lastDay: '[I går klokka] LT',
        lastWeek: '[Føregåande] dddd [klokka] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : '%s sidan',
        s : 'nokre sekund',
        m : 'eit minutt',
        mm : '%d minutt',
        h : 'ein time',
        hh : '%d timar',
        d : 'ein dag',
        dd : '%d dagar',
        M : 'ein månad',
        MM : '%d månader',
        y : 'eit år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return nn;

})));


/***/ }),
/* 180 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Punjabi (India) [pa-in]
//! author : Harpreet Singh : https://github.com/harpreetkhalsagtbit

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '੧',
    '2': '੨',
    '3': '੩',
    '4': '੪',
    '5': '੫',
    '6': '੬',
    '7': '੭',
    '8': '੮',
    '9': '੯',
    '0': '੦'
};
var numberMap = {
    '੧': '1',
    '੨': '2',
    '੩': '3',
    '੪': '4',
    '੫': '5',
    '੬': '6',
    '੭': '7',
    '੮': '8',
    '੯': '9',
    '੦': '0'
};

var paIn = moment.defineLocale('pa-in', {
    // There are months name as per Nanakshahi Calender but they are not used as rigidly in modern Punjabi.
    months : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    monthsShort : 'ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ'.split('_'),
    weekdays : 'ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ'.split('_'),
    weekdaysShort : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    weekdaysMin : 'ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm ਵਜੇ',
        LTS : 'A h:mm:ss ਵਜੇ',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm ਵਜੇ',
        LLLL : 'dddd, D MMMM YYYY, A h:mm ਵਜੇ'
    },
    calendar : {
        sameDay : '[ਅਜ] LT',
        nextDay : '[ਕਲ] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[ਕਲ] LT',
        lastWeek : '[ਪਿਛਲੇ] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s ਵਿੱਚ',
        past : '%s ਪਿਛਲੇ',
        s : 'ਕੁਝ ਸਕਿੰਟ',
        m : 'ਇਕ ਮਿੰਟ',
        mm : '%d ਮਿੰਟ',
        h : 'ਇੱਕ ਘੰਟਾ',
        hh : '%d ਘੰਟੇ',
        d : 'ਇੱਕ ਦਿਨ',
        dd : '%d ਦਿਨ',
        M : 'ਇੱਕ ਮਹੀਨਾ',
        MM : '%d ਮਹੀਨੇ',
        y : 'ਇੱਕ ਸਾਲ',
        yy : '%d ਸਾਲ'
    },
    preparse: function (string) {
        return string.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // Punjabi notation for meridiems are quite fuzzy in practice. While there exists
    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Punjabi.
    meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ਰਾਤ') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ਸਵੇਰ') {
            return hour;
        } else if (meridiem === 'ਦੁਪਹਿਰ') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'ਸ਼ਾਮ') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ਰਾਤ';
        } else if (hour < 10) {
            return 'ਸਵੇਰ';
        } else if (hour < 17) {
            return 'ਦੁਪਹਿਰ';
        } else if (hour < 20) {
            return 'ਸ਼ਾਮ';
        } else {
            return 'ਰਾਤ';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return paIn;

})));


/***/ }),
/* 181 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Polish [pl]
//! author : Rafal Hirsz : https://github.com/evoL

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');
var monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');
function plural(n) {
    return (n % 10 < 5) && (n % 10 > 1) && ((~~(n / 10) % 10) !== 1);
}
function translate(number, withoutSuffix, key) {
    var result = number + ' ';
    switch (key) {
        case 'm':
            return withoutSuffix ? 'minuta' : 'minutę';
        case 'mm':
            return result + (plural(number) ? 'minuty' : 'minut');
        case 'h':
            return withoutSuffix  ? 'godzina'  : 'godzinę';
        case 'hh':
            return result + (plural(number) ? 'godziny' : 'godzin');
        case 'MM':
            return result + (plural(number) ? 'miesiące' : 'miesięcy');
        case 'yy':
            return result + (plural(number) ? 'lata' : 'lat');
    }
}

var pl = moment.defineLocale('pl', {
    months : function (momentToFormat, format) {
        if (!momentToFormat) {
            return monthsNominative;
        } else if (format === '') {
            // Hack: if format empty we know this is used to generate
            // RegExp by moment. Give then back both valid forms of months
            // in RegExp ready format.
            return '(' + monthsSubjective[momentToFormat.month()] + '|' + monthsNominative[momentToFormat.month()] + ')';
        } else if (/D MMMM/.test(format)) {
            return monthsSubjective[momentToFormat.month()];
        } else {
            return monthsNominative[momentToFormat.month()];
        }
    },
    monthsShort : 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),
    weekdays : 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),
    weekdaysShort : 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),
    weekdaysMin : 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Dziś o] LT',
        nextDay: '[Jutro o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W niedzielę o] LT';

                case 2:
                    return '[We wtorek o] LT';

                case 3:
                    return '[W środę o] LT';

                case 6:
                    return '[W sobotę o] LT';

                default:
                    return '[W] dddd [o] LT';
            }
        },
        lastDay: '[Wczoraj o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[W zeszłą niedzielę o] LT';
                case 3:
                    return '[W zeszłą środę o] LT';
                case 6:
                    return '[W zeszłą sobotę o] LT';
                default:
                    return '[W zeszły] dddd [o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : '%s temu',
        s : 'kilka sekund',
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : '1 dzień',
        dd : '%d dni',
        M : 'miesiąc',
        MM : translate,
        y : 'rok',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pl;

})));


/***/ }),
/* 182 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese (Brazil) [pt-br]
//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var ptBr = moment.defineLocale('pt-br', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY [às] HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : '%s atrás',
        s : 'poucos segundos',
        ss : '%d segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº'
});

return ptBr;

})));


/***/ }),
/* 183 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Portuguese [pt]
//! author : Jefferson : https://github.com/jalex79

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var pt = moment.defineLocale('pt', {
    months : 'janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro'.split('_'),
    monthsShort : 'jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez'.split('_'),
    weekdays : 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),
    weekdaysShort : 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),
    weekdaysMin : 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D [de] MMMM [de] YYYY',
        LLL : 'D [de] MMMM [de] YYYY HH:mm',
        LLLL : 'dddd, D [de] MMMM [de] YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hoje às] LT',
        nextDay: '[Amanhã às] LT',
        nextWeek: 'dddd [às] LT',
        lastDay: '[Ontem às] LT',
        lastWeek: function () {
            return (this.day() === 0 || this.day() === 6) ?
                '[Último] dddd [às] LT' : // Saturday + Sunday
                '[Última] dddd [às] LT'; // Monday - Friday
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'em %s',
        past : 'há %s',
        s : 'segundos',
        m : 'um minuto',
        mm : '%d minutos',
        h : 'uma hora',
        hh : '%d horas',
        d : 'um dia',
        dd : '%d dias',
        M : 'um mês',
        MM : '%d meses',
        y : 'um ano',
        yy : '%d anos'
    },
    dayOfMonthOrdinalParse: /\d{1,2}º/,
    ordinal : '%dº',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return pt;

})));


/***/ }),
/* 184 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Romanian [ro]
//! author : Vlad Gurdiga : https://github.com/gurdiga
//! author : Valentin Agachi : https://github.com/avaly

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
            'mm': 'minute',
            'hh': 'ore',
            'dd': 'zile',
            'MM': 'luni',
            'yy': 'ani'
        },
        separator = ' ';
    if (number % 100 >= 20 || (number >= 100 && number % 100 === 0)) {
        separator = ' de ';
    }
    return number + separator + format[key];
}

var ro = moment.defineLocale('ro', {
    months : 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),
    monthsShort : 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),
    weekdaysShort : 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),
    weekdaysMin : 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY H:mm',
        LLLL : 'dddd, D MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[azi la] LT',
        nextDay: '[mâine la] LT',
        nextWeek: 'dddd [la] LT',
        lastDay: '[ieri la] LT',
        lastWeek: '[fosta] dddd [la] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'peste %s',
        past : '%s în urmă',
        s : 'câteva secunde',
        m : 'un minut',
        mm : relativeTimeWithPlural,
        h : 'o oră',
        hh : relativeTimeWithPlural,
        d : 'o zi',
        dd : relativeTimeWithPlural,
        M : 'o lună',
        MM : relativeTimeWithPlural,
        y : 'un an',
        yy : relativeTimeWithPlural
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return ro;

})));


/***/ }),
/* 185 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Russian [ru]
//! author : Viktorminator : https://github.com/Viktorminator
//! Author : Menelion Elensúle : https://github.com/Oire
//! author : Коренберг Марк : https://github.com/socketpair

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',
        'hh': 'час_часа_часов',
        'dd': 'день_дня_дней',
        'MM': 'месяц_месяца_месяцев',
        'yy': 'год_года_лет'
    };
    if (key === 'm') {
        return withoutSuffix ? 'минута' : 'минуту';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
var monthsParse = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];

// http://new.gramota.ru/spravka/rules/139-prop : § 103
// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637
// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753
var ru = moment.defineLocale('ru', {
    months : {
        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),
        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')
    },
    monthsShort : {
        // по CLDR именно "июл." и "июн.", но какой смысл менять букву на точку ?
        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),
        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')
    },
    weekdays : {
        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),
        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),
        isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
    },
    weekdaysShort : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'вс_пн_вт_ср_чт_пт_сб'.split('_'),
    monthsParse : monthsParse,
    longMonthsParse : monthsParse,
    shortMonthsParse : monthsParse,

    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки
    monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // копия предыдущего
    monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,

    // полные названия с падежами
    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,

    // Выражение, которое соотвествует только сокращённым формам
    monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY г.',
        LLL : 'D MMMM YYYY г., HH:mm',
        LLLL : 'dddd, D MMMM YYYY г., HH:mm'
    },
    calendar : {
        sameDay: '[Сегодня в] LT',
        nextDay: '[Завтра в] LT',
        lastDay: '[Вчера в] LT',
        nextWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В следующее] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В следующий] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В следующую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        lastWeek: function (now) {
            if (now.week() !== this.week()) {
                switch (this.day()) {
                    case 0:
                        return '[В прошлое] dddd [в] LT';
                    case 1:
                    case 2:
                    case 4:
                        return '[В прошлый] dddd [в] LT';
                    case 3:
                    case 5:
                    case 6:
                        return '[В прошлую] dddd [в] LT';
                }
            } else {
                if (this.day() === 2) {
                    return '[Во] dddd [в] LT';
                } else {
                    return '[В] dddd [в] LT';
                }
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'через %s',
        past : '%s назад',
        s : 'несколько секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'час',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'месяц',
        MM : relativeTimeWithPlural,
        y : 'год',
        yy : relativeTimeWithPlural
    },
    meridiemParse: /ночи|утра|дня|вечера/i,
    isPM : function (input) {
        return /^(дня|вечера)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночи';
        } else if (hour < 12) {
            return 'утра';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечера';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
                return number + '-й';
            case 'D':
                return number + '-го';
            case 'w':
            case 'W':
                return number + '-я';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ru;

})));


/***/ }),
/* 186 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sindhi [sd]
//! author : Narain Sagar : https://github.com/narainsagar

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'جنوري',
    'فيبروري',
    'مارچ',
    'اپريل',
    'مئي',
    'جون',
    'جولاءِ',
    'آگسٽ',
    'سيپٽمبر',
    'آڪٽوبر',
    'نومبر',
    'ڊسمبر'
];
var days = [
    'آچر',
    'سومر',
    'اڱارو',
    'اربع',
    'خميس',
    'جمع',
    'ڇنڇر'
];

var sd = moment.defineLocale('sd', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[اڄ] LT',
        nextDay : '[سڀاڻي] LT',
        nextWeek : 'dddd [اڳين هفتي تي] LT',
        lastDay : '[ڪالهه] LT',
        lastWeek : '[گزريل هفتي] dddd [تي] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s پوء',
        past : '%s اڳ',
        s : 'چند سيڪنڊ',
        m : 'هڪ منٽ',
        mm : '%d منٽ',
        h : 'هڪ ڪلاڪ',
        hh : '%d ڪلاڪ',
        d : 'هڪ ڏينهن',
        dd : '%d ڏينهن',
        M : 'هڪ مهينو',
        MM : '%d مهينا',
        y : 'هڪ سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sd;

})));


/***/ }),
/* 187 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Northern Sami [se]
//! authors : Bård Rolstad Henriksen : https://github.com/karamell

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var se = moment.defineLocale('se', {
    months : 'ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu'.split('_'),
    monthsShort : 'ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov'.split('_'),
    weekdays : 'sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat'.split('_'),
    weekdaysShort : 'sotn_vuos_maŋ_gask_duor_bear_láv'.split('_'),
    weekdaysMin : 's_v_m_g_d_b_L'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'MMMM D. [b.] YYYY',
        LLL : 'MMMM D. [b.] YYYY [ti.] HH:mm',
        LLLL : 'dddd, MMMM D. [b.] YYYY [ti.] HH:mm'
    },
    calendar : {
        sameDay: '[otne ti] LT',
        nextDay: '[ihttin ti] LT',
        nextWeek: 'dddd [ti] LT',
        lastDay: '[ikte ti] LT',
        lastWeek: '[ovddit] dddd [ti] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s geažes',
        past : 'maŋit %s',
        s : 'moadde sekunddat',
        m : 'okta minuhta',
        mm : '%d minuhtat',
        h : 'okta diimmu',
        hh : '%d diimmut',
        d : 'okta beaivi',
        dd : '%d beaivvit',
        M : 'okta mánnu',
        MM : '%d mánut',
        y : 'okta jahki',
        yy : '%d jagit'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return se;

})));


/***/ }),
/* 188 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Sinhalese [si]
//! author : Sampath Sitinamaluwa : https://github.com/sampathsris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


/*jshint -W100*/
var si = moment.defineLocale('si', {
    months : 'ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්'.split('_'),
    monthsShort : 'ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ'.split('_'),
    weekdays : 'ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා'.split('_'),
    weekdaysShort : 'ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන'.split('_'),
    weekdaysMin : 'ඉ_ස_අ_බ_බ්‍ර_සි_සෙ'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'a h:mm',
        LTS : 'a h:mm:ss',
        L : 'YYYY/MM/DD',
        LL : 'YYYY MMMM D',
        LLL : 'YYYY MMMM D, a h:mm',
        LLLL : 'YYYY MMMM D [වැනි] dddd, a h:mm:ss'
    },
    calendar : {
        sameDay : '[අද] LT[ට]',
        nextDay : '[හෙට] LT[ට]',
        nextWeek : 'dddd LT[ට]',
        lastDay : '[ඊයේ] LT[ට]',
        lastWeek : '[පසුගිය] dddd LT[ට]',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%sකින්',
        past : '%sකට පෙර',
        s : 'තත්පර කිහිපය',
        m : 'මිනිත්තුව',
        mm : 'මිනිත්තු %d',
        h : 'පැය',
        hh : 'පැය %d',
        d : 'දිනය',
        dd : 'දින %d',
        M : 'මාසය',
        MM : 'මාස %d',
        y : 'වසර',
        yy : 'වසර %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
    ordinal : function (number) {
        return number + ' වැනි';
    },
    meridiemParse : /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
    isPM : function (input) {
        return input === 'ප.ව.' || input === 'පස් වරු';
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'ප.ව.' : 'පස් වරු';
        } else {
            return isLower ? 'පෙ.ව.' : 'පෙර වරු';
        }
    }
});

return si;

})));


/***/ }),
/* 189 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovak [sk]
//! author : Martin Minka : https://github.com/k2s
//! based on work of petrbela : https://github.com/petrbela

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');
var monthsShort = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');
function plural(n) {
    return (n > 1) && (n < 5);
}
function translate(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':  // a few seconds / in a few seconds / a few seconds ago
            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';
        case 'm':  // a minute / in a minute / a minute ago
            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');
        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'minúty' : 'minút');
            } else {
                return result + 'minútami';
            }
            break;
        case 'h':  // an hour / in an hour / an hour ago
            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');
        case 'hh': // 9 hours / in 9 hours / 9 hours ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'hodiny' : 'hodín');
            } else {
                return result + 'hodinami';
            }
            break;
        case 'd':  // a day / in a day / a day ago
            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';
        case 'dd': // 9 days / in 9 days / 9 days ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'dni' : 'dní');
            } else {
                return result + 'dňami';
            }
            break;
        case 'M':  // a month / in a month / a month ago
            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';
        case 'MM': // 9 months / in 9 months / 9 months ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'mesiace' : 'mesiacov');
            } else {
                return result + 'mesiacmi';
            }
            break;
        case 'y':  // a year / in a year / a year ago
            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';
        case 'yy': // 9 years / in 9 years / 9 years ago
            if (withoutSuffix || isFuture) {
                return result + (plural(number) ? 'roky' : 'rokov');
            } else {
                return result + 'rokmi';
            }
            break;
    }
}

var sk = moment.defineLocale('sk', {
    months : months,
    monthsShort : monthsShort,
    weekdays : 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),
    weekdaysShort : 'ne_po_ut_st_št_pi_so'.split('_'),
    weekdaysMin : 'ne_po_ut_st_št_pi_so'.split('_'),
    longDateFormat : {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay: '[dnes o] LT',
        nextDay: '[zajtra o] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[v nedeľu o] LT';
                case 1:
                case 2:
                    return '[v] dddd [o] LT';
                case 3:
                    return '[v stredu o] LT';
                case 4:
                    return '[vo štvrtok o] LT';
                case 5:
                    return '[v piatok o] LT';
                case 6:
                    return '[v sobotu o] LT';
            }
        },
        lastDay: '[včera o] LT',
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[minulú nedeľu o] LT';
                case 1:
                case 2:
                    return '[minulý] dddd [o] LT';
                case 3:
                    return '[minulú stredu o] LT';
                case 4:
                case 5:
                    return '[minulý] dddd [o] LT';
                case 6:
                    return '[minulú sobotu o] LT';
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'za %s',
        past : 'pred %s',
        s : translate,
        m : translate,
        mm : translate,
        h : translate,
        hh : translate,
        d : translate,
        dd : translate,
        M : translate,
        MM : translate,
        y : translate,
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sk;

})));


/***/ }),
/* 190 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Slovenian [sl]
//! author : Robert Sedovšek : https://github.com/sedovsek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var result = number + ' ';
    switch (key) {
        case 's':
            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';
        case 'm':
            return withoutSuffix ? 'ena minuta' : 'eno minuto';
        case 'mm':
            if (number === 1) {
                result += withoutSuffix ? 'minuta' : 'minuto';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'minute' : 'minutami';
            } else {
                result += withoutSuffix || isFuture ? 'minut' : 'minutami';
            }
            return result;
        case 'h':
            return withoutSuffix ? 'ena ura' : 'eno uro';
        case 'hh':
            if (number === 1) {
                result += withoutSuffix ? 'ura' : 'uro';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'uri' : 'urama';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'ure' : 'urami';
            } else {
                result += withoutSuffix || isFuture ? 'ur' : 'urami';
            }
            return result;
        case 'd':
            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';
        case 'dd':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'dan' : 'dnem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';
            } else {
                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';
            }
            return result;
        case 'M':
            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';
        case 'MM':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';
            } else {
                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';
            }
            return result;
        case 'y':
            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';
        case 'yy':
            if (number === 1) {
                result += withoutSuffix || isFuture ? 'leto' : 'letom';
            } else if (number === 2) {
                result += withoutSuffix || isFuture ? 'leti' : 'letoma';
            } else if (number < 5) {
                result += withoutSuffix || isFuture ? 'leta' : 'leti';
            } else {
                result += withoutSuffix || isFuture ? 'let' : 'leti';
            }
            return result;
    }
}

var sl = moment.defineLocale('sl', {
    months : 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),
    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays : 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),
    weekdaysShort : 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),
    weekdaysMin : 'ne_po_to_sr_če_pe_so'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM YYYY',
        LLL : 'D. MMMM YYYY H:mm',
        LLLL : 'dddd, D. MMMM YYYY H:mm'
    },
    calendar : {
        sameDay  : '[danes ob] LT',
        nextDay  : '[jutri ob] LT',

        nextWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[v] [nedeljo] [ob] LT';
                case 3:
                    return '[v] [sredo] [ob] LT';
                case 6:
                    return '[v] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[v] dddd [ob] LT';
            }
        },
        lastDay  : '[včeraj ob] LT',
        lastWeek : function () {
            switch (this.day()) {
                case 0:
                    return '[prejšnjo] [nedeljo] [ob] LT';
                case 3:
                    return '[prejšnjo] [sredo] [ob] LT';
                case 6:
                    return '[prejšnjo] [soboto] [ob] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[prejšnji] dddd [ob] LT';
            }
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'čez %s',
        past   : 'pred %s',
        s      : processRelativeTime,
        m      : processRelativeTime,
        mm     : processRelativeTime,
        h      : processRelativeTime,
        hh     : processRelativeTime,
        d      : processRelativeTime,
        dd     : processRelativeTime,
        M      : processRelativeTime,
        MM     : processRelativeTime,
        y      : processRelativeTime,
        yy     : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sl;

})));


/***/ }),
/* 191 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Albanian [sq]
//! author : Flakërim Ismani : https://github.com/flakerimi
//! author : Menelion Elensúle : https://github.com/Oire
//! author : Oerd Cukalla : https://github.com/oerd

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sq = moment.defineLocale('sq', {
    months : 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),
    monthsShort : 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),
    weekdays : 'E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),
    weekdaysShort : 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),
    weekdaysMin : 'D_H_Ma_Më_E_P_Sh'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /PD|MD/,
    isPM: function (input) {
        return input.charAt(0) === 'M';
    },
    meridiem : function (hours, minutes, isLower) {
        return hours < 12 ? 'PD' : 'MD';
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[Sot në] LT',
        nextDay : '[Nesër në] LT',
        nextWeek : 'dddd [në] LT',
        lastDay : '[Dje në] LT',
        lastWeek : 'dddd [e kaluar në] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'në %s',
        past : '%s më parë',
        s : 'disa sekonda',
        m : 'një minutë',
        mm : '%d minuta',
        h : 'një orë',
        hh : '%d orë',
        d : 'një ditë',
        dd : '%d ditë',
        M : 'një muaj',
        MM : '%d muaj',
        y : 'një vit',
        yy : '%d vite'
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sq;

})));


/***/ }),
/* 192 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian Cyrillic [sr-cyrl]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['један минут', 'једне минуте'],
        mm: ['минут', 'минуте', 'минута'],
        h: ['један сат', 'једног сата'],
        hh: ['сат', 'сата', 'сати'],
        dd: ['дан', 'дана', 'дана'],
        MM: ['месец', 'месеца', 'месеци'],
        yy: ['година', 'године', 'година']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var srCyrl = moment.defineLocale('sr-cyrl', {
    months: 'јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар'.split('_'),
    monthsShort: 'јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.'.split('_'),
    monthsParseExact: true,
    weekdays: 'недеља_понедељак_уторак_среда_четвртак_петак_субота'.split('_'),
    weekdaysShort: 'нед._пон._уто._сре._чет._пет._суб.'.split('_'),
    weekdaysMin: 'не_по_ут_ср_че_пе_су'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[данас у] LT',
        nextDay: '[сутра у] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[у] [недељу] [у] LT';
                case 3:
                    return '[у] [среду] [у] LT';
                case 6:
                    return '[у] [суботу] [у] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[у] dddd [у] LT';
            }
        },
        lastDay  : '[јуче у] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[прошле] [недеље] [у] LT',
                '[прошлог] [понедељка] [у] LT',
                '[прошлог] [уторка] [у] LT',
                '[прошле] [среде] [у] LT',
                '[прошлог] [четвртка] [у] LT',
                '[прошлог] [петка] [у] LT',
                '[прошле] [суботе] [у] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'за %s',
        past   : 'пре %s',
        s      : 'неколико секунди',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'дан',
        dd     : translator.translate,
        M      : 'месец',
        MM     : translator.translate,
        y      : 'годину',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return srCyrl;

})));


/***/ }),
/* 193 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Serbian [sr]
//! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var translator = {
    words: { //Different grammatical cases
        m: ['jedan minut', 'jedne minute'],
        mm: ['minut', 'minute', 'minuta'],
        h: ['jedan sat', 'jednog sata'],
        hh: ['sat', 'sata', 'sati'],
        dd: ['dan', 'dana', 'dana'],
        MM: ['mesec', 'meseca', 'meseci'],
        yy: ['godina', 'godine', 'godina']
    },
    correctGrammaticalCase: function (number, wordKey) {
        return number === 1 ? wordKey[0] : (number >= 2 && number <= 4 ? wordKey[1] : wordKey[2]);
    },
    translate: function (number, withoutSuffix, key) {
        var wordKey = translator.words[key];
        if (key.length === 1) {
            return withoutSuffix ? wordKey[0] : wordKey[1];
        } else {
            return number + ' ' + translator.correctGrammaticalCase(number, wordKey);
        }
    }
};

var sr = moment.defineLocale('sr', {
    months: 'januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar'.split('_'),
    monthsShort: 'jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.'.split('_'),
    monthsParseExact: true,
    weekdays: 'nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota'.split('_'),
    weekdaysShort: 'ned._pon._uto._sre._čet._pet._sub.'.split('_'),
    weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),
    weekdaysParseExact : true,
    longDateFormat: {
        LT: 'H:mm',
        LTS : 'H:mm:ss',
        L: 'DD.MM.YYYY',
        LL: 'D. MMMM YYYY',
        LLL: 'D. MMMM YYYY H:mm',
        LLLL: 'dddd, D. MMMM YYYY H:mm'
    },
    calendar: {
        sameDay: '[danas u] LT',
        nextDay: '[sutra u] LT',
        nextWeek: function () {
            switch (this.day()) {
                case 0:
                    return '[u] [nedelju] [u] LT';
                case 3:
                    return '[u] [sredu] [u] LT';
                case 6:
                    return '[u] [subotu] [u] LT';
                case 1:
                case 2:
                case 4:
                case 5:
                    return '[u] dddd [u] LT';
            }
        },
        lastDay  : '[juče u] LT',
        lastWeek : function () {
            var lastWeekDays = [
                '[prošle] [nedelje] [u] LT',
                '[prošlog] [ponedeljka] [u] LT',
                '[prošlog] [utorka] [u] LT',
                '[prošle] [srede] [u] LT',
                '[prošlog] [četvrtka] [u] LT',
                '[prošlog] [petka] [u] LT',
                '[prošle] [subote] [u] LT'
            ];
            return lastWeekDays[this.day()];
        },
        sameElse : 'L'
    },
    relativeTime : {
        future : 'za %s',
        past   : 'pre %s',
        s      : 'nekoliko sekundi',
        m      : translator.translate,
        mm     : translator.translate,
        h      : translator.translate,
        hh     : translator.translate,
        d      : 'dan',
        dd     : translator.translate,
        M      : 'mesec',
        MM     : translator.translate,
        y      : 'godinu',
        yy     : translator.translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sr;

})));


/***/ }),
/* 194 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : siSwati [ss]
//! author : Nicolai Davies<mail@nicolai.io> : https://github.com/nicolaidavies

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';



var ss = moment.defineLocale('ss', {
    months : "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split('_'),
    monthsShort : 'Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo'.split('_'),
    weekdays : 'Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo'.split('_'),
    weekdaysShort : 'Lis_Umb_Lsb_Les_Lsi_Lsh_Umg'.split('_'),
    weekdaysMin : 'Li_Us_Lb_Lt_Ls_Lh_Ug'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Namuhla nga] LT',
        nextDay : '[Kusasa nga] LT',
        nextWeek : 'dddd [nga] LT',
        lastDay : '[Itolo nga] LT',
        lastWeek : 'dddd [leliphelile] [nga] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'nga %s',
        past : 'wenteka nga %s',
        s : 'emizuzwana lomcane',
        m : 'umzuzu',
        mm : '%d emizuzu',
        h : 'lihora',
        hh : '%d emahora',
        d : 'lilanga',
        dd : '%d emalanga',
        M : 'inyanga',
        MM : '%d tinyanga',
        y : 'umnyaka',
        yy : '%d iminyaka'
    },
    meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
    meridiem : function (hours, minutes, isLower) {
        if (hours < 11) {
            return 'ekuseni';
        } else if (hours < 15) {
            return 'emini';
        } else if (hours < 19) {
            return 'entsambama';
        } else {
            return 'ebusuku';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'ekuseni') {
            return hour;
        } else if (meridiem === 'emini') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === 'entsambama' || meridiem === 'ebusuku') {
            if (hour === 0) {
                return 0;
            }
            return hour + 12;
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : '%d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ss;

})));


/***/ }),
/* 195 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swedish [sv]
//! author : Jens Alm : https://github.com/ulmus

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sv = moment.defineLocale('sv', {
    months : 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),
    monthsShort : 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),
    weekdays : 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),
    weekdaysShort : 'sön_mån_tis_ons_tor_fre_lör'.split('_'),
    weekdaysMin : 'sö_må_ti_on_to_fr_lö'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY-MM-DD',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY [kl.] HH:mm',
        LLLL : 'dddd D MMMM YYYY [kl.] HH:mm',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Idag] LT',
        nextDay: '[Imorgon] LT',
        lastDay: '[Igår] LT',
        nextWeek: '[På] dddd LT',
        lastWeek: '[I] dddd[s] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'om %s',
        past : 'för %s sedan',
        s : 'några sekunder',
        m : 'en minut',
        mm : '%d minuter',
        h : 'en timme',
        hh : '%d timmar',
        d : 'en dag',
        dd : '%d dagar',
        M : 'en månad',
        MM : '%d månader',
        y : 'ett år',
        yy : '%d år'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'e' :
            (b === 1) ? 'a' :
            (b === 2) ? 'a' :
            (b === 3) ? 'e' : 'e';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return sv;

})));


/***/ }),
/* 196 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Swahili [sw]
//! author : Fahad Kassim : https://github.com/fadsel

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var sw = moment.defineLocale('sw', {
    months : 'Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba'.split('_'),
    monthsShort : 'Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des'.split('_'),
    weekdays : 'Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi'.split('_'),
    weekdaysShort : 'Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos'.split('_'),
    weekdaysMin : 'J2_J3_J4_J5_Al_Ij_J1'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[leo saa] LT',
        nextDay : '[kesho saa] LT',
        nextWeek : '[wiki ijayo] dddd [saat] LT',
        lastDay : '[jana] LT',
        lastWeek : '[wiki iliyopita] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s baadaye',
        past : 'tokea %s',
        s : 'hivi punde',
        m : 'dakika moja',
        mm : 'dakika %d',
        h : 'saa limoja',
        hh : 'masaa %d',
        d : 'siku moja',
        dd : 'masiku %d',
        M : 'mwezi mmoja',
        MM : 'miezi %d',
        y : 'mwaka mmoja',
        yy : 'miaka %d'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return sw;

})));


/***/ }),
/* 197 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tamil [ta]
//! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var symbolMap = {
    '1': '௧',
    '2': '௨',
    '3': '௩',
    '4': '௪',
    '5': '௫',
    '6': '௬',
    '7': '௭',
    '8': '௮',
    '9': '௯',
    '0': '௦'
};
var numberMap = {
    '௧': '1',
    '௨': '2',
    '௩': '3',
    '௪': '4',
    '௫': '5',
    '௬': '6',
    '௭': '7',
    '௮': '8',
    '௯': '9',
    '௦': '0'
};

var ta = moment.defineLocale('ta', {
    months : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    monthsShort : 'ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்'.split('_'),
    weekdays : 'ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை'.split('_'),
    weekdaysShort : 'ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி'.split('_'),
    weekdaysMin : 'ஞா_தி_செ_பு_வி_வெ_ச'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, HH:mm',
        LLLL : 'dddd, D MMMM YYYY, HH:mm'
    },
    calendar : {
        sameDay : '[இன்று] LT',
        nextDay : '[நாளை] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[நேற்று] LT',
        lastWeek : '[கடந்த வாரம்] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s இல்',
        past : '%s முன்',
        s : 'ஒரு சில விநாடிகள்',
        m : 'ஒரு நிமிடம்',
        mm : '%d நிமிடங்கள்',
        h : 'ஒரு மணி நேரம்',
        hh : '%d மணி நேரம்',
        d : 'ஒரு நாள்',
        dd : '%d நாட்கள்',
        M : 'ஒரு மாதம்',
        MM : '%d மாதங்கள்',
        y : 'ஒரு வருடம்',
        yy : '%d ஆண்டுகள்'
    },
    dayOfMonthOrdinalParse: /\d{1,2}வது/,
    ordinal : function (number) {
        return number + 'வது';
    },
    preparse: function (string) {
        return string.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function (match) {
            return numberMap[match];
        });
    },
    postformat: function (string) {
        return string.replace(/\d/g, function (match) {
            return symbolMap[match];
        });
    },
    // refer http://ta.wikipedia.org/s/1er1
    meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
    meridiem : function (hour, minute, isLower) {
        if (hour < 2) {
            return ' யாமம்';
        } else if (hour < 6) {
            return ' வைகறை';  // வைகறை
        } else if (hour < 10) {
            return ' காலை'; // காலை
        } else if (hour < 14) {
            return ' நண்பகல்'; // நண்பகல்
        } else if (hour < 18) {
            return ' எற்பாடு'; // எற்பாடு
        } else if (hour < 22) {
            return ' மாலை'; // மாலை
        } else {
            return ' யாமம்';
        }
    },
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'யாமம்') {
            return hour < 2 ? hour : hour + 12;
        } else if (meridiem === 'வைகறை' || meridiem === 'காலை') {
            return hour;
        } else if (meridiem === 'நண்பகல்') {
            return hour >= 10 ? hour : hour + 12;
        } else {
            return hour + 12;
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return ta;

})));


/***/ }),
/* 198 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Telugu [te]
//! author : Krishna Chaitanya Thota : https://github.com/kcthota

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var te = moment.defineLocale('te', {
    months : 'జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్'.split('_'),
    monthsShort : 'జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.'.split('_'),
    monthsParseExact : true,
    weekdays : 'ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం'.split('_'),
    weekdaysShort : 'ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని'.split('_'),
    weekdaysMin : 'ఆ_సో_మం_బు_గు_శు_శ'.split('_'),
    longDateFormat : {
        LT : 'A h:mm',
        LTS : 'A h:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY, A h:mm',
        LLLL : 'dddd, D MMMM YYYY, A h:mm'
    },
    calendar : {
        sameDay : '[నేడు] LT',
        nextDay : '[రేపు] LT',
        nextWeek : 'dddd, LT',
        lastDay : '[నిన్న] LT',
        lastWeek : '[గత] dddd, LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s లో',
        past : '%s క్రితం',
        s : 'కొన్ని క్షణాలు',
        m : 'ఒక నిమిషం',
        mm : '%d నిమిషాలు',
        h : 'ఒక గంట',
        hh : '%d గంటలు',
        d : 'ఒక రోజు',
        dd : '%d రోజులు',
        M : 'ఒక నెల',
        MM : '%d నెలలు',
        y : 'ఒక సంవత్సరం',
        yy : '%d సంవత్సరాలు'
    },
    dayOfMonthOrdinalParse : /\d{1,2}వ/,
    ordinal : '%dవ',
    meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === 'రాత్రి') {
            return hour < 4 ? hour : hour + 12;
        } else if (meridiem === 'ఉదయం') {
            return hour;
        } else if (meridiem === 'మధ్యాహ్నం') {
            return hour >= 10 ? hour : hour + 12;
        } else if (meridiem === 'సాయంత్రం') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'రాత్రి';
        } else if (hour < 10) {
            return 'ఉదయం';
        } else if (hour < 17) {
            return 'మధ్యాహ్నం';
        } else if (hour < 20) {
            return 'సాయంత్రం';
        } else {
            return 'రాత్రి';
        }
    },
    week : {
        dow : 0, // Sunday is the first day of the week.
        doy : 6  // The week that contains Jan 1st is the first week of the year.
    }
});

return te;

})));


/***/ }),
/* 199 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tetun Dili (East Timor) [tet]
//! author : Joshua Brooks : https://github.com/joshbrooks
//! author : Onorio De J. Afonso : https://github.com/marobo

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tet = moment.defineLocale('tet', {
    months : 'Janeiru_Fevereiru_Marsu_Abril_Maiu_Juniu_Juliu_Augustu_Setembru_Outubru_Novembru_Dezembru'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Aug_Set_Out_Nov_Dez'.split('_'),
    weekdays : 'Domingu_Segunda_Tersa_Kuarta_Kinta_Sexta_Sabadu'.split('_'),
    weekdaysShort : 'Dom_Seg_Ters_Kua_Kint_Sext_Sab'.split('_'),
    weekdaysMin : 'Do_Seg_Te_Ku_Ki_Sex_Sa'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Ohin iha] LT',
        nextDay: '[Aban iha] LT',
        nextWeek: 'dddd [iha] LT',
        lastDay: '[Horiseik iha] LT',
        lastWeek: 'dddd [semana kotuk] [iha] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'iha %s',
        past : '%s liuba',
        s : 'minutu balun',
        m : 'minutu ida',
        mm : 'minutus %d',
        h : 'horas ida',
        hh : 'horas %d',
        d : 'loron ida',
        dd : 'loron %d',
        M : 'fulan ida',
        MM : 'fulan %d',
        y : 'tinan ida',
        yy : 'tinan %d'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tet;

})));


/***/ }),
/* 200 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Thai [th]
//! author : Kridsada Thanabulpong : https://github.com/sirn

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var th = moment.defineLocale('th', {
    months : 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),
    monthsShort : 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),
    monthsParseExact: true,
    weekdays : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),
    weekdaysShort : 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์'.split('_'), // yes, three characters difference
    weekdaysMin : 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'H:mm',
        LTS : 'H:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY เวลา H:mm',
        LLLL : 'วันddddที่ D MMMM YYYY เวลา H:mm'
    },
    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
    isPM: function (input) {
        return input === 'หลังเที่ยง';
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'ก่อนเที่ยง';
        } else {
            return 'หลังเที่ยง';
        }
    },
    calendar : {
        sameDay : '[วันนี้ เวลา] LT',
        nextDay : '[พรุ่งนี้ เวลา] LT',
        nextWeek : 'dddd[หน้า เวลา] LT',
        lastDay : '[เมื่อวานนี้ เวลา] LT',
        lastWeek : '[วัน]dddd[ที่แล้ว เวลา] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'อีก %s',
        past : '%sที่แล้ว',
        s : 'ไม่กี่วินาที',
        m : '1 นาที',
        mm : '%d นาที',
        h : '1 ชั่วโมง',
        hh : '%d ชั่วโมง',
        d : '1 วัน',
        dd : '%d วัน',
        M : '1 เดือน',
        MM : '%d เดือน',
        y : '1 ปี',
        yy : '%d ปี'
    }
});

return th;

})));


/***/ }),
/* 201 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Tagalog (Philippines) [tl-ph]
//! author : Dan Hagman : https://github.com/hagmandan

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tlPh = moment.defineLocale('tl-ph', {
    months : 'Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre'.split('_'),
    monthsShort : 'Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis'.split('_'),
    weekdays : 'Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado'.split('_'),
    weekdaysShort : 'Lin_Lun_Mar_Miy_Huw_Biy_Sab'.split('_'),
    weekdaysMin : 'Li_Lu_Ma_Mi_Hu_Bi_Sab'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'MM/D/YYYY',
        LL : 'MMMM D, YYYY',
        LLL : 'MMMM D, YYYY HH:mm',
        LLLL : 'dddd, MMMM DD, YYYY HH:mm'
    },
    calendar : {
        sameDay: 'LT [ngayong araw]',
        nextDay: '[Bukas ng] LT',
        nextWeek: 'LT [sa susunod na] dddd',
        lastDay: 'LT [kahapon]',
        lastWeek: 'LT [noong nakaraang] dddd',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'sa loob ng %s',
        past : '%s ang nakalipas',
        s : 'ilang segundo',
        m : 'isang minuto',
        mm : '%d minuto',
        h : 'isang oras',
        hh : '%d oras',
        d : 'isang araw',
        dd : '%d araw',
        M : 'isang buwan',
        MM : '%d buwan',
        y : 'isang taon',
        yy : '%d taon'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlPh;

})));


/***/ }),
/* 202 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Klingon [tlh]
//! author : Dominika Kruk : https://github.com/amaranthrose

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var numbersNouns = 'pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut'.split('_');

function translateFuture(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'leS' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'waQ' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'nem' :
    time + ' pIq';
    return time;
}

function translatePast(output) {
    var time = output;
    time = (output.indexOf('jaj') !== -1) ?
    time.slice(0, -3) + 'Hu’' :
    (output.indexOf('jar') !== -1) ?
    time.slice(0, -3) + 'wen' :
    (output.indexOf('DIS') !== -1) ?
    time.slice(0, -3) + 'ben' :
    time + ' ret';
    return time;
}

function translate(number, withoutSuffix, string, isFuture) {
    var numberNoun = numberAsNoun(number);
    switch (string) {
        case 'mm':
            return numberNoun + ' tup';
        case 'hh':
            return numberNoun + ' rep';
        case 'dd':
            return numberNoun + ' jaj';
        case 'MM':
            return numberNoun + ' jar';
        case 'yy':
            return numberNoun + ' DIS';
    }
}

function numberAsNoun(number) {
    var hundred = Math.floor((number % 1000) / 100),
    ten = Math.floor((number % 100) / 10),
    one = number % 10,
    word = '';
    if (hundred > 0) {
        word += numbersNouns[hundred] + 'vatlh';
    }
    if (ten > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[ten] + 'maH';
    }
    if (one > 0) {
        word += ((word !== '') ? ' ' : '') + numbersNouns[one];
    }
    return (word === '') ? 'pagh' : word;
}

var tlh = moment.defineLocale('tlh', {
    months : 'tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’'.split('_'),
    monthsShort : 'jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’'.split('_'),
    monthsParseExact : true,
    weekdays : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysShort : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    weekdaysMin : 'lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[DaHjaj] LT',
        nextDay: '[wa’leS] LT',
        nextWeek: 'LLL',
        lastDay: '[wa’Hu’] LT',
        lastWeek: 'LLL',
        sameElse: 'L'
    },
    relativeTime : {
        future : translateFuture,
        past : translatePast,
        s : 'puS lup',
        m : 'wa’ tup',
        mm : translate,
        h : 'wa’ rep',
        hh : translate,
        d : 'wa’ jaj',
        dd : translate,
        M : 'wa’ jar',
        MM : translate,
        y : 'wa’ DIS',
        yy : translate
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return tlh;

})));


/***/ }),
/* 203 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Turkish [tr]
//! authors : Erhan Gundogan : https://github.com/erhangundogan,
//!           Burak Yiğit Kaya: https://github.com/BYK

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var suffixes = {
    1: '\'inci',
    5: '\'inci',
    8: '\'inci',
    70: '\'inci',
    80: '\'inci',
    2: '\'nci',
    7: '\'nci',
    20: '\'nci',
    50: '\'nci',
    3: '\'üncü',
    4: '\'üncü',
    100: '\'üncü',
    6: '\'ncı',
    9: '\'uncu',
    10: '\'uncu',
    30: '\'uncu',
    60: '\'ıncı',
    90: '\'ıncı'
};

var tr = moment.defineLocale('tr', {
    months : 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),
    monthsShort : 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),
    weekdays : 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),
    weekdaysShort : 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),
    weekdaysMin : 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[bugün saat] LT',
        nextDay : '[yarın saat] LT',
        nextWeek : '[gelecek] dddd [saat] LT',
        lastDay : '[dün] LT',
        lastWeek : '[geçen] dddd [saat] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s sonra',
        past : '%s önce',
        s : 'birkaç saniye',
        m : 'bir dakika',
        mm : '%d dakika',
        h : 'bir saat',
        hh : '%d saat',
        d : 'bir gün',
        dd : '%d gün',
        M : 'bir ay',
        MM : '%d ay',
        y : 'bir yıl',
        yy : '%d yıl'
    },
    dayOfMonthOrdinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
    ordinal : function (number) {
        if (number === 0) {  // special case for zero
            return number + '\'ıncı';
        }
        var a = number % 10,
            b = number % 100 - a,
            c = number >= 100 ? 100 : null;
        return number + (suffixes[a] || suffixes[b] || suffixes[c]);
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return tr;

})));


/***/ }),
/* 204 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Talossan [tzl]
//! author : Robin van der Vliet : https://github.com/robin0van0der0v
//! author : Iustì Canun

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


// After the year there should be a slash and the amount of years since December 26, 1979 in Roman numerals.
// This is currently too difficult (maybe even impossible) to add.
var tzl = moment.defineLocale('tzl', {
    months : 'Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar'.split('_'),
    monthsShort : 'Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec'.split('_'),
    weekdays : 'Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi'.split('_'),
    weekdaysShort : 'Súl_Lún_Mai_Már_Xhú_Vié_Sát'.split('_'),
    weekdaysMin : 'Sú_Lú_Ma_Má_Xh_Vi_Sá'.split('_'),
    longDateFormat : {
        LT : 'HH.mm',
        LTS : 'HH.mm.ss',
        L : 'DD.MM.YYYY',
        LL : 'D. MMMM [dallas] YYYY',
        LLL : 'D. MMMM [dallas] YYYY HH.mm',
        LLLL : 'dddd, [li] D. MMMM [dallas] YYYY HH.mm'
    },
    meridiemParse: /d\'o|d\'a/i,
    isPM : function (input) {
        return 'd\'o' === input.toLowerCase();
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'd\'o' : 'D\'O';
        } else {
            return isLower ? 'd\'a' : 'D\'A';
        }
    },
    calendar : {
        sameDay : '[oxhi à] LT',
        nextDay : '[demà à] LT',
        nextWeek : 'dddd [à] LT',
        lastDay : '[ieiri à] LT',
        lastWeek : '[sür el] dddd [lasteu à] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'osprei %s',
        past : 'ja%s',
        s : processRelativeTime,
        m : processRelativeTime,
        mm : processRelativeTime,
        h : processRelativeTime,
        hh : processRelativeTime,
        d : processRelativeTime,
        dd : processRelativeTime,
        M : processRelativeTime,
        MM : processRelativeTime,
        y : processRelativeTime,
        yy : processRelativeTime
    },
    dayOfMonthOrdinalParse: /\d{1,2}\./,
    ordinal : '%d.',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

function processRelativeTime(number, withoutSuffix, key, isFuture) {
    var format = {
        's': ['viensas secunds', '\'iensas secunds'],
        'm': ['\'n míut', '\'iens míut'],
        'mm': [number + ' míuts', '' + number + ' míuts'],
        'h': ['\'n þora', '\'iensa þora'],
        'hh': [number + ' þoras', '' + number + ' þoras'],
        'd': ['\'n ziua', '\'iensa ziua'],
        'dd': [number + ' ziuas', '' + number + ' ziuas'],
        'M': ['\'n mes', '\'iens mes'],
        'MM': [number + ' mesen', '' + number + ' mesen'],
        'y': ['\'n ar', '\'iens ar'],
        'yy': [number + ' ars', '' + number + ' ars']
    };
    return isFuture ? format[key][0] : (withoutSuffix ? format[key][0] : format[key][1]);
}

return tzl;

})));


/***/ }),
/* 205 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight Latin [tzm-latn]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tzmLatn = moment.defineLocale('tzm-latn', {
    months : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    monthsShort : 'innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir'.split('_'),
    weekdays : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysShort : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    weekdaysMin : 'asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[asdkh g] LT',
        nextDay: '[aska g] LT',
        nextWeek: 'dddd [g] LT',
        lastDay: '[assant g] LT',
        lastWeek: 'dddd [g] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'dadkh s yan %s',
        past : 'yan %s',
        s : 'imik',
        m : 'minuḍ',
        mm : '%d minuḍ',
        h : 'saɛa',
        hh : '%d tassaɛin',
        d : 'ass',
        dd : '%d ossan',
        M : 'ayowr',
        MM : '%d iyyirn',
        y : 'asgas',
        yy : '%d isgasn'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzmLatn;

})));


/***/ }),
/* 206 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Central Atlas Tamazight [tzm]
//! author : Abdel Said : https://github.com/abdelsaid

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var tzm = moment.defineLocale('tzm', {
    months : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    monthsShort : 'ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ'.split('_'),
    weekdays : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysShort : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    weekdaysMin : 'ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS: 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[ⴰⵙⴷⵅ ⴴ] LT',
        nextDay: '[ⴰⵙⴽⴰ ⴴ] LT',
        nextWeek: 'dddd [ⴴ] LT',
        lastDay: '[ⴰⵚⴰⵏⵜ ⴴ] LT',
        lastWeek: 'dddd [ⴴ] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : 'ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s',
        past : 'ⵢⴰⵏ %s',
        s : 'ⵉⵎⵉⴽ',
        m : 'ⵎⵉⵏⵓⴺ',
        mm : '%d ⵎⵉⵏⵓⴺ',
        h : 'ⵙⴰⵄⴰ',
        hh : '%d ⵜⴰⵙⵙⴰⵄⵉⵏ',
        d : 'ⴰⵙⵙ',
        dd : '%d oⵙⵙⴰⵏ',
        M : 'ⴰⵢoⵓⵔ',
        MM : '%d ⵉⵢⵢⵉⵔⵏ',
        y : 'ⴰⵙⴳⴰⵙ',
        yy : '%d ⵉⵙⴳⴰⵙⵏ'
    },
    week : {
        dow : 6, // Saturday is the first day of the week.
        doy : 12  // The week that contains Jan 1st is the first week of the year.
    }
});

return tzm;

})));


/***/ }),
/* 207 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Ukrainian [uk]
//! author : zemlanin : https://github.com/zemlanin
//! Author : Menelion Elensúle : https://github.com/Oire

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


function plural(word, num) {
    var forms = word.split('_');
    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);
}
function relativeTimeWithPlural(number, withoutSuffix, key) {
    var format = {
        'mm': withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',
        'hh': withoutSuffix ? 'година_години_годин' : 'годину_години_годин',
        'dd': 'день_дні_днів',
        'MM': 'місяць_місяці_місяців',
        'yy': 'рік_роки_років'
    };
    if (key === 'm') {
        return withoutSuffix ? 'хвилина' : 'хвилину';
    }
    else if (key === 'h') {
        return withoutSuffix ? 'година' : 'годину';
    }
    else {
        return number + ' ' + plural(format[key], +number);
    }
}
function weekdaysCaseReplace(m, format) {
    var weekdays = {
        'nominative': 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),
        'accusative': 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),
        'genitive': 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')
    };

    if (!m) {
        return weekdays['nominative'];
    }

    var nounCase = (/(\[[ВвУу]\]) ?dddd/).test(format) ?
        'accusative' :
        ((/\[?(?:минулої|наступної)? ?\] ?dddd/).test(format) ?
            'genitive' :
            'nominative');
    return weekdays[nounCase][m.day()];
}
function processHoursFunction(str) {
    return function () {
        return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';
    };
}

var uk = moment.defineLocale('uk', {
    months : {
        'format': 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),
        'standalone': 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')
    },
    monthsShort : 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),
    weekdays : weekdaysCaseReplace,
    weekdaysShort : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    weekdaysMin : 'нд_пн_вт_ср_чт_пт_сб'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD.MM.YYYY',
        LL : 'D MMMM YYYY р.',
        LLL : 'D MMMM YYYY р., HH:mm',
        LLLL : 'dddd, D MMMM YYYY р., HH:mm'
    },
    calendar : {
        sameDay: processHoursFunction('[Сьогодні '),
        nextDay: processHoursFunction('[Завтра '),
        lastDay: processHoursFunction('[Вчора '),
        nextWeek: processHoursFunction('[У] dddd ['),
        lastWeek: function () {
            switch (this.day()) {
                case 0:
                case 3:
                case 5:
                case 6:
                    return processHoursFunction('[Минулої] dddd [').call(this);
                case 1:
                case 2:
                case 4:
                    return processHoursFunction('[Минулого] dddd [').call(this);
            }
        },
        sameElse: 'L'
    },
    relativeTime : {
        future : 'за %s',
        past : '%s тому',
        s : 'декілька секунд',
        m : relativeTimeWithPlural,
        mm : relativeTimeWithPlural,
        h : 'годину',
        hh : relativeTimeWithPlural,
        d : 'день',
        dd : relativeTimeWithPlural,
        M : 'місяць',
        MM : relativeTimeWithPlural,
        y : 'рік',
        yy : relativeTimeWithPlural
    },
    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason
    meridiemParse: /ночі|ранку|дня|вечора/,
    isPM: function (input) {
        return /^(дня|вечора)$/.test(input);
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 4) {
            return 'ночі';
        } else if (hour < 12) {
            return 'ранку';
        } else if (hour < 17) {
            return 'дня';
        } else {
            return 'вечора';
        }
    },
    dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
    ordinal: function (number, period) {
        switch (period) {
            case 'M':
            case 'd':
            case 'DDD':
            case 'w':
            case 'W':
                return number + '-й';
            case 'D':
                return number + '-го';
            default:
                return number;
        }
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uk;

})));


/***/ }),
/* 208 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Urdu [ur]
//! author : Sawood Alam : https://github.com/ibnesayeed
//! author : Zack : https://github.com/ZackVision

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var months = [
    'جنوری',
    'فروری',
    'مارچ',
    'اپریل',
    'مئی',
    'جون',
    'جولائی',
    'اگست',
    'ستمبر',
    'اکتوبر',
    'نومبر',
    'دسمبر'
];
var days = [
    'اتوار',
    'پیر',
    'منگل',
    'بدھ',
    'جمعرات',
    'جمعہ',
    'ہفتہ'
];

var ur = moment.defineLocale('ur', {
    months : months,
    monthsShort : months,
    weekdays : days,
    weekdaysShort : days,
    weekdaysMin : days,
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd، D MMMM YYYY HH:mm'
    },
    meridiemParse: /صبح|شام/,
    isPM : function (input) {
        return 'شام' === input;
    },
    meridiem : function (hour, minute, isLower) {
        if (hour < 12) {
            return 'صبح';
        }
        return 'شام';
    },
    calendar : {
        sameDay : '[آج بوقت] LT',
        nextDay : '[کل بوقت] LT',
        nextWeek : 'dddd [بوقت] LT',
        lastDay : '[گذشتہ روز بوقت] LT',
        lastWeek : '[گذشتہ] dddd [بوقت] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : '%s بعد',
        past : '%s قبل',
        s : 'چند سیکنڈ',
        m : 'ایک منٹ',
        mm : '%d منٹ',
        h : 'ایک گھنٹہ',
        hh : '%d گھنٹے',
        d : 'ایک دن',
        dd : '%d دن',
        M : 'ایک ماہ',
        MM : '%d ماہ',
        y : 'ایک سال',
        yy : '%d سال'
    },
    preparse: function (string) {
        return string.replace(/،/g, ',');
    },
    postformat: function (string) {
        return string.replace(/,/g, '،');
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return ur;

})));


/***/ }),
/* 209 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek Latin [uz-latn]
//! author : Rasulbek Mirzayev : github.com/Rasulbeeek

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var uzLatn = moment.defineLocale('uz-latn', {
    months : 'Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr'.split('_'),
    monthsShort : 'Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek'.split('_'),
    weekdays : 'Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba'.split('_'),
    weekdaysShort : 'Yak_Dush_Sesh_Chor_Pay_Jum_Shan'.split('_'),
    weekdaysMin : 'Ya_Du_Se_Cho_Pa_Ju_Sha'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Bugun soat] LT [da]',
        nextDay : '[Ertaga] LT [da]',
        nextWeek : 'dddd [kuni soat] LT [da]',
        lastDay : '[Kecha soat] LT [da]',
        lastWeek : '[O\'tgan] dddd [kuni soat] LT [da]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Yaqin %s ichida',
        past : 'Bir necha %s oldin',
        s : 'soniya',
        m : 'bir daqiqa',
        mm : '%d daqiqa',
        h : 'bir soat',
        hh : '%d soat',
        d : 'bir kun',
        dd : '%d kun',
        M : 'bir oy',
        MM : '%d oy',
        y : 'bir yil',
        yy : '%d yil'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 1st is the first week of the year.
    }
});

return uzLatn;

})));


/***/ }),
/* 210 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Uzbek [uz]
//! author : Sardor Muminov : https://github.com/muminoff

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var uz = moment.defineLocale('uz', {
    months : 'январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр'.split('_'),
    monthsShort : 'янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек'.split('_'),
    weekdays : 'Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба'.split('_'),
    weekdaysShort : 'Якш_Душ_Сеш_Чор_Пай_Жум_Шан'.split('_'),
    weekdaysMin : 'Як_Ду_Се_Чо_Па_Жу_Ша'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'D MMMM YYYY, dddd HH:mm'
    },
    calendar : {
        sameDay : '[Бугун соат] LT [да]',
        nextDay : '[Эртага] LT [да]',
        nextWeek : 'dddd [куни соат] LT [да]',
        lastDay : '[Кеча соат] LT [да]',
        lastWeek : '[Утган] dddd [куни соат] LT [да]',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'Якин %s ичида',
        past : 'Бир неча %s олдин',
        s : 'фурсат',
        m : 'бир дакика',
        mm : '%d дакика',
        h : 'бир соат',
        hh : '%d соат',
        d : 'бир кун',
        dd : '%d кун',
        M : 'бир ой',
        MM : '%d ой',
        y : 'бир йил',
        yy : '%d йил'
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 7  // The week that contains Jan 4th is the first week of the year.
    }
});

return uz;

})));


/***/ }),
/* 211 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Vietnamese [vi]
//! author : Bang Nguyen : https://github.com/bangnk

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var vi = moment.defineLocale('vi', {
    months : 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),
    monthsShort : 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),
    monthsParseExact : true,
    weekdays : 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),
    weekdaysShort : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysMin : 'CN_T2_T3_T4_T5_T6_T7'.split('_'),
    weekdaysParseExact : true,
    meridiemParse: /sa|ch/i,
    isPM : function (input) {
        return /^ch$/i.test(input);
    },
    meridiem : function (hours, minutes, isLower) {
        if (hours < 12) {
            return isLower ? 'sa' : 'SA';
        } else {
            return isLower ? 'ch' : 'CH';
        }
    },
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM [năm] YYYY',
        LLL : 'D MMMM [năm] YYYY HH:mm',
        LLLL : 'dddd, D MMMM [năm] YYYY HH:mm',
        l : 'DD/M/YYYY',
        ll : 'D MMM YYYY',
        lll : 'D MMM YYYY HH:mm',
        llll : 'ddd, D MMM YYYY HH:mm'
    },
    calendar : {
        sameDay: '[Hôm nay lúc] LT',
        nextDay: '[Ngày mai lúc] LT',
        nextWeek: 'dddd [tuần tới lúc] LT',
        lastDay: '[Hôm qua lúc] LT',
        lastWeek: 'dddd [tuần rồi lúc] LT',
        sameElse: 'L'
    },
    relativeTime : {
        future : '%s tới',
        past : '%s trước',
        s : 'vài giây',
        m : 'một phút',
        mm : '%d phút',
        h : 'một giờ',
        hh : '%d giờ',
        d : 'một ngày',
        dd : '%d ngày',
        M : 'một tháng',
        MM : '%d tháng',
        y : 'một năm',
        yy : '%d năm'
    },
    dayOfMonthOrdinalParse: /\d{1,2}/,
    ordinal : function (number) {
        return number;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return vi;

})));


/***/ }),
/* 212 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Pseudo [x-pseudo]
//! author : Andrew Hood : https://github.com/andrewhood125

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var xPseudo = moment.defineLocale('x-pseudo', {
    months : 'J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér'.split('_'),
    monthsShort : 'J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc'.split('_'),
    monthsParseExact : true,
    weekdays : 'S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý'.split('_'),
    weekdaysShort : 'S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát'.split('_'),
    weekdaysMin : 'S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá'.split('_'),
    weekdaysParseExact : true,
    longDateFormat : {
        LT : 'HH:mm',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY HH:mm',
        LLLL : 'dddd, D MMMM YYYY HH:mm'
    },
    calendar : {
        sameDay : '[T~ódá~ý át] LT',
        nextDay : '[T~ómó~rró~w át] LT',
        nextWeek : 'dddd [át] LT',
        lastDay : '[Ý~ést~érdá~ý át] LT',
        lastWeek : '[L~ást] dddd [át] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'í~ñ %s',
        past : '%s á~gó',
        s : 'á ~féw ~sécó~ñds',
        m : 'á ~míñ~úté',
        mm : '%d m~íñú~tés',
        h : 'á~ñ hó~úr',
        hh : '%d h~óúrs',
        d : 'á ~dáý',
        dd : '%d d~áýs',
        M : 'á ~móñ~th',
        MM : '%d m~óñt~hs',
        y : 'á ~ýéár',
        yy : '%d ý~éárs'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
    ordinal : function (number) {
        var b = number % 10,
            output = (~~(number % 100 / 10) === 1) ? 'th' :
            (b === 1) ? 'st' :
            (b === 2) ? 'nd' :
            (b === 3) ? 'rd' : 'th';
        return number + output;
    },
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return xPseudo;

})));


/***/ }),
/* 213 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Yoruba Nigeria [yo]
//! author : Atolagbe Abisoye : https://github.com/andela-batolagbe

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var yo = moment.defineLocale('yo', {
    months : 'Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀'.split('_'),
    monthsShort : 'Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀'.split('_'),
    weekdays : 'Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta'.split('_'),
    weekdaysShort : 'Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá'.split('_'),
    weekdaysMin : 'Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb'.split('_'),
    longDateFormat : {
        LT : 'h:mm A',
        LTS : 'h:mm:ss A',
        L : 'DD/MM/YYYY',
        LL : 'D MMMM YYYY',
        LLL : 'D MMMM YYYY h:mm A',
        LLLL : 'dddd, D MMMM YYYY h:mm A'
    },
    calendar : {
        sameDay : '[Ònì ni] LT',
        nextDay : '[Ọ̀la ni] LT',
        nextWeek : 'dddd [Ọsẹ̀ tón\'bọ] [ni] LT',
        lastDay : '[Àna ni] LT',
        lastWeek : 'dddd [Ọsẹ̀ tólọ́] [ni] LT',
        sameElse : 'L'
    },
    relativeTime : {
        future : 'ní %s',
        past : '%s kọjá',
        s : 'ìsẹjú aayá die',
        m : 'ìsẹjú kan',
        mm : 'ìsẹjú %d',
        h : 'wákati kan',
        hh : 'wákati %d',
        d : 'ọjọ́ kan',
        dd : 'ọjọ́ %d',
        M : 'osù kan',
        MM : 'osù %d',
        y : 'ọdún kan',
        yy : 'ọdún %d'
    },
    dayOfMonthOrdinalParse : /ọjọ́\s\d{1,2}/,
    ordinal : 'ọjọ́ %d',
    week : {
        dow : 1, // Monday is the first day of the week.
        doy : 4 // The week that contains Jan 4th is the first week of the year.
    }
});

return yo;

})));


/***/ }),
/* 214 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (China) [zh-cn]
//! author : suupic : https://github.com/suupic
//! author : Zeno Zeng : https://github.com/zenozeng

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhCn = moment.defineLocale('zh-cn', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '周日_周一_周二_周三_周四_周五_周六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日Ah点mm分',
        LLLL : 'YYYY年MMMD日ddddAh点mm分',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour: function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' ||
                meridiem === '上午') {
            return hour;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        } else {
            // '中午'
            return hour >= 11 ? hour : hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd':
            case 'D':
            case 'DDD':
                return number + '日';
            case 'M':
                return number + '月';
            case 'w':
            case 'W':
                return number + '周';
            default:
                return number;
        }
    },
    relativeTime : {
        future : '%s内',
        past : '%s前',
        s : '几秒',
        m : '1 分钟',
        mm : '%d 分钟',
        h : '1 小时',
        hh : '%d 小时',
        d : '1 天',
        dd : '%d 天',
        M : '1 个月',
        MM : '%d 个月',
        y : '1 年',
        yy : '%d 年'
    },
    week : {
        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效
        dow : 1, // Monday is the first day of the week.
        doy : 4  // The week that contains Jan 4th is the first week of the year.
    }
});

return zhCn;

})));


/***/ }),
/* 215 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Hong Kong) [zh-hk]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris
//! author : Konstantin : https://github.com/skfd

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhHk = moment.defineLocale('zh-hk', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日 HH:mm',
        LLLL : 'YYYY年MMMD日dddd HH:mm',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhHk;

})));


/***/ }),
/* 216 */
/***/ (function(module, exports, __webpack_require__) {

//! moment.js locale configuration
//! locale : Chinese (Taiwan) [zh-tw]
//! author : Ben : https://github.com/ben-lin
//! author : Chris Lam : https://github.com/hehachris

;(function (global, factory) {
    true ? factory(__webpack_require__(0)) :
   typeof define === 'function' && define.amd ? define(['../moment'], factory) :
   factory(global.moment)
}(this, (function (moment) { 'use strict';


var zhTw = moment.defineLocale('zh-tw', {
    months : '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),
    monthsShort : '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),
    weekdays : '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),
    weekdaysShort : '週日_週一_週二_週三_週四_週五_週六'.split('_'),
    weekdaysMin : '日_一_二_三_四_五_六'.split('_'),
    longDateFormat : {
        LT : 'HH:mm',
        LTS : 'HH:mm:ss',
        L : 'YYYY年MMMD日',
        LL : 'YYYY年MMMD日',
        LLL : 'YYYY年MMMD日 HH:mm',
        LLLL : 'YYYY年MMMD日dddd HH:mm',
        l : 'YYYY年MMMD日',
        ll : 'YYYY年MMMD日',
        lll : 'YYYY年MMMD日 HH:mm',
        llll : 'YYYY年MMMD日dddd HH:mm'
    },
    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
    meridiemHour : function (hour, meridiem) {
        if (hour === 12) {
            hour = 0;
        }
        if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {
            return hour;
        } else if (meridiem === '中午') {
            return hour >= 11 ? hour : hour + 12;
        } else if (meridiem === '下午' || meridiem === '晚上') {
            return hour + 12;
        }
    },
    meridiem : function (hour, minute, isLower) {
        var hm = hour * 100 + minute;
        if (hm < 600) {
            return '凌晨';
        } else if (hm < 900) {
            return '早上';
        } else if (hm < 1130) {
            return '上午';
        } else if (hm < 1230) {
            return '中午';
        } else if (hm < 1800) {
            return '下午';
        } else {
            return '晚上';
        }
    },
    calendar : {
        sameDay : '[今天]LT',
        nextDay : '[明天]LT',
        nextWeek : '[下]ddddLT',
        lastDay : '[昨天]LT',
        lastWeek : '[上]ddddLT',
        sameElse : 'L'
    },
    dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
    ordinal : function (number, period) {
        switch (period) {
            case 'd' :
            case 'D' :
            case 'DDD' :
                return number + '日';
            case 'M' :
                return number + '月';
            case 'w' :
            case 'W' :
                return number + '週';
            default :
                return number;
        }
    },
    relativeTime : {
        future : '%s內',
        past : '%s前',
        s : '幾秒',
        m : '1 分鐘',
        mm : '%d 分鐘',
        h : '1 小時',
        hh : '%d 小時',
        d : '1 天',
        dd : '%d 天',
        M : '1 個月',
        MM : '%d 個月',
        y : '1 年',
        yy : '%d 年'
    }
});

return zhTw;

})));


/***/ }),
/* 217 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(1);
var dragula_provider_1 = __webpack_require__(51);
var dragula_class_1 = __webpack_require__(50);
var DragulaDirective = (function () {
    function DragulaDirective(el, dragulaService) {
        this.el = el;
        this.dragulaService = dragulaService;
        this.container = el.nativeElement;
    }
    DragulaDirective.prototype.ngOnInit = function () {
        var _this = this;
        // console.log(this.bag);
        var bag = this.dragulaService.find(this.dragula);
        var checkModel = function () {
            if (_this.dragulaModel) {
                if (_this.drake.models) {
                    _this.drake.models.push(_this.dragulaModel);
                }
                else {
                    _this.drake.models = [_this.dragulaModel];
                }
            }
        };
        if (bag) {
            this.drake = bag.drake;
            checkModel();
            this.drake.containers.push(this.container);
        }
        else {
            this.drake = dragula_class_1.dragula([this.container], Object.assign({}, this.dragulaOptions));
            checkModel();
            this.dragulaService.add(this.dragula, this.drake);
        }
    };
    DragulaDirective.prototype.ngOnChanges = function (changes) {
        // console.log('dragula.directive: ngOnChanges');
        // console.log(changes);
        if (changes && changes.dragulaModel) {
            if (this.drake) {
                if (this.drake.models) {
                    var modelIndex = this.drake.models.indexOf(changes.dragulaModel.previousValue);
                    this.drake.models.splice(modelIndex, 1, changes.dragulaModel.currentValue);
                }
                else {
                    this.drake.models = [changes.dragulaModel.currentValue];
                }
            }
        }
    };
    return DragulaDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DragulaDirective.prototype, "dragula", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], DragulaDirective.prototype, "dragulaModel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Object)
], DragulaDirective.prototype, "dragulaOptions", void 0);
DragulaDirective = __decorate([
    core_1.Directive({ selector: '[dragula]' }),
    __metadata("design:paramtypes", [core_1.ElementRef, dragula_provider_1.DragulaService])
], DragulaDirective);
exports.DragulaDirective = DragulaDirective;


/***/ }),
/* 218 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var index_1 = __webpack_require__(52);
exports.dragula = index_1.dragula;
exports.DragulaDirective = index_1.DragulaDirective;
exports.DragulaModule = index_1.DragulaModule;
exports.DragulaService = index_1.DragulaService;


/***/ }),
/* 219 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(646);

/***/ }),
/* 220 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(650);

/***/ }),
/* 221 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(364);
var core_1 = __webpack_require__(1);
var angular2_universal_1 = __webpack_require__(220);
var app_module_1 = __webpack_require__(230);
__webpack_require__(365);
var rootElemTagName = 'app'; // Update this if you change your root component selector
// Enable either Hot Module Reloading or production mode
if (true) {
    module['hot'].accept();
    module['hot'].dispose(function () {
        // Before restarting the app, we create a new root element and dispose the old one
        var oldRootElem = document.querySelector(rootElemTagName);
        var newRootElem = document.createElement(rootElemTagName);
        oldRootElem.parentNode.insertBefore(newRootElem, oldRootElem);
        platform.destroy();
    });
}
else {
    core_1.enableProdMode();
}
// Boot the application, either now or when the DOM content is loaded
var platform = angular2_universal_1.platformUniversalDynamic();
var bootApplication = function () { platform.bootstrapModule(app_module_1.AppModule); };
if (document.readyState === 'complete') {
    bootApplication();
}
else {
    document.addEventListener('DOMContentLoaded', bootApplication);
}


/***/ }),
/* 222 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(__resourceQuery, module) {/*eslint-env browser*/
/*global __resourceQuery __webpack_public_path__*/

var options = {
  path: "/__webpack_hmr",
  timeout: 20 * 1000,
  overlay: true,
  reload: false,
  log: true,
  warn: true,
  name: '',
  autoConnect: true,
  overlayStyles: {},
  ansiColors: {}
};
if (true) {
  var querystring = __webpack_require__(351);
  var overrides = querystring.parse(__resourceQuery.slice(1));
  setOverrides(overrides);
}

if (typeof window === 'undefined') {
  // do nothing
} else if (typeof window.EventSource === 'undefined') {
  console.warn(
    "webpack-hot-middleware's client requires EventSource to work. " +
    "You should include a polyfill if you want to support this browser: " +
    "https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events#Tools"
  );
} else {
  if (options.autoConnect) {
    connect();
  }
}

/* istanbul ignore next */
function setOptionsAndConnect(overrides) {
  setOverrides(overrides);
  connect();
}

function setOverrides(overrides) {
  if (overrides.autoConnect) options.autoConnect = overrides.autoConnect == 'true';
  if (overrides.path) options.path = overrides.path;
  if (overrides.timeout) options.timeout = overrides.timeout;
  if (overrides.overlay) options.overlay = overrides.overlay !== 'false';
  if (overrides.reload) options.reload = overrides.reload !== 'false';
  if (overrides.noInfo && overrides.noInfo !== 'false') {
    options.log = false;
  }
  if (overrides.name) {
    options.name = overrides.name;
  }
  if (overrides.quiet && overrides.quiet !== 'false') {
    options.log = false;
    options.warn = false;
  }

  if (overrides.dynamicPublicPath) {
    options.path = __webpack_require__.p + options.path;
  }

  if (overrides.ansiColors) options.ansiColors = JSON.parse(overrides.ansiColors);
  if (overrides.overlayStyles) options.overlayStyles = JSON.parse(overrides.overlayStyles);
}

function EventSourceWrapper() {
  var source;
  var lastActivity = new Date();
  var listeners = [];

  init();
  var timer = setInterval(function() {
    if ((new Date() - lastActivity) > options.timeout) {
      handleDisconnect();
    }
  }, options.timeout / 2);

  function init() {
    source = new window.EventSource(options.path);
    source.onopen = handleOnline;
    source.onerror = handleDisconnect;
    source.onmessage = handleMessage;
  }

  function handleOnline() {
    if (options.log) console.log("[HMR] connected");
    lastActivity = new Date();
  }

  function handleMessage(event) {
    lastActivity = new Date();
    for (var i = 0; i < listeners.length; i++) {
      listeners[i](event);
    }
  }

  function handleDisconnect() {
    clearInterval(timer);
    source.close();
    setTimeout(init, options.timeout);
  }

  return {
    addMessageListener: function(fn) {
      listeners.push(fn);
    }
  };
}

function getEventSourceWrapper() {
  if (!window.__whmEventSourceWrapper) {
    window.__whmEventSourceWrapper = {};
  }
  if (!window.__whmEventSourceWrapper[options.path]) {
    // cache the wrapper for other entries loaded on
    // the same page with the same options.path
    window.__whmEventSourceWrapper[options.path] = EventSourceWrapper();
  }
  return window.__whmEventSourceWrapper[options.path];
}

function connect() {
  getEventSourceWrapper().addMessageListener(handleMessage);

  function handleMessage(event) {
    if (event.data == "\uD83D\uDC93") {
      return;
    }
    try {
      processMessage(JSON.parse(event.data));
    } catch (ex) {
      if (options.warn) {
        console.warn("Invalid HMR message: " + event.data + "\n" + ex);
      }
    }
  }
}

// the reporter needs to be a singleton on the page
// in case the client is being used by multiple bundles
// we only want to report once.
// all the errors will go to all clients
var singletonKey = '__webpack_hot_middleware_reporter__';
var reporter;
if (typeof window !== 'undefined') {
  if (!window[singletonKey]) {
    window[singletonKey] = createReporter();
  }
  reporter = window[singletonKey];
}

function createReporter() {
  var strip = __webpack_require__(352);

  var overlay;
  if (typeof document !== 'undefined' && options.overlay) {
    overlay = __webpack_require__(357)({
      ansiColors: options.ansiColors,
      overlayStyles: options.overlayStyles
    });
  }

  var styles = {
    errors: "color: #ff0000;",
    warnings: "color: #999933;"
  };
  var previousProblems = null;
  function log(type, obj) {
    var newProblems = obj[type].map(function(msg) { return strip(msg); }).join('\n');
    if (previousProblems == newProblems) {
      return;
    } else {
      previousProblems = newProblems;
    }

    var style = styles[type];
    var name = obj.name ? "'" + obj.name + "' " : "";
    var title = "[HMR] bundle " + name + "has " + obj[type].length + " " + type;
    // NOTE: console.warn or console.error will print the stack trace
    // which isn't helpful here, so using console.log to escape it.
    if (console.group && console.groupEnd) {
      console.group("%c" + title, style);
      console.log("%c" + newProblems, style);
      console.groupEnd();
    } else {
      console.log(
        "%c" + title + "\n\t%c" + newProblems.replace(/\n/g, "\n\t"),
        style + "font-weight: bold;",
        style + "font-weight: normal;"
      );
    }
  }

  return {
    cleanProblemsCache: function () {
      previousProblems = null;
    },
    problems: function(type, obj) {
      if (options.warn) {
        log(type, obj);
      }
      if (overlay && type !== 'warnings') overlay.showProblems(type, obj[type]);
    },
    success: function() {
      if (overlay) overlay.clear();
    },
    useCustomOverlay: function(customOverlay) {
      overlay = customOverlay;
    }
  };
}

var processUpdate = __webpack_require__(358);

var customHandler;
var subscribeAllHandler;
function processMessage(obj) {
  switch(obj.action) {
    case "building":
      if (options.log) {
        console.log(
          "[HMR] bundle " + (obj.name ? "'" + obj.name + "' " : "") +
          "rebuilding"
        );
      }
      break;
    case "built":
      if (options.log) {
        console.log(
          "[HMR] bundle " + (obj.name ? "'" + obj.name + "' " : "") +
          "rebuilt in " + obj.time + "ms"
        );
      }
      // fall through
    case "sync":
      if (obj.name && options.name && obj.name !== options.name) {
        return;
      }
      if (obj.errors.length > 0) {
        if (reporter) reporter.problems('errors', obj);
      } else {
        if (reporter) {
          if (obj.warnings.length > 0) {
            reporter.problems('warnings', obj);
          } else {
            reporter.cleanProblemsCache();
          }
          reporter.success();
        }
        processUpdate(obj.hash, obj.modules, options);
      }
      break;
    default:
      if (customHandler) {
        customHandler(obj);
      }
  }

  if (subscribeAllHandler) {
    subscribeAllHandler(obj);
  }
}

if (module) {
  module.exports = {
    subscribeAll: function subscribeAll(handler) {
      subscribeAllHandler = handler;
    },
    subscribe: function subscribe(handler) {
      customHandler = handler;
    },
    useCustomOverlay: function useCustomOverlay(customOverlay) {
      if (reporter) reporter.useCustomOverlay(customOverlay);
    },
    setOptionsAndConnect: setOptionsAndConnect
  };
}

/* WEBPACK VAR INJECTION */}.call(exports, "?path=%2F__webpack_hmr", __webpack_require__(219)(module)))

/***/ }),
/* 223 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(652);

/***/ }),
/* 224 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * angular2-cookie - Implementation of Angular 1.x $cookies service to Angular 2
 * @version v1.2.6
 * @link https://github.com/salemdar/angular2-cookie#readme
 * @license MIT
 */

var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var common_1 = __webpack_require__(54);
var core_1 = __webpack_require__(1);
/** @private */
var CookieOptions = (function () {
    function CookieOptions(_a) {
        var _b = _a === void 0 ? {} : _a, path = _b.path, domain = _b.domain, expires = _b.expires, secure = _b.secure;
        this.path = this.isPresent(path) ? path : null;
        this.domain = this.isPresent(domain) ? domain : null;
        this.expires = this.isPresent(expires) ? expires : null;
        this.secure = this.isPresent(secure) ? secure : false;
    }
    CookieOptions.prototype.merge = function (options) {
        return new CookieOptions({
            path: this.isPresent(options) && this.isPresent(options.path) ? options.path : this.path,
            domain: this.isPresent(options) && this.isPresent(options.domain) ? options.domain :
                this.domain,
            expires: this.isPresent(options) && this.isPresent(options.expires) ? options.expires :
                this.expires,
            secure: this.isPresent(options) && this.isPresent(options.secure) ? options.secure :
                this.secure,
        });
    };
    CookieOptions.prototype.isPresent = function (obj) {
        return obj !== undefined && obj !== null;
    };
    return CookieOptions;
}());
exports.CookieOptions = CookieOptions;
/** @private */
var BaseCookieOptions = (function (_super) {
    __extends(BaseCookieOptions, _super);
    function BaseCookieOptions(baseHref) {
        _super.call(this, { path: baseHref || '/' });
        this.baseHref = baseHref;
    }
    BaseCookieOptions = __decorate([
        core_1.Injectable(),
        __param(0, core_1.Optional()),
        __param(0, core_1.Inject(common_1.APP_BASE_HREF)), 
        __metadata('design:paramtypes', [String])
    ], BaseCookieOptions);
    return BaseCookieOptions;
}(CookieOptions));
exports.BaseCookieOptions = BaseCookieOptions;

//# sourceMappingURL=base-cookie-options.js.map


/***/ }),
/* 225 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = ansiHTML

// Reference to https://github.com/sindresorhus/ansi-regex
var _regANSI = /(?:(?:\u001b\[)|\u009b)(?:(?:[0-9]{1,3})?(?:(?:;[0-9]{0,3})*)?[A-M|f-m])|\u001b[A-M]/

var _defColors = {
  reset: ['fff', '000'], // [FOREGROUD_COLOR, BACKGROUND_COLOR]
  black: '000',
  red: 'ff0000',
  green: '209805',
  yellow: 'e8bf03',
  blue: '0000ff',
  magenta: 'ff00ff',
  cyan: '00ffee',
  lightgrey: 'f0f0f0',
  darkgrey: '888'
}
var _styles = {
  30: 'black',
  31: 'red',
  32: 'green',
  33: 'yellow',
  34: 'blue',
  35: 'magenta',
  36: 'cyan',
  37: 'lightgrey'
}
var _openTags = {
  '1': 'font-weight:bold', // bold
  '2': 'opacity:0.5', // dim
  '3': '<i>', // italic
  '4': '<u>', // underscore
  '8': 'display:none', // hidden
  '9': '<del>' // delete
}
var _closeTags = {
  '23': '</i>', // reset italic
  '24': '</u>', // reset underscore
  '29': '</del>' // reset delete
}

;[0, 21, 22, 27, 28, 39, 49].forEach(function (n) {
  _closeTags[n] = '</span>'
})

/**
 * Converts text with ANSI color codes to HTML markup.
 * @param {String} text
 * @returns {*}
 */
function ansiHTML (text) {
  // Returns the text if the string has no ANSI escape code.
  if (!_regANSI.test(text)) {
    return text
  }

  // Cache opened sequence.
  var ansiCodes = []
  // Replace with markup.
  var ret = text.replace(/\033\[(\d+)*m/g, function (match, seq) {
    var ot = _openTags[seq]
    if (ot) {
      // If current sequence has been opened, close it.
      if (!!~ansiCodes.indexOf(seq)) { // eslint-disable-line no-extra-boolean-cast
        ansiCodes.pop()
        return '</span>'
      }
      // Open tag.
      ansiCodes.push(seq)
      return ot[0] === '<' ? ot : '<span style="' + ot + ';">'
    }

    var ct = _closeTags[seq]
    if (ct) {
      // Pop sequence
      ansiCodes.pop()
      return ct
    }
    return ''
  })

  // Make sure tags are closed.
  var l = ansiCodes.length
  ;(l > 0) && (ret += Array(l + 1).join('</span>'))

  return ret
}

/**
 * Customize colors.
 * @param {Object} colors reference to _defColors
 */
ansiHTML.setColors = function (colors) {
  if (typeof colors !== 'object') {
    throw new Error('`colors` parameter must be an Object.')
  }

  var _finalColors = {}
  for (var key in _defColors) {
    var hex = colors.hasOwnProperty(key) ? colors[key] : null
    if (!hex) {
      _finalColors[key] = _defColors[key]
      continue
    }
    if ('reset' === key) {
      if (typeof hex === 'string') {
        hex = [hex]
      }
      if (!Array.isArray(hex) || hex.length === 0 || hex.some(function (h) {
        return typeof h !== 'string'
      })) {
        throw new Error('The value of `' + key + '` property must be an Array and each item could only be a hex string, e.g.: FF0000')
      }
      var defHexColor = _defColors[key]
      if (!hex[0]) {
        hex[0] = defHexColor[0]
      }
      if (hex.length === 1 || !hex[1]) {
        hex = [hex[0]]
        hex.push(defHexColor[1])
      }

      hex = hex.slice(0, 2)
    } else if (typeof hex !== 'string') {
      throw new Error('The value of `' + key + '` property must be a hex string, e.g.: FF0000')
    }
    _finalColors[key] = hex
  }
  _setTags(_finalColors)
}

/**
 * Reset colors.
 */
ansiHTML.reset = function () {
  _setTags(_defColors)
}

/**
 * Expose tags, including open and close.
 * @type {Object}
 */
ansiHTML.tags = {}

if (Object.defineProperty) {
  Object.defineProperty(ansiHTML.tags, 'open', {
    get: function () { return _openTags }
  })
  Object.defineProperty(ansiHTML.tags, 'close', {
    get: function () { return _closeTags }
  })
} else {
  ansiHTML.tags.open = _openTags
  ansiHTML.tags.close = _closeTags
}

function _setTags (colors) {
  // reset all
  _openTags['0'] = 'font-weight:normal;opacity:1;color:#' + colors.reset[0] + ';background:#' + colors.reset[1]
  // inverse
  _openTags['7'] = 'color:#' + colors.reset[1] + ';background:#' + colors.reset[0]
  // dark grey
  _openTags['90'] = 'color:#' + colors.darkgrey

  for (var code in _styles) {
    var color = _styles[code]
    var oriColor = colors[color] || '000'
    _openTags[code] = 'color:#' + oriColor
    code = parseInt(code)
    _openTags[(code + 10).toString()] = 'background:#' + oriColor
  }
}

ansiHTML.reset()


/***/ }),
/* 226 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

module.exports = function () {
	return /[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-PRZcf-nqry=><]/g;
};


/***/ }),
/* 227 */
/***/ (function(module, exports) {

module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }


/***/ }),
/* 228 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var app_routing_component_1 = __webpack_require__(56);
exports.appRoutes = [
    {
        path: '',
        pathMatch: 'full',
        component: app_routing_component_1.AppRoutingComponent
        //redirectTo: '/dashboard'
    }
];


/***/ }),
/* 229 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var setting_service_1 = __webpack_require__(26);
var AppComponent = (function () {
    function AppComponent(settingService) {
        this.settingService = settingService;
    }
    Object.defineProperty(AppComponent.prototype, "isCollapsed", {
        get: function () {
            return !this.settingService.layout.isCollapsed;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AppComponent.prototype, "isPinned", {
        get: function () {
            return this.settingService.layout.isPinned;
        },
        enumerable: true,
        configurable: true
    });
    return AppComponent;
}());
__decorate([
    core_1.HostBinding('class.windows'),
    core_1.HostBinding('class.desktop'),
    core_1.HostBinding('class.pace-done'),
    core_1.HostBinding('class.sidebar-visible'),
    core_1.HostBinding('class.menu-pin'),
    core_1.HostBinding('class.sidebar-open'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], AppComponent.prototype, "isCollapsed", null);
__decorate([
    core_1.HostBinding('class.menu-pin'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], AppComponent.prototype, "isPinned", null);
AppComponent = __decorate([
    core_1.Component({
        selector: 'body',
        template: __webpack_require__(293)
    }),
    __metadata("design:paramtypes", [setting_service_1.SettingService])
], AppComponent);
exports.AppComponent = AppComponent;


/***/ }),
/* 230 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var angular2_universal_1 = __webpack_require__(220);
var app_component_1 = __webpack_require__(229);
var app_routing_module_1 = __webpack_require__(228);
var core_module_1 = __webpack_require__(231);
var layout_module_1 = __webpack_require__(249);
var shared_module_1 = __webpack_require__(17);
// feature modules
var admin_module_1 = __webpack_require__(233);
var auth_module_1 = __webpack_require__(235);
var client_module_1 = __webpack_require__(237);
var dashboard_module_1 = __webpack_require__(239);
var employee_module_1 = __webpack_require__(241);
var job_module_1 = __webpack_require__(243);
var app_routing_component_1 = __webpack_require__(56);
var create_pdf_module_1 = __webpack_require__(245);
var AppModule = (function () {
    function AppModule() {
    }
    return AppModule;
}());
AppModule = __decorate([
    core_1.NgModule({
        bootstrap: [app_component_1.AppComponent],
        declarations: [
            app_component_1.AppComponent, app_routing_component_1.AppRoutingComponent
        ],
        imports: [
            angular2_universal_1.UniversalModule,
            core_module_1.CoreModule,
            layout_module_1.LayoutModule,
            shared_module_1.SharedModule,
            // feature modules
            auth_module_1.AuthModule,
            dashboard_module_1.DashboardModule,
            client_module_1.ClientModule,
            job_module_1.JobModule,
            employee_module_1.EmployeeModule,
            admin_module_1.AdminModule,
            create_pdf_module_1.CreatePDFModule,
            router_1.RouterModule.forRoot(app_routing_module_1.appRoutes)
        ],
        providers: [
            { provide: 'API_BASE', useValue: API_BASE },
            { provide: 'API_VERSION', useValue: API_VERSION },
            { provide: 'AZURE_FILE_PATH', useValue: AZURE_FILE_PATH }
        ]
    })
], AppModule);
exports.AppModule = AppModule;


/***/ }),
/* 231 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var cookies_service_1 = __webpack_require__(55);
var notification_service_1 = __webpack_require__(4);
var setting_service_1 = __webpack_require__(26);
var state_service_1 = __webpack_require__(2);
var address_service_1 = __webpack_require__(29);
var ar_terms_service_1 = __webpack_require__(24);
var auth_service_1 = __webpack_require__(39);
var client_service_1 = __webpack_require__(12);
var contact_service_1 = __webpack_require__(32);
var common_service_1 = __webpack_require__(40);
var employee_service_1 = __webpack_require__(19);
var job_service_1 = __webpack_require__(13);
var location_service_1 = __webpack_require__(33);
var modal_service_1 = __webpack_require__(5);
var permission_service_1 = __webpack_require__(58);
var role_service_1 = __webpack_require__(25);
var user_service_1 = __webpack_require__(34);
var transaction_service_1 = __webpack_require__(41);
var create_pdf_service_1 = __webpack_require__(57);
var workinstruction_service_1 = __webpack_require__(27);
var production_report_service_1 = __webpack_require__(59);
var riskassessment_service_1 = __webpack_require__(60);
/**
 * The CoreModule contains all services used by more than one feature module.
 * Per Angular style guides, it can only be loaded at the AppModule level of the
 * application.
 */
var CoreModule = (function () {
    function CoreModule(parentModule) {
        if (parentModule) {
            throw new Error('CoreModule is already loaded. Import it in the AppModule only');
        }
    }
    return CoreModule;
}());
CoreModule = __decorate([
    core_1.NgModule({
        providers: [
            cookies_service_1.CookieService,
            notification_service_1.NotificationService,
            setting_service_1.SettingService,
            state_service_1.StateService,
            address_service_1.AddressService,
            ar_terms_service_1.ARTermService,
            auth_service_1.AuthService,
            client_service_1.ClientService,
            contact_service_1.ContactService,
            common_service_1.CommonService,
            employee_service_1.EmployeeService,
            job_service_1.JobServices,
            location_service_1.LocationService,
            modal_service_1.ModalService,
            permission_service_1.PermissionService,
            role_service_1.RoleService,
            user_service_1.UserService,
            create_pdf_service_1.CreatePDFService,
            transaction_service_1.TransactionService,
            workinstruction_service_1.WorkInstructionService,
            production_report_service_1.ProductionReportServices,
            riskassessment_service_1.RiskAssessmentService
        ]
    }),
    __param(0, core_1.Optional()), __param(0, core_1.SkipSelf()),
    __metadata("design:paramtypes", [CoreModule])
], CoreModule);
exports.CoreModule = CoreModule;


/***/ }),
/* 232 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var ar_terms_component_1 = __webpack_require__(65);
var ar_terms_add_component_1 = __webpack_require__(63);
var ar_terms_detail_component_1 = __webpack_require__(64);
var role_component_1 = __webpack_require__(68);
var role_add_component_1 = __webpack_require__(66);
var role_detail_component_1 = __webpack_require__(67);
var user_component_1 = __webpack_require__(69);
var address_component_1 = __webpack_require__(62);
var address_detail_component_1 = __webpack_require__(61);
var auth_guard_1 = __webpack_require__(21);
/**
 * Routes associated with the /admin path
 */
exports.adminRoutes = [
    {
        path: 'admin',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        data: {
            menuItem: {
                text: 'Admin',
                icon: 'fa-cogs',
                iconBgClass: 'bg-primary-dark',
                requiredPrivileges: ['users', 'arterms', 'roles']
            }
        },
        children: [
            {
                path: 'ar-terms',
                data: {
                    menuItem: {
                        text: 'AR Terms',
                        icon: 'fa-usd',
                        link: '/admin/ar-terms',
                        pageTitle: 'AR Terms',
                        requiredPrivileges: ['arterms']
                    }
                },
                children: [
                    {
                        path: '',
                        pathMatch: 'full',
                        component: ar_terms_component_1.ARTermsComponent
                    },
                    {
                        path: 'add',
                        component: ar_terms_add_component_1.ARTermsAddComponent,
                        data: {
                            menuItem: {
                                link: '/admin/ar-terms/add',
                                pageTitle: 'Add AR Term',
                                requiredPrivileges: ['arterms-add']
                            }
                        }
                    },
                    {
                        path: 'detail/:id',
                        component: ar_terms_detail_component_1.ARTermsDetailComponent,
                        data: {
                            menuItem: {
                                link: '/admin/ar-terms/detail/:id',
                                pageTitle: 'AR Term Detail',
                                requiredPrivileges: ['arterms']
                            }
                        }
                    }
                ]
            },
            {
                path: 'roles',
                data: {
                    menuItem: {
                        text: 'User Roles',
                        icon: 'fa-shield',
                        link: '/admin/roles',
                        pageTitle: 'Roles',
                        requiredPrivileges: ['roles']
                    }
                },
                children: [
                    {
                        path: '',
                        pathMatch: 'full',
                        component: role_component_1.RoleComponent
                    },
                    {
                        path: 'add',
                        component: role_add_component_1.RoleAddComponent,
                        data: {
                            menuItem: {
                                link: '/admin/roles/add',
                                pageTitle: 'Add Role',
                                requiredPrivileges: ['roles-add']
                            }
                        }
                    },
                    {
                        path: 'detail/:id',
                        component: role_detail_component_1.RoleDetailComponent,
                        data: {
                            menuItem: {
                                link: '/admin/roles/detail/:id',
                                pageTitle: 'Role Detail',
                                requiredPrivileges: ['roles']
                            }
                        }
                    }
                ]
            },
            {
                path: 'users',
                component: user_component_1.UserComponent,
                data: {
                    menuItem: {
                        text: 'Users',
                        link: '/admin/users',
                        icon: 'fa-users',
                        pageTitle: 'Users',
                        requiredPrivileges: ['users']
                    }
                }
            },
            {
                path: 'addresses',
                data: {
                    menuItem: {
                        text: 'Addresses',
                        icon: 'fa-address-card',
                        link: '/admin/addresses',
                        pageTitle: 'Addresses',
                        requiredPrivileges: ['addresses']
                    }
                },
                children: [
                    {
                        path: '',
                        pathMatch: 'full',
                        component: address_component_1.AddressComponent
                    },
                    {
                        path: ':id', component: address_detail_component_1.AddressDetailComponent,
                        data: {
                            menuItem: {
                                link: '/admin/addresses/:id',
                                pageTitle: 'Address Detail',
                                requiredPrivileges: ['addresses']
                            }
                        }
                    }
                ]
            }
        ]
    }
];


/***/ }),
/* 233 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var ar_terms_component_1 = __webpack_require__(65);
var ar_terms_add_component_1 = __webpack_require__(63);
var ar_terms_detail_component_1 = __webpack_require__(64);
var role_component_1 = __webpack_require__(68);
var role_add_component_1 = __webpack_require__(66);
var role_detail_component_1 = __webpack_require__(67);
var user_component_1 = __webpack_require__(69);
var address_component_1 = __webpack_require__(62);
var address_detail_component_1 = __webpack_require__(61);
var admin_routing_module_1 = __webpack_require__(232);
var shared_module_1 = __webpack_require__(17);
/**
 * Module to manage all administrative tasks
 */
var AdminModule = (function () {
    function AdminModule() {
    }
    return AdminModule;
}());
AdminModule = __decorate([
    core_1.NgModule({
        declarations: [
            ar_terms_component_1.ARTermsComponent,
            ar_terms_add_component_1.ARTermsAddComponent,
            ar_terms_detail_component_1.ARTermsDetailComponent,
            role_component_1.RoleComponent,
            role_add_component_1.RoleAddComponent,
            role_detail_component_1.RoleDetailComponent,
            user_component_1.UserComponent,
            address_component_1.AddressComponent,
            address_detail_component_1.AddressDetailComponent
        ],
        imports: [
            shared_module_1.SharedModule,
            router_1.RouterModule.forChild(admin_routing_module_1.adminRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], AdminModule);
exports.AdminModule = AdminModule;


/***/ }),
/* 234 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var auth_component_1 = __webpack_require__(70);
var login_component_1 = __webpack_require__(71);
var logout_component_1 = __webpack_require__(72);
/**
 * Routes for path at /auth
 */
exports.authRoutes = [
    {
        path: 'auth',
        component: auth_component_1.AuthComponent,
        children: [
            { path: '', pathMatch: 'full', redirectTo: '/auth/login' },
            { path: 'login', component: login_component_1.LoginComponent },
            { path: 'logout', component: logout_component_1.LogoutComponent },
        ]
    }
];


/***/ }),
/* 235 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var shared_module_1 = __webpack_require__(17);
var auth_component_1 = __webpack_require__(70);
var login_component_1 = __webpack_require__(71);
var logout_component_1 = __webpack_require__(72);
var auth_routing_module_1 = __webpack_require__(234);
/**
 * Module to control login/logout for application
 */
var AuthModule = (function () {
    function AuthModule() {
    }
    return AuthModule;
}());
AuthModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_module_1.SharedModule,
            router_1.RouterModule.forChild(auth_routing_module_1.authRoutes)
        ],
        declarations: [
            auth_component_1.AuthComponent,
            login_component_1.LoginComponent,
            logout_component_1.LogoutComponent
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], AuthModule);
exports.AuthModule = AuthModule;


/***/ }),
/* 236 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var client_component_1 = __webpack_require__(75);
var client_add_component_1 = __webpack_require__(73);
var client_detail_component_1 = __webpack_require__(74);
var location_detail_component_1 = __webpack_require__(77);
var auth_guard_1 = __webpack_require__(21);
var contact_detail_component_1 = __webpack_require__(76);
exports.clientRoutes = [
    {
        path: 'clients',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        data: {
            menuItem: {
                text: 'Clients',
                icon: 'fa-building',
                link: '/clients',
                pageTitle: 'Clients',
                iconBgClass: 'bg-info',
                requiredPrivileges: ['clients']
            }
        },
        children: [
            {
                path: '', pathMatch: 'full', component: client_component_1.ClientComponent
            },
            {
                path: 'add', component: client_add_component_1.ClientAddComponent,
                data: {
                    menuItem: {
                        link: '/clients/add',
                        pageTitle: 'Add Client',
                        requiredPrivileges: ['clients-add']
                    }
                }
            },
            {
                path: ':id', component: client_detail_component_1.ClientDetailComponent,
                data: {
                    menuItem: {
                        link: '/clients/:id',
                        pageTitle: 'Client Detail',
                        requiredPrivileges: ['clients']
                    }
                }
            },
            {
                path: ':id/locations/:locationId',
                component: location_detail_component_1.LocationDetailComponent,
                canActivateChild: [auth_guard_1.AuthGuard],
                data: {
                    menuItem: {
                        link: '/clients/:id/locations/:locationId',
                        pageTitle: 'Edit Location',
                        requiredPrivileges: ['locations']
                    }
                }
            },
            {
                path: ':id/contacts/:contactId',
                component: contact_detail_component_1.ContactDetailComponent,
                canActivateChild: [auth_guard_1.AuthGuard],
                data: {
                    menuItem: {
                        link: '/clients/:id/contacts/:contactId',
                        pageTitle: 'Edit Contact',
                        requiredPrivileges: ['contacts']
                    }
                }
            }
        ]
    }
];


/***/ }),
/* 237 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var client_component_1 = __webpack_require__(75);
var client_add_component_1 = __webpack_require__(73);
var client_detail_component_1 = __webpack_require__(74);
var client_routing_module_1 = __webpack_require__(236);
var location_detail_component_1 = __webpack_require__(77);
var contact_detail_component_1 = __webpack_require__(76);
var shared_module_1 = __webpack_require__(17);
var ClientModule = (function () {
    function ClientModule() {
    }
    return ClientModule;
}());
ClientModule = __decorate([
    core_1.NgModule({
        declarations: [
            client_component_1.ClientComponent,
            client_add_component_1.ClientAddComponent,
            client_detail_component_1.ClientDetailComponent,
            location_detail_component_1.LocationDetailComponent,
            contact_detail_component_1.ContactDetailComponent
        ],
        imports: [
            shared_module_1.SharedModule,
            router_1.RouterModule.forChild(client_routing_module_1.clientRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], ClientModule);
exports.ClientModule = ClientModule;


/***/ }),
/* 238 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var dashboard_component_1 = __webpack_require__(78);
var auth_guard_1 = __webpack_require__(21);
exports.dashboardRoutes = [
    {
        path: 'dashboard',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        data: {
            menuItem: {
                text: 'Dashboard',
                link: '/dashboard',
                initials: 'Db',
                icon: 'fa-tachometer',
                pageTitle: 'Dashboard',
                iconBgClass: 'bg-success'
            }
        },
        children: [
            {
                path: '', pathMatch: 'full', component: dashboard_component_1.DashboardComponent
            }
        ]
    }
];


/***/ }),
/* 239 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var dashboard_component_1 = __webpack_require__(78);
var dashboard_routing_module_1 = __webpack_require__(238);
/**
 * Module for dashboard features
 */
var DashboardModule = (function () {
    function DashboardModule() {
    }
    return DashboardModule;
}());
DashboardModule = __decorate([
    core_1.NgModule({
        declarations: [
            dashboard_component_1.DashboardComponent
        ],
        imports: [
            router_1.RouterModule.forChild(dashboard_routing_module_1.dashboardRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], DashboardModule);
exports.DashboardModule = DashboardModule;


/***/ }),
/* 240 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var employee_component_1 = __webpack_require__(81);
var employee_add_component_1 = __webpack_require__(79);
var employee_detail_component_1 = __webpack_require__(80);
var auth_guard_1 = __webpack_require__(21);
exports.employeeRoutes = [
    {
        path: 'employees',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        data: {
            menuItem: {
                text: 'Employees',
                link: '/employees',
                icon: 'fa-id-badge',
                pageTitle: 'Employees',
                iconBgClass: 'bg-complete',
                requiredPrivileges: ['employees']
            }
        },
        children: [
            {
                path: '', pathMatch: 'full', component: employee_component_1.EmployeeComponent
            },
            {
                path: 'add', component: employee_add_component_1.EmployeeAddComponent,
                data: {
                    menuItem: {
                        link: '/employees/add',
                        pageTitle: 'Add Employee',
                        requiredPrivileges: ['employees-add']
                    }
                }
            },
            {
                path: 'detail/:id', component: employee_detail_component_1.EmployeeDetailComponent,
                data: {
                    menuItem: {
                        link: '/employees/detail:id',
                        pageTitle: 'Employee Detail',
                        requiredPrivileges: ['employees']
                    }
                }
            }
        ]
    }
];


/***/ }),
/* 241 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var employee_component_1 = __webpack_require__(81);
var employee_add_component_1 = __webpack_require__(79);
var employee_detail_component_1 = __webpack_require__(80);
var employee_routing_module_1 = __webpack_require__(240);
var ng2_dual_list_box_1 = __webpack_require__(348);
var shared_module_1 = __webpack_require__(17);
/**
 * Module for managing employees
 */
var EmployeeModule = (function () {
    function EmployeeModule() {
    }
    return EmployeeModule;
}());
EmployeeModule = __decorate([
    core_1.NgModule({
        declarations: [
            employee_component_1.EmployeeComponent,
            employee_add_component_1.EmployeeAddComponent,
            employee_detail_component_1.EmployeeDetailComponent
        ],
        imports: [
            shared_module_1.SharedModule,
            ng2_dual_list_box_1.DualListBoxModule.forRoot(),
            router_1.RouterModule.forChild(employee_routing_module_1.employeeRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], EmployeeModule);
exports.EmployeeModule = EmployeeModule;


/***/ }),
/* 242 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var job_component_1 = __webpack_require__(42);
var job_route_component_1 = __webpack_require__(86);
var work_instruction_detail_component_1 = __webpack_require__(89);
var work_instruction_defect_detail_component_1 = __webpack_require__(88);
var job_closure_component_1 = __webpack_require__(82);
var auth_guard_1 = __webpack_require__(21);
exports.jobRoutes = [
    {
        path: 'jobs',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        data: {
            menuItem: {
                text: 'Jobs',
                icon: 'fa-cubes',
                link: '/jobs',
                pageTitle: 'Jobs',
                iconBgClass: 'bg-menu-light',
                requiredPrivileges: ['jobs']
            }
        },
        children: [
            {
                path: '', pathMatch: 'full', component: job_component_1.JobComponent
            },
            {
                path: ':id', component: job_route_component_1.JobRouteComponent,
                data: {
                    menuItem: {
                        link: '/jobs/:id',
                        pageTitle: 'Job Detail',
                        requiredPrivileges: ['jobs']
                    }
                }
            },
            {
                path: ':id/work-instructions/:workInstructionId', component: work_instruction_detail_component_1.WorkInstructionDetailComponent,
                data: {
                    menuItem: {
                        link: '/jobs/:id/work-instructions/:workInstructionId',
                        pageTitle: 'WorkInstruction Detail',
                        requiredPrivileges: ['workinstructions']
                    }
                }
            },
            {
                path: ':id/work-instructions/:workInstructionId/steps/:stepId', component: work_instruction_defect_detail_component_1.WorkInstructionStepDetailComponent,
                data: {
                    menuItem: {
                        link: '/jobs/:id/work-instructions/:workInstructionId/steps/:stepId',
                        pageTitle: 'WorkInstruction Defect Detail',
                        requiredPrivileges: ['workinstructions']
                    }
                }
            },
            {
                path: ':id/closure', component: job_closure_component_1.JobClosureComponent,
                data: {
                    menuItem: {
                        link: '/jobs/:id/closure',
                        pageTitle: 'Job Closure',
                        requiredPrivileges: ['jobclosure']
                    }
                }
            }
        ]
    }
];


/***/ }),
/* 243 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var job_component_1 = __webpack_require__(42);
var job_detail_component_1 = __webpack_require__(83);
var job_routing_module_1 = __webpack_require__(242);
var job_route_component_1 = __webpack_require__(86);
var job_request_component_1 = __webpack_require__(85);
var job_quote_component_1 = __webpack_require__(84);
var job_closure_component_1 = __webpack_require__(82);
var ng2_dragula_1 = __webpack_require__(52);
var shared_module_1 = __webpack_require__(17);
var work_instruction_module_1 = __webpack_require__(246);
var JobModule = (function () {
    function JobModule() {
    }
    return JobModule;
}());
JobModule = __decorate([
    core_1.NgModule({
        declarations: [
            job_component_1.JobComponent,
            job_detail_component_1.JobDetailComponent,
            job_request_component_1.JobRequestComponent,
            job_route_component_1.JobRouteComponent,
            job_quote_component_1.JobQuoteComponent,
            job_closure_component_1.JobClosureComponent
        ],
        entryComponents: [job_route_component_1.JobRouteComponent, job_detail_component_1.JobDetailComponent, job_request_component_1.JobRequestComponent, job_quote_component_1.JobQuoteComponent],
        imports: [
            shared_module_1.SharedModule,
            ng2_dragula_1.DragulaModule,
            work_instruction_module_1.WorkInstructionModule,
            router_1.RouterModule.forChild(job_routing_module_1.jobRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], JobModule);
exports.JobModule = JobModule;


/***/ }),
/* 244 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var layout_component_1 = __webpack_require__(20);
var create_pdf_component_1 = __webpack_require__(87);
var auth_guard_1 = __webpack_require__(21);
exports.CreatePDFRoutes = [
    {
        path: 'testpdf',
        component: layout_component_1.LayoutComponent,
        canActivateChild: [auth_guard_1.AuthGuard],
        children: [
            {
                path: '', pathMatch: 'full', component: create_pdf_component_1.CreatePDFComponent
            }
        ]
    }
];


/***/ }),
/* 245 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var create_pdf_component_1 = __webpack_require__(87);
var create_pdf_routing_module_1 = __webpack_require__(244);
/**
 * Module for dashboard features
 */
var CreatePDFModule = (function () {
    function CreatePDFModule() {
    }
    return CreatePDFModule;
}());
CreatePDFModule = __decorate([
    core_1.NgModule({
        declarations: [
            create_pdf_component_1.CreatePDFComponent
        ],
        imports: [
            router_1.RouterModule.forChild(create_pdf_routing_module_1.CreatePDFRoutes)
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], CreatePDFModule);
exports.CreatePDFModule = CreatePDFModule;


/***/ }),
/* 246 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var work_instruction_detail_component_1 = __webpack_require__(89);
var work_instruction_defect_detail_component_1 = __webpack_require__(88);
var ng2_dragula_1 = __webpack_require__(52);
var shared_module_1 = __webpack_require__(17);
/**
 * Module for managing workinstructions
 */
var WorkInstructionModule = (function () {
    function WorkInstructionModule() {
    }
    return WorkInstructionModule;
}());
WorkInstructionModule = __decorate([
    core_1.NgModule({
        declarations: [
            work_instruction_detail_component_1.WorkInstructionDetailComponent,
            work_instruction_defect_detail_component_1.WorkInstructionStepDetailComponent
        ],
        imports: [
            shared_module_1.SharedModule,
            ng2_dragula_1.DragulaModule
        ],
        exports: [
            router_1.RouterModule
        ]
    })
], WorkInstructionModule);
exports.WorkInstructionModule = WorkInstructionModule;


/***/ }),
/* 247 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var state_service_1 = __webpack_require__(2);
var FooterComponent = (function () {
    function FooterComponent(router, stateService) {
        this.router = router;
        this.stateService = stateService;
    }
    return FooterComponent;
}());
FooterComponent = __decorate([
    core_1.Component({
        selector: 'app-footer',
        template: __webpack_require__(323)
    }),
    __metadata("design:paramtypes", [router_1.Router,
        state_service_1.StateService])
], FooterComponent);
exports.FooterComponent = FooterComponent;


/***/ }),
/* 248 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(18);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var setting_service_1 = __webpack_require__(26);
var transaction_service_1 = __webpack_require__(41);
var authenticated_component_base_1 = __webpack_require__(6);
var HeaderComponent = (function (_super) {
    __extends(HeaderComponent, _super);
    function HeaderComponent(API_BASE, API_VERSION, sanitizer, modalService, notificationService, stateService, settingService, transactionService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.API_BASE = API_BASE;
        _this.API_VERSION = API_VERSION;
        _this.sanitizer = sanitizer;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.stateService = stateService;
        _this.settingService = settingService;
        _this.transactionService = transactionService;
        _this.profileImage = _this.sanitizer.bypassSecurityTrustUrl(_this.API_BASE + '/api/v' + _this.API_VERSION + '/profileimage/' + _this.stateService.currentUser.id.toString());
        return _this;
    }
    HeaderComponent.prototype.toggleSidebar = function () {
        this.settingService.toggleSetting('isCollapsed');
    };
    return HeaderComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
HeaderComponent = __decorate([
    core_1.Component({
        selector: 'app-header',
        template: __webpack_require__(324)
    }),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, platform_browser_1.DomSanitizer,
        modal_service_1.ModalService,
        notification_service_1.NotificationService,
        state_service_1.StateService,
        setting_service_1.SettingService,
        transaction_service_1.TransactionService])
], HeaderComponent);
exports.HeaderComponent = HeaderComponent;


/***/ }),
/* 249 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var footer_component_1 = __webpack_require__(247);
var header_component_1 = __webpack_require__(248);
var layout_component_1 = __webpack_require__(20);
var notification_bar_component_1 = __webpack_require__(250);
var notification_popup_component_1 = __webpack_require__(251);
var sidebar_component_1 = __webpack_require__(255);
var menu_top_level_component_1 = __webpack_require__(253);
var menu_sub_level_component_1 = __webpack_require__(252);
var shared_module_1 = __webpack_require__(17);
var LayoutModule = (function () {
    function LayoutModule(parentModule) {
        if (parentModule) {
            throw new Error('LayoutModule is already loaded. Import it in the AppModule only');
        }
    }
    return LayoutModule;
}());
LayoutModule = __decorate([
    core_1.NgModule({
        imports: [
            shared_module_1.SharedModule
        ],
        declarations: [
            footer_component_1.FooterComponent,
            header_component_1.HeaderComponent,
            layout_component_1.LayoutComponent,
            notification_bar_component_1.NotificationBarComponent,
            notification_popup_component_1.NotificationPopupComponent,
            sidebar_component_1.SidebarComponent,
            menu_top_level_component_1.MenuTopLevelComponent,
            menu_sub_level_component_1.MenuSubLevelComponent
        ]
    }),
    __param(0, core_1.Optional()), __param(0, core_1.SkipSelf()),
    __metadata("design:paramtypes", [LayoutModule])
], LayoutModule);
exports.LayoutModule = LayoutModule;


/***/ }),
/* 250 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var notification_service_1 = __webpack_require__(4);
var slide_up_down_animation_1 = __webpack_require__(256);
var NotificationBarComponent = (function () {
    function NotificationBarComponent(notificationService) {
        var _this = this;
        this.notificationService = notificationService;
        this.notifications = new Array();
        notificationService.notifications$.subscribe(function (notice) {
            var id = Date.now().toString();
            notice.id = id;
            _this.notifications.push(notice);
            setTimeout(function () {
                var ind = -1;
                _this.notifications.forEach(function (n, i) {
                    if (n.id == id) {
                        ind = i;
                    }
                });
                if (ind > -1) {
                    _this.notifications.splice(ind, 1);
                }
            }, 5000);
        });
    }
    NotificationBarComponent.prototype.closeNotice = function (index) {
        this.notifications.splice(index, 1);
    };
    return NotificationBarComponent;
}());
NotificationBarComponent = __decorate([
    core_1.Component({
        selector: 'notification-bar',
        template: __webpack_require__(326),
        animations: [slide_up_down_animation_1.slideUpDownAnimation]
    }),
    __metadata("design:paramtypes", [notification_service_1.NotificationService])
], NotificationBarComponent);
exports.NotificationBarComponent = NotificationBarComponent;


/***/ }),
/* 251 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var transaction_service_1 = __webpack_require__(41);
/**
 * Component to handle the notification globe and dropdown in the header
 */
var NotificationPopupComponent = (function () {
    function NotificationPopupComponent(transactionService, router) {
        var _this = this;
        this.transactionService = transactionService;
        this.router = router;
        this.hasUnread = false;
        this.transactions = new Array();
        this.transactionService.getTransactions();
        transactionService.transactions.subscribe(function (transaction) {
            _this.transactions = transaction;
            _this.hasUnread = _this.transactions.filter(function (t) { return t.isRead == false; }).length > 0;
        });
    }
    /**
     * Marks a transaction as read
     * @param currentTransaction {Transaction} Transaction to mark as read
     */
    NotificationPopupComponent.prototype.markTransactionAsRead = function (currentTransaction) {
        var _this = this;
        this.transactionService.markTransactionAsRead(currentTransaction.id)
            .subscribe(function (s) {
            currentTransaction.isRead = true;
            _this.hasUnread = _this.transactions.filter(function (t) { return t.isRead == false; }).length > 0;
        });
    };
    /**
     * Redirects the user to the appropriate location for their notification
     * @param transaction {Transaction} Transaction to route for
     */
    NotificationPopupComponent.prototype.routeNotification = function (transaction) {
        this.markTransactionAsRead(transaction);
        if (transaction.jobId != null) {
            this.router.navigate(['jobs', transaction.jobId]);
        }
    };
    /**
     * Marks all transactions as read
     */
    NotificationPopupComponent.prototype.markAllRead = function () {
        for (var i = 0; i < this.transactions.length; i++) {
            this.markTransactionAsRead(this.transactions[i]);
        }
        this.hasUnread = false;
    };
    return NotificationPopupComponent;
}());
NotificationPopupComponent = __decorate([
    core_1.Component({
        selector: 'notification-popup',
        template: __webpack_require__(327)
    }),
    __metadata("design:paramtypes", [transaction_service_1.TransactionService,
        router_1.Router])
], NotificationPopupComponent);
exports.NotificationPopupComponent = NotificationPopupComponent;


/***/ }),
/* 252 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var router_1 = __webpack_require__(3);
var menu_item_model_1 = __webpack_require__(94);
var MenuSubLevelComponent = (function () {
    function MenuSubLevelComponent(router) {
        this.router = router;
    }
    MenuSubLevelComponent.prototype.navigate = function () {
        if (this.menuItem.link) {
            var link = this.menuItem.link.toString();
            this.router.navigate([link]);
        }
    };
    return MenuSubLevelComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", menu_item_model_1.MenuItem)
], MenuSubLevelComponent.prototype, "menuItem", void 0);
MenuSubLevelComponent = __decorate([
    core_1.Component({
        selector: 'menu-sublevel',
        template: __webpack_require__(328)
    }),
    __metadata("design:paramtypes", [router_1.Router])
], MenuSubLevelComponent);
exports.MenuSubLevelComponent = MenuSubLevelComponent;


/***/ }),
/* 253 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(18);
var router_1 = __webpack_require__(3);
var setting_service_1 = __webpack_require__(26);
var menu_animation_1 = __webpack_require__(254);
var menu_item_model_1 = __webpack_require__(94);
var notification_service_1 = __webpack_require__(4);
var MenuTopLevelComponent = (function () {
    function MenuTopLevelComponent(sanitizer, titleService, router, activatedRoute, notificationService, settingService) {
        this.sanitizer = sanitizer;
        this.titleService = titleService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.notificationService = notificationService;
        this.settingService = settingService;
        this.hasSubmenu = false;
    }
    MenuTopLevelComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this.menuItem.submenu) {
            this.menuItem.submenu.forEach(function (item) {
                if (item.icon) {
                    _this.hasSubmenu = true;
                }
            });
        }
    };
    MenuTopLevelComponent.prototype.navigate = function () {
        if (!this.hasSubmenu) {
            this.router.navigate([this.menuItem.link]);
        }
        else {
            this.toggleExpansion();
        }
    };
    MenuTopLevelComponent.prototype.toggleExpansion = function () {
        this.menuItem.isExpanded = !this.menuItem.isExpanded;
    };
    return MenuTopLevelComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", menu_item_model_1.MenuItem)
], MenuTopLevelComponent.prototype, "menuItem", void 0);
MenuTopLevelComponent = __decorate([
    core_1.Component({
        selector: 'menu-toplevel',
        template: __webpack_require__(329),
        animations: [menu_animation_1.subMenuAnimation]
    }),
    __metadata("design:paramtypes", [platform_browser_1.DomSanitizer,
        platform_browser_1.Title,
        router_1.Router,
        router_1.ActivatedRoute,
        notification_service_1.NotificationService,
        setting_service_1.SettingService])
], MenuTopLevelComponent);
exports.MenuTopLevelComponent = MenuTopLevelComponent;


/***/ }),
/* 254 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
exports.subMenuAnimation = core_1.trigger('expansionChanged', [
    core_1.state('true', core_1.style({
        display: 'block'
    })),
    core_1.state('false', core_1.style({
        display: 'none'
    })),
    core_1.transition('1 => 0', [
        core_1.style({ height: '*', overflow: 'hidden' }),
        core_1.animate(100, core_1.style({ height: 0 }))
    ]),
    core_1.transition('0 => 1', [
        core_1.style({ height: 0, overflow: 'hidden' }),
        core_1.animate(100, core_1.style({ height: '*' }))
    ])
]);


/***/ }),
/* 255 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(18);
var router_1 = __webpack_require__(3);
var setting_service_1 = __webpack_require__(26);
var state_service_1 = __webpack_require__(2);
var SidebarComponent = (function () {
    function SidebarComponent(sanitizer, titleService, router, activatedRoute, settingService, stateService) {
        this.sanitizer = sanitizer;
        this.titleService = titleService;
        this.router = router;
        this.activatedRoute = activatedRoute;
        this.settingService = settingService;
        this.stateService = stateService;
        this.menuItems = new Array();
    }
    SidebarComponent.prototype.ngOnInit = function () {
        var _this = this;
        var routeTree = this.router.config;
        this.menuItems = this.traverseRoutes(routeTree);
        this.router.events
            .filter(function (event) { return event instanceof router_1.NavigationEnd; })
            .map(function () { return _this.activatedRoute; })
            .map(function (route) {
            while (route.firstChild)
                route = route.firstChild;
            return route;
        })
            .filter(function (route) { return route.outlet === 'primary'; })
            .mergeMap(function (route) { return route.data; })
            .subscribe(function (event) {
            _this.menuItems.forEach(function (menuItem) {
                _this.clearMenuItemState(menuItem);
            });
            if (event.menuItem) {
                _this.menuItems.forEach(function (menuItem) {
                    _this.identifyRoute(menuItem, event.menuItem);
                });
            }
        });
    };
    Object.defineProperty(SidebarComponent.prototype, "getStyle", {
        get: function () {
            if (this.settingService.layout.isCollapsed) {
                return '';
            }
            return this.sanitizer.bypassSecurityTrustStyle('translate(210px, 0px)');
        },
        enumerable: true,
        configurable: true
    });
    SidebarComponent.prototype.onMouseOver = function () {
        this.settingService.layout.isCollapsed = false;
    };
    SidebarComponent.prototype.onMouseOut = function () {
        if (!this.settingService.layout.isPinned) {
            this.settingService.layout.isCollapsed = true;
        }
    };
    SidebarComponent.prototype.traverseRoutes = function (routes) {
        var mItems = new Array();
        for (var i = 0; i < routes.length; i++) {
            var route = routes[i];
            if (route.data && route.data.menuItem) {
                var menuItem = route.data.menuItem;
                if (this.stateService.canTraverseRoute(menuItem)) {
                    if (route.children) {
                        menuItem.submenu = this.traverseRoutes(route.children);
                    }
                    mItems.push(menuItem);
                }
            }
        }
        ;
        return mItems.length == 0 ? null : mItems;
    };
    SidebarComponent.prototype.clearMenuItemState = function (menuItem) {
        var _this = this;
        menuItem.isExpanded = false;
        menuItem.routeIsActive = false;
        if (menuItem.submenu) {
            menuItem.submenu.forEach(function (subMenuItem) {
                _this.clearMenuItemState(subMenuItem);
            });
        }
    };
    SidebarComponent.prototype.identifyRoute = function (currentMenuItem, routeMenuItem) {
        var _this = this;
        var result = false;
        if (currentMenuItem.link == routeMenuItem.link) {
            currentMenuItem.routeIsActive = true;
            if (currentMenuItem.pageTitle) {
                var title = 'Preferred Precision Group | ' + currentMenuItem.pageTitle;
                this.titleService.setTitle(title);
            }
            result = true;
        }
        if (currentMenuItem.submenu) {
            currentMenuItem.submenu.forEach(function (submenuItem) {
                var subMenuIsActive = _this.identifyRoute(submenuItem, routeMenuItem);
                if (subMenuIsActive) {
                    currentMenuItem.isExpanded = true;
                    currentMenuItem.routeIsActive = true;
                    result = true;
                }
            });
        }
        return result;
    };
    SidebarComponent.prototype.isSidebarCollapsed = function () {
        return this.settingService.layout.isCollapsed;
    };
    SidebarComponent.prototype.toggleSubmenuHover = function (event) {
        var self = this;
        if (this.isSidebarCollapsed()) {
            event.preventDefault();
        }
    };
    SidebarComponent.prototype.toggleSidebarPinned = function () {
        this.settingService.toggleSetting('isPinned');
    };
    return SidebarComponent;
}());
__decorate([
    core_1.HostBinding('style.transform'),
    __metadata("design:type", Object),
    __metadata("design:paramtypes", [])
], SidebarComponent.prototype, "getStyle", null);
__decorate([
    core_1.HostListener('mouseover'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SidebarComponent.prototype, "onMouseOver", null);
__decorate([
    core_1.HostListener('mouseleave'),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], SidebarComponent.prototype, "onMouseOut", null);
SidebarComponent = __decorate([
    core_1.Component({
        selector: 'app-sidebar',
        template: __webpack_require__(330)
    }),
    __metadata("design:paramtypes", [platform_browser_1.DomSanitizer,
        platform_browser_1.Title,
        router_1.Router,
        router_1.ActivatedRoute,
        setting_service_1.SettingService,
        state_service_1.StateService])
], SidebarComponent);
exports.SidebarComponent = SidebarComponent;


/***/ }),
/* 256 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
/**
 * Animation for sliding object up and down as it appears/disappears
 */
exports.slideUpDownAnimation = core_1.trigger('visibilityChanged', [
    core_1.transition('* => void', [
        core_1.style({ height: '*', overflow: 'hidden' }),
        core_1.animate(400, core_1.style({ height: 0 }))
    ]),
    core_1.transition('void => *', [
        core_1.style({ height: 0, overflow: 'hidden' }),
        core_1.animate(200, core_1.style({ height: '*' }))
    ])
]);


/***/ }),
/* 257 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var modal_service_1 = __webpack_require__(5);
var data_table_config_model_1 = __webpack_require__(8);
var pagination_model_1 = __webpack_require__(11);
var DataTableComponent = (function () {
    function DataTableComponent(modalService) {
        this.modalService = modalService;
        this.refresh = new core_1.EventEmitter();
        this.delete = new core_1.EventEmitter();
        this.select = new core_1.EventEmitter();
        this.download = new core_1.EventEmitter();
        /* Row styling inputs */
        this.condenseRows = true;
        this.stripedRows = true;
        this.hoverRows = true;
        this.allowDelete = false;
    }
    DataTableComponent.prototype.refreshGrid = function (event) {
        this.refresh.emit(event);
    };
    DataTableComponent.prototype.setSort = function (column) {
        if (column.allowSorting) {
            if (column.propertyName == this.config.sortColumn) {
                this.config.sortDirection = this.config.sortDirection == data_table_config_model_1.SortDirection.asc ? data_table_config_model_1.SortDirection.desc : data_table_config_model_1.SortDirection.asc;
            }
            else {
                this.config.sortColumn = column.propertyName;
                this.config.sortDirection = data_table_config_model_1.SortDirection.asc;
            }
            this.pagination.pageIndex = 0;
            this.refreshGrid(null);
        }
    };
    DataTableComponent.prototype.openModal = function (id, record) {
        this.modalService.open(id, record);
    };
    DataTableComponent.prototype.closeModal = function (id) {
        this.modalService.close(id);
    };
    DataTableComponent.prototype.deleteRecord = function (id, event) {
        var modal = this.modalService.get(id);
        this.delete.emit(modal.record);
        this.modalService.close(id);
    };
    DataTableComponent.prototype.selectRecord = function (record) {
        this.select.emit(record);
    };
    DataTableComponent.prototype.downloadFile = function (record) {
        this.download.emit(record);
    };
    return DataTableComponent;
}());
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], DataTableComponent.prototype, "refresh", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], DataTableComponent.prototype, "delete", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], DataTableComponent.prototype, "select", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], DataTableComponent.prototype, "download", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], DataTableComponent.prototype, "data", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", data_table_config_model_1.DataTableConfig)
], DataTableComponent.prototype, "config", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "condenseRows", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "stripedRows", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "hoverRows", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", pagination_model_1.Pagination)
], DataTableComponent.prototype, "pagination", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], DataTableComponent.prototype, "pagesToShow", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "showFirstPage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "showLastPage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], DataTableComponent.prototype, "allowDelete", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DataTableComponent.prototype, "deleteTitle", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], DataTableComponent.prototype, "deleteMessage", void 0);
DataTableComponent = __decorate([
    core_1.Component({
        selector: 'data-table',
        template: __webpack_require__(331)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService])
], DataTableComponent);
exports.DataTableComponent = DataTableComponent;


/***/ }),
/* 258 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var forms_1 = __webpack_require__(22);
var noop = function () {
};
var FileFocusComponent = FileFocusComponent_1 = (function () {
    function FileFocusComponent() {
        this.innerValue = '';
        this.isFocused = false;
        this.placeholder = '';
        this.propertyName = '';
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(FileFocusComponent.prototype, "value", {
        //get accessor
        get: function () {
            return this.innerValue;
        },
        //set accessor including call the onchange callback
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = (v && v.length > 0) ? v : '';
                this.onChangeCallback(this.innerValue);
            }
            this.checkValue();
        },
        enumerable: true,
        configurable: true
    });
    ;
    FileFocusComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = (value && value.length > 0) ? value : '';
        }
        this.checkValue();
    };
    FileFocusComponent.prototype.onFocus = function () {
        this.setFocus(true);
    };
    FileFocusComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
        this.setFocus(false);
    };
    FileFocusComponent.prototype.setFocus = function (isFocused) {
        this.isFocused = isFocused;
    };
    FileFocusComponent.prototype.checkValue = function () {
        this.hasValue = false;
        if (this.innerValue.length > 0) {
            this.hasValue = true;
        }
    };
    // registers 'fn' that will be fired when changes are made
    // this is how we emit the changes back to the form
    FileFocusComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    //From ControlValueAccessor interface
    FileFocusComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    return FileFocusComponent;
}());
__decorate([
    core_1.HostBinding('class.focused'),
    __metadata("design:type", Boolean)
], FileFocusComponent.prototype, "isFocused", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], FileFocusComponent.prototype, "label", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], FileFocusComponent.prototype, "placeholder", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], FileFocusComponent.prototype, "propertyName", void 0);
FileFocusComponent = FileFocusComponent_1 = __decorate([
    core_1.Component({
        selector: 'file-focus',
        template: __webpack_require__(332),
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return FileFocusComponent_1; }),
                multi: true,
            }
        ]
    })
], FileFocusComponent);
exports.FileFocusComponent = FileFocusComponent;
var FileFocusComponent_1;


/***/ }),
/* 259 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var address_service_1 = __webpack_require__(29);
var address_model_1 = __webpack_require__(28);
var common_service_1 = __webpack_require__(40);
var AddressComponent = (function (_super) {
    __extends(AddressComponent, _super);
    function AddressComponent(modalService, notificationService, commonService, stateService, addressService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.commonService = commonService;
        _this.addressService = addressService;
        _this.save = new core_1.EventEmitter();
        _this.hideCancel = false;
        _this.processing = false;
        return _this;
    }
    AddressComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.commonService.getStates()
            .subscribe(function (s) {
            _this.states = s.json();
        }, function (e) {
            console.log(e._body);
        });
    };
    AddressComponent.prototype.saveAddress = function (event) {
        var _this = this;
        this.processing = true;
        this.addressService.saveAddress(this.address)
            .subscribe(function (address) {
            _this.address = address.json();
            _this.notificationService.notify('success', 'Address saved successfully.');
            _this.processing = false;
            _this.save.emit(true);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.save.emit(false);
        });
    };
    AddressComponent.prototype.close = function () {
        this.save.emit(false);
    };
    return AddressComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], AddressComponent.prototype, "save", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", address_model_1.Address)
], AddressComponent.prototype, "address", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], AddressComponent.prototype, "hideCancel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], AddressComponent.prototype, "processing", void 0);
AddressComponent = __decorate([
    core_1.Component({
        selector: 'address',
        template: __webpack_require__(333)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        common_service_1.CommonService,
        state_service_1.StateService,
        address_service_1.AddressService])
], AddressComponent);
exports.AddressComponent = AddressComponent;


/***/ }),
/* 260 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var contact_service_1 = __webpack_require__(32);
var contact_model_1 = __webpack_require__(36);
var ContactComponent = (function (_super) {
    __extends(ContactComponent, _super);
    function ContactComponent(modalService, notificationService, contactService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.contactService = contactService;
        _this.save = new core_1.EventEmitter();
        _this.hideCancel = false;
        _this.processing = false;
        return _this;
    }
    ContactComponent.prototype.saveContact = function (event) {
        var _this = this;
        this.processing = true;
        this.contactService.saveContact(this.contact)
            .subscribe(function (contact) {
            _this.contact = contact.json();
            _this.notificationService.notify('success', 'Contact saved successfully.');
            _this.processing = false;
            _this.save.emit(true);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.save.emit(false);
        });
    };
    ContactComponent.prototype.close = function () {
        this.save.emit(false);
    };
    return ContactComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], ContactComponent.prototype, "save", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", contact_model_1.Contact)
], ContactComponent.prototype, "contact", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], ContactComponent.prototype, "locations", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], ContactComponent.prototype, "hideCancel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], ContactComponent.prototype, "processing", void 0);
ContactComponent = __decorate([
    core_1.Component({
        selector: 'contact',
        template: __webpack_require__(334)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        contact_service_1.ContactService,
        state_service_1.StateService])
], ContactComponent);
exports.ContactComponent = ContactComponent;


/***/ }),
/* 261 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var client_service_1 = __webpack_require__(12);
var job_service_1 = __webpack_require__(13);
var location_service_1 = __webpack_require__(33);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var contact_service_1 = __webpack_require__(32);
var authenticated_component_base_1 = __webpack_require__(6);
var client_model_1 = __webpack_require__(35);
var job_model_1 = __webpack_require__(14);
var location_model_1 = __webpack_require__(37);
var user_model_1 = __webpack_require__(16);
var JobAddComponent = (function (_super) {
    __extends(JobAddComponent, _super);
    function JobAddComponent(modalService, notificationService, stateService, contactService, jobService, clientService, locationService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.stateService = stateService;
        _this.contactService = contactService;
        _this.jobService = jobService;
        _this.clientService = clientService;
        _this.locationService = locationService;
        _this.save = new core_1.EventEmitter();
        _this.hideCancel = false;
        _this.processing = false;
        _this.clients = new Array();
        _this.locations = new Array();
        _this.jobTypes = job_model_1.jobTypes;
        _this.isclientDisabled = false;
        _this.iscontactDisabled = false;
        _this.isclientHide = false;
        return _this;
    }
    JobAddComponent.prototype.ngOnInit = function () {
        if (this.job == null) {
            this.job = new job_model_1.Job();
        }
        if (this.client) {
            this.job.clientId = this.client.id;
        }
        if (this.location) {
            this.job.clientId = this.location.clientId;
            this.job.locationId = this.location.id;
        }
        if (!this.job.clientId || this.job.clientId == 0) {
            this.loadClients();
        }
        if (this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact) {
            this.isclientDisabled = true;
            this.isclientHide = true;
            this.iscontactDisabled = false;
        }
    };
    JobAddComponent.prototype.loadClients = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getClients()
            .subscribe(function (s) {
            _this.clients = s.json();
            if (_this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact) {
                _this.getContactByUser();
            }
            _this.processing = false;
        }, function (e) {
            _this.processing = false;
        });
    };
    JobAddComponent.prototype.loadLocations = function () {
        var _this = this;
        this.processing = true;
        this.clientService.getLocations(this.job.clientId)
            .subscribe(function (s) {
            _this.locations = s.json();
            if (_this.stateService.currentUser.userTypeId == user_model_1.usertypes.Contact && _this.job.locationId != null) {
                _this.iscontactDisabled = true;
            }
            else {
                _this.iscontactDisabled = false;
            }
            _this.processing = false;
        }, function (e) {
            _this.processing = false;
        });
    };
    JobAddComponent.prototype.saveJob = function () {
        var _this = this;
        this.processing = true;
        this.jobService.saveJob(this.job)
            .subscribe(function (job) {
            _this.job = job.json();
            _this.processing = false;
            _this.save.emit(_this.job);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.save.emit(null);
        });
    };
    JobAddComponent.prototype.close = function () {
        this.save.emit(null);
    };
    JobAddComponent.prototype.getContactByUser = function () {
        var _this = this;
        this.contactService.getContactByUser(this.stateService.currentUser.id).subscribe(function (contact) {
            if (_this.clients != null) {
                _this.contact = contact.json();
                _this.job.clientId = _this.contact.clientId;
                _this.job.locationId = _this.contact.locationId;
                _this.loadLocations();
            }
        });
    };
    return JobAddComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], JobAddComponent.prototype, "save", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", job_model_1.Job)
], JobAddComponent.prototype, "job", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", client_model_1.Client)
], JobAddComponent.prototype, "client", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", location_model_1.Location)
], JobAddComponent.prototype, "location", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], JobAddComponent.prototype, "hideCancel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], JobAddComponent.prototype, "processing", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], JobAddComponent.prototype, "locations", void 0);
JobAddComponent = __decorate([
    core_1.Component({
        selector: 'job-add',
        template: __webpack_require__(335)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        state_service_1.StateService,
        contact_service_1.ContactService,
        job_service_1.JobServices,
        client_service_1.ClientService,
        location_service_1.LocationService])
], JobAddComponent);
exports.JobAddComponent = JobAddComponent;


/***/ }),
/* 262 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var authenticated_component_base_1 = __webpack_require__(6);
var modal_service_1 = __webpack_require__(5);
var notification_service_1 = __webpack_require__(4);
var state_service_1 = __webpack_require__(2);
var location_service_1 = __webpack_require__(33);
var location_model_1 = __webpack_require__(37);
var LocationComponent = (function (_super) {
    __extends(LocationComponent, _super);
    function LocationComponent(modalService, notificationService, locationService, stateService) {
        var _this = _super.call(this, modalService, notificationService, stateService) || this;
        _this.modalService = modalService;
        _this.notificationService = notificationService;
        _this.locationService = locationService;
        _this.save = new core_1.EventEmitter();
        _this.hideCancel = false;
        _this.processing = false;
        return _this;
    }
    LocationComponent.prototype.saveLocation = function (event) {
        var _this = this;
        this.processing = true;
        this.locationService.saveLocation(this.location)
            .subscribe(function (location) {
            _this.location = location.json();
            _this.notificationService.notify('success', 'Location saved successfully.');
            _this.stateService.refreshToken();
            _this.processing = false;
            _this.save.emit(true);
        }, function (error) {
            _this.notificationService.notify('error', error._body);
            _this.processing = false;
            _this.save.emit(false);
        });
    };
    LocationComponent.prototype.close = function () {
        this.save.emit(false);
    };
    return LocationComponent;
}(authenticated_component_base_1.AuthenticatedComponentBase));
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], LocationComponent.prototype, "save", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", location_model_1.Location)
], LocationComponent.prototype, "location", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], LocationComponent.prototype, "addresses", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], LocationComponent.prototype, "hideCancel", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], LocationComponent.prototype, "processing", void 0);
LocationComponent = __decorate([
    core_1.Component({
        selector: 'location',
        template: __webpack_require__(336)
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService,
        notification_service_1.NotificationService,
        location_service_1.LocationService,
        state_service_1.StateService])
], LocationComponent);
exports.LocationComponent = LocationComponent;


/***/ }),
/* 263 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var forms_1 = __webpack_require__(22);
var noop = function () {
};
var InputFocusComponent = InputFocusComponent_1 = (function () {
    function InputFocusComponent(renderer) {
        this.renderer = renderer;
        this.innerValue = '';
        this.isFocused = false;
        this.inputType = 'text';
        this.placeholder = '';
        this.propertyName = '';
        this.disabled = false;
        this.mask = '';
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(InputFocusComponent.prototype, "value", {
        //get accessor
        get: function () {
            return this.innerValue;
        },
        //set accessor including call the onchange callback
        set: function (v) {
            if (v) {
                v = v.toString();
            }
            if (v !== this.innerValue) {
                this.innerValue = (v && v.length > 0) ? v : '';
                if (this.mask != undefined && this.mask.length > 0) {
                    this.input(this.innerValue);
                }
                else {
                    this.onChangeCallback(this.innerValue);
                }
            }
            this.checkValue();
        },
        enumerable: true,
        configurable: true
    });
    ;
    InputFocusComponent.prototype.writeValue = function (v) {
        if (v) {
            v = v.toString();
        }
        if (v !== this.innerValue) {
            this.innerValue = (v && v.length > 0) ? v : '';
        }
        this.checkValue();
    };
    InputFocusComponent.prototype.onFocus = function () {
        this.setFocus(true);
    };
    InputFocusComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
        this.setFocus(false);
        var valCurrentField = (this.element.nativeElement.value == undefined) ? '' : this.element.nativeElement.value;
    };
    InputFocusComponent.prototype.setFocus = function (isFocused) {
        this.isFocused = isFocused;
    };
    InputFocusComponent.prototype.checkValue = function () {
        this.hasValue = false;
        if (this.innerValue.length > 0) {
            this.hasValue = true;
        }
    };
    // registers 'fn' that will be fired when changes are made
    // this is how we emit the changes back to the form
    InputFocusComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    //From ControlValueAccessor interface
    InputFocusComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    InputFocusComponent.prototype.input = function (val, event) {
        if (this.mask.length > 0) {
            var mascared_1 = '';
            var unmask = val.toString().replace(new RegExp(/[^\d]/, 'g'), '');
            var c = 0;
            for (var i = 0; (i < this.mask.length) && (c < unmask.length); i++) {
                if (this.mask.slice(i, i + 1) == '9') {
                    mascared_1 += unmask.slice(c, c + 1);
                    c++;
                }
                else {
                    mascared_1 += this.mask.slice(i, i + 1);
                }
            }
            this.onChangeCallback(mascared_1);
            this.renderer.setElementProperty(this.element.nativeElement, 'value', mascared_1);
            setTimeout(function () {
                if (event !== undefined)
                    event.setSelectionRange(mascared_1.length, mascared_1.length);
            }, 0);
        }
        else {
            this.onChangeCallback(val.toString());
            this.renderer.setElementProperty(this.element.nativeElement, 'value', val.toString());
        }
    };
    return InputFocusComponent;
}());
__decorate([
    core_1.HostBinding('class.focused'),
    __metadata("design:type", Boolean)
], InputFocusComponent.prototype, "isFocused", void 0);
__decorate([
    core_1.ViewChild('inputElement'),
    __metadata("design:type", core_1.ElementRef)
], InputFocusComponent.prototype, "element", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], InputFocusComponent.prototype, "label", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], InputFocusComponent.prototype, "inputType", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], InputFocusComponent.prototype, "placeholder", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], InputFocusComponent.prototype, "propertyName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], InputFocusComponent.prototype, "disabled", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], InputFocusComponent.prototype, "mask", void 0);
InputFocusComponent = InputFocusComponent_1 = __decorate([
    core_1.Component({
        selector: 'input-focus',
        template: __webpack_require__(337),
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return InputFocusComponent_1; }),
                multi: true,
            }
        ]
    }),
    __param(0, core_1.Inject(core_1.Renderer)),
    __metadata("design:paramtypes", [core_1.Renderer])
], InputFocusComponent);
exports.InputFocusComponent = InputFocusComponent;
var InputFocusComponent_1;


/***/ }),
/* 264 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var $ = __webpack_require__(362);
var modal_service_1 = __webpack_require__(5);
var ModalComponent = (function () {
    function ModalComponent(modalService, el) {
        this.modalService = modalService;
        this.el = el;
        this.isVisible = false;
        this.element = $(el.nativeElement);
    }
    ModalComponent.prototype.ngOnInit = function () {
        var modal = this;
        // ensure id attribute exists
        if (!this.id) {
            console.error('modal must have an id');
            return;
        }
        // move element to bottom of page (just before </body>) so it can be displayed above everything else
        this.element.appendTo('body');
        // close modal on background click
        this.element.on('click', function (e) {
            var target = $(e.target);
            if (!target.closest('.modal-body').length) {
                modal.close();
            }
        });
        // add self (this modal instance) to the modal service so it's accessible from controllers
        this.modalService.add(modal);
    };
    // remove self from modal service when directive is destroyed
    ModalComponent.prototype.ngOnDestroy = function () {
        this.modalService.remove(this.id);
        this.element.remove();
    };
    // open modal
    ModalComponent.prototype.open = function () {
        this.isVisible = true;
    };
    // close modal
    ModalComponent.prototype.close = function () {
        this.isVisible = false;
    };
    return ModalComponent;
}());
__decorate([
    core_1.HostBinding('class.show'),
    core_1.HostBinding('class.fade'),
    core_1.HostBinding('class.in'),
    __metadata("design:type", Object)
], ModalComponent.prototype, "isVisible", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], ModalComponent.prototype, "id", void 0);
ModalComponent = __decorate([
    core_1.Component({
        selector: 'modal',
        template: '<ng-content></ng-content>'
    }),
    __metadata("design:paramtypes", [modal_service_1.ModalService, core_1.ElementRef])
], ModalComponent);
exports.ModalComponent = ModalComponent;


/***/ }),
/* 265 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var data_table_config_model_1 = __webpack_require__(8);
var pagination_model_1 = __webpack_require__(11);
var PaginationSummaryComponent = (function () {
    function PaginationSummaryComponent() {
    }
    return PaginationSummaryComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", pagination_model_1.Pagination)
], PaginationSummaryComponent.prototype, "pagination", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", data_table_config_model_1.DataTableConfig)
], PaginationSummaryComponent.prototype, "config", void 0);
PaginationSummaryComponent = __decorate([
    core_1.Component({
        selector: 'pagination-summary',
        template: __webpack_require__(338)
    })
], PaginationSummaryComponent);
exports.PaginationSummaryComponent = PaginationSummaryComponent;


/***/ }),
/* 266 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var pagination_model_1 = __webpack_require__(11);
var PaginationComponent = (function () {
    function PaginationComponent() {
        this.pagesToShow = 3;
        this.showFirstPage = true;
        this.showLastPage = true;
        this.refresh = new core_1.EventEmitter();
        this.pages = new Array();
    }
    PaginationComponent.prototype.ngOnInit = function () {
        this.calculatePageButtons();
    };
    PaginationComponent.prototype.ngOnChanges = function (changes) {
        this.calculatePageButtons();
    };
    PaginationComponent.prototype.changePageIndex = function (index) {
        if (index != this.pagination.pageIndex) {
            this.pagination.pageIndex = index;
            this.refresh.emit(null);
            this.calculatePageButtons();
        }
    };
    PaginationComponent.prototype.nextPage = function () {
        var newPageIndex = Math.min(this.pagination.pageIndex + 1, this.pagination.totalPages - 1);
        if (newPageIndex < this.pagination.totalPages) {
            this.changePageIndex(newPageIndex);
        }
    };
    PaginationComponent.prototype.previousPage = function () {
        var newPageIndex = Math.max(this.pagination.pageIndex - 1, 0);
        if (this.pagination.pageIndex > 0) {
            this.changePageIndex(newPageIndex);
        }
    };
    PaginationComponent.prototype.calculatePageButtons = function () {
        this.pages = new Array();
        if (this.pagesToShow && this.pagesToShow > 0 && this.pagination.totalPages > 0) {
            var pageIndex = Math.max(0, this.pagination.pageIndex);
            var startIndex = null || 0;
            var actualShow = Math.min(this.pagesToShow, this.pagination.totalPages);
            if (this.pagination.totalPages == this.pagesToShow) {
                startIndex = 0;
            }
            if (!startIndex) {
                if (actualShow % 2 == 0) {
                    startIndex = pageIndex - ((this.pagesToShow / 2) + 1);
                }
                else {
                    var halfPagesToShow = (actualShow - 1) / 2;
                    startIndex = pageIndex - halfPagesToShow;
                }
            }
            startIndex = Math.min(startIndex, (this.pagination.totalPages - 1));
            if (startIndex < 0) {
                startIndex = 0;
            }
            if (startIndex == 0 && this.showFirstPage && this.pagination.totalPages > 1) {
                startIndex = 1;
            }
            if (this.showLastPage && (this.pagination.totalPages - 1) >= startIndex &&
                (this.pagination.totalPages - 1) <= (startIndex + actualShow - 1)) {
                if (pageIndex == (this.pagination.totalPages - 1)) {
                    startIndex = pageIndex - actualShow;
                }
                else {
                    startIndex--;
                }
            }
            if (startIndex < 0) {
                startIndex = 0;
            }
            for (var i = startIndex; i < startIndex + actualShow; i++) {
                this.pages.push(i);
            }
            if (this.showFirstPage && this.pagination.totalPages > 1) {
                if (this.pages.indexOf(0) == -1) {
                    this.pages.unshift(0);
                }
            }
            ;
            if (this.showLastPage && this.pagination.totalPages > 1) {
                if (this.pages.indexOf(this.pagination.totalPages - 1) == -1) {
                    this.pages.push(this.pagination.totalPages - 1);
                }
            }
        }
    };
    return PaginationComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", pagination_model_1.Pagination)
], PaginationComponent.prototype, "pagination", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Number)
], PaginationComponent.prototype, "pagesToShow", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], PaginationComponent.prototype, "showFirstPage", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], PaginationComponent.prototype, "showLastPage", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], PaginationComponent.prototype, "refresh", void 0);
PaginationComponent = __decorate([
    core_1.Component({
        selector: 'pagination',
        template: __webpack_require__(339)
    })
], PaginationComponent);
exports.PaginationComponent = PaginationComponent;


/***/ }),
/* 267 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var forms_1 = __webpack_require__(22);
var noop = function () {
};
var PasswordFocusComponent = PasswordFocusComponent_1 = (function () {
    function PasswordFocusComponent() {
        this.innerValue = '';
        this.isFocused = false;
        this.placeholder = '';
        this.propertyName = '';
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(PasswordFocusComponent.prototype, "value", {
        //get accessor
        get: function () {
            return this.innerValue;
        },
        //set accessor including call the onchange callback
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = (v && v.length > 0) ? v : '';
                this.onChangeCallback(this.innerValue);
            }
            this.checkValue();
        },
        enumerable: true,
        configurable: true
    });
    ;
    PasswordFocusComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = (value && value.length > 0) ? value : '';
        }
        this.checkValue();
    };
    PasswordFocusComponent.prototype.onFocus = function () {
        this.setFocus(true);
    };
    PasswordFocusComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
        this.setFocus(false);
    };
    PasswordFocusComponent.prototype.setFocus = function (isFocused) {
        this.isFocused = isFocused;
    };
    PasswordFocusComponent.prototype.checkValue = function () {
        this.hasValue = false;
        if (this.innerValue.length > 0) {
            this.hasValue = true;
        }
    };
    // registers 'fn' that will be fired when changes are made
    // this is how we emit the changes back to the form
    PasswordFocusComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    //From ControlValueAccessor interface
    PasswordFocusComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    return PasswordFocusComponent;
}());
__decorate([
    core_1.HostBinding('class.focused'),
    __metadata("design:type", Boolean)
], PasswordFocusComponent.prototype, "isFocused", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], PasswordFocusComponent.prototype, "label", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], PasswordFocusComponent.prototype, "placeholder", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], PasswordFocusComponent.prototype, "propertyName", void 0);
PasswordFocusComponent = PasswordFocusComponent_1 = __decorate([
    core_1.Component({
        selector: 'password-focus',
        template: __webpack_require__(340),
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return PasswordFocusComponent_1; }),
                multi: true,
            }
        ]
    })
], PasswordFocusComponent);
exports.PasswordFocusComponent = PasswordFocusComponent;
var PasswordFocusComponent_1;


/***/ }),
/* 268 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var forms_1 = __webpack_require__(22);
var noop = function () {
};
var SelectFocusComponent = SelectFocusComponent_1 = (function () {
    function SelectFocusComponent() {
        this.innerValue = '';
        this.isFocused = false;
        this.propertyName = '';
        this.isDisabled = false;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(SelectFocusComponent.prototype, "value", {
        //get accessor
        get: function () {
            return this.innerValue;
        },
        //set accessor including call the onchange callback
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = (v && v.length > 0) ? v : '';
            }
            this.onChangeCallback(this.innerValue);
            this.checkValue();
        },
        enumerable: true,
        configurable: true
    });
    ;
    SelectFocusComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = (value && value.toString().length > 0) ? value : '';
        }
        this.selectElement.nativeElement.value = value;
        this.checkValue();
    };
    SelectFocusComponent.prototype.onFocus = function () {
        this.setFocus(true);
    };
    SelectFocusComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
        this.setFocus(false);
    };
    SelectFocusComponent.prototype.setFocus = function (isFocused) {
        this.isFocused = isFocused;
    };
    SelectFocusComponent.prototype.checkValue = function () {
        this.hasValue = false;
        if (this.innerValue.toString().length > 0) {
            this.hasValue = true;
        }
    };
    // registers 'fn' that will be fired when changes are made
    // this is how we emit the changes back to the form
    SelectFocusComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    //From ControlValueAccessor interface
    SelectFocusComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    return SelectFocusComponent;
}());
__decorate([
    core_1.HostBinding('class.focused'),
    __metadata("design:type", Boolean)
], SelectFocusComponent.prototype, "isFocused", void 0);
__decorate([
    core_1.ViewChild('inputElement'),
    __metadata("design:type", core_1.ElementRef)
], SelectFocusComponent.prototype, "selectElement", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], SelectFocusComponent.prototype, "label", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], SelectFocusComponent.prototype, "propertyName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], SelectFocusComponent.prototype, "dataTextField", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], SelectFocusComponent.prototype, "dataValueField", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], SelectFocusComponent.prototype, "data", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], SelectFocusComponent.prototype, "isDisabled", void 0);
SelectFocusComponent = SelectFocusComponent_1 = __decorate([
    core_1.Component({
        selector: 'select-focus',
        template: __webpack_require__(341),
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return SelectFocusComponent_1; }),
                multi: true,
            }
        ]
    })
], SelectFocusComponent);
exports.SelectFocusComponent = SelectFocusComponent;
var SelectFocusComponent_1;


/***/ }),
/* 269 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var forms_1 = __webpack_require__(22);
var noop = function () {
};
var TextAreaFocusComponent = TextAreaFocusComponent_1 = (function () {
    function TextAreaFocusComponent() {
        this.innerValue = '';
        this.isFocused = false;
        this.placeholder = '';
        this.propertyName = '';
        this.disabled = false;
        this.onTouchedCallback = noop;
        this.onChangeCallback = noop;
    }
    Object.defineProperty(TextAreaFocusComponent.prototype, "value", {
        //get accessor
        get: function () {
            return this.innerValue;
        },
        //set accessor including call the onchange callback
        set: function (v) {
            if (v !== this.innerValue) {
                this.innerValue = (v && v.length > 0) ? v : '';
                this.onChangeCallback(this.innerValue);
            }
            this.checkValue();
        },
        enumerable: true,
        configurable: true
    });
    ;
    TextAreaFocusComponent.prototype.writeValue = function (value) {
        if (value !== this.innerValue) {
            this.innerValue = (value && value.length > 0) ? value : '';
        }
        this.checkValue();
    };
    TextAreaFocusComponent.prototype.onFocus = function () {
        this.setFocus(true);
    };
    TextAreaFocusComponent.prototype.onBlur = function () {
        this.onTouchedCallback();
        this.setFocus(false);
    };
    TextAreaFocusComponent.prototype.setFocus = function (isFocused) {
        this.isFocused = isFocused;
    };
    TextAreaFocusComponent.prototype.checkValue = function () {
        this.hasValue = false;
        if (this.innerValue.length > 0) {
            this.hasValue = true;
        }
    };
    // registers 'fn' that will be fired when changes are made
    // this is how we emit the changes back to the form
    TextAreaFocusComponent.prototype.registerOnChange = function (fn) {
        this.onChangeCallback = fn;
    };
    //From ControlValueAccessor interface
    TextAreaFocusComponent.prototype.registerOnTouched = function (fn) {
        this.onTouchedCallback = fn;
    };
    return TextAreaFocusComponent;
}());
__decorate([
    core_1.HostBinding('class.focused'),
    __metadata("design:type", Boolean)
], TextAreaFocusComponent.prototype, "isFocused", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], TextAreaFocusComponent.prototype, "label", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], TextAreaFocusComponent.prototype, "placeholder", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", String)
], TextAreaFocusComponent.prototype, "propertyName", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], TextAreaFocusComponent.prototype, "disabled", void 0);
TextAreaFocusComponent = TextAreaFocusComponent_1 = __decorate([
    core_1.Component({
        selector: 'textarea-focus',
        template: __webpack_require__(342),
        providers: [
            {
                provide: forms_1.NG_VALUE_ACCESSOR,
                useExisting: core_1.forwardRef(function () { return TextAreaFocusComponent_1; }),
                multi: true,
            }
        ]
    })
], TextAreaFocusComponent);
exports.TextAreaFocusComponent = TextAreaFocusComponent;
var TextAreaFocusComponent_1;


/***/ }),
/* 270 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var platform_browser_1 = __webpack_require__(18);
var transaction_model_1 = __webpack_require__(15);
var common_styles_model_1 = __webpack_require__(93);
var TimeLineItemComponent = (function () {
    function TimeLineItemComponent(API_BASE, API_VERSION, sanitizer) {
        this.API_BASE = API_BASE;
        this.API_VERSION = API_VERSION;
        this.sanitizer = sanitizer;
    }
    TimeLineItemComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.profileImage = this.sanitizer.bypassSecurityTrustUrl(this.API_BASE + '/api/v' + this.API_VERSION + '/profileimage/' + this.transaction.userId.toString());
        var style = common_styles_model_1.CommonStyles.pointStyles.filter(function (f) {
            return f.id == _this.transaction.transactionTypeId;
        });
        this.iconClass = (style[0]) ? style[0].class : '';
        this.icon = (style[0]) ? style[0].icon : '';
    };
    return TimeLineItemComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", transaction_model_1.Transaction)
], TimeLineItemComponent.prototype, "transaction", void 0);
TimeLineItemComponent = __decorate([
    core_1.Component({
        selector: 'timeline-item',
        template: __webpack_require__(343),
        host: {
            '[class.timeline-block]': 'true'
        }
    }),
    __param(0, core_1.Inject('API_BASE')),
    __param(1, core_1.Inject('API_VERSION')),
    __metadata("design:paramtypes", [String, String, platform_browser_1.DomSanitizer])
], TimeLineItemComponent);
exports.TimeLineItemComponent = TimeLineItemComponent;


/***/ }),
/* 271 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var pagination_model_1 = __webpack_require__(11);
var TimeLineComponent = (function () {
    function TimeLineComponent() {
        this.refresh = new core_1.EventEmitter();
        this.internalPageIndex = 1;
    }
    TimeLineComponent.prototype.ngOnInit = function () {
        this.initialPageSize = this.pagination.pageSize;
    };
    TimeLineComponent.prototype.refreshGrid = function (event) {
        this.refresh.emit(event);
    };
    TimeLineComponent.prototype.loadMore = function () {
        this.internalPageIndex++;
        this.pagination.pageSize = (this.internalPageIndex * this.initialPageSize);
        this.refreshGrid(null);
    };
    return TimeLineComponent;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", Array)
], TimeLineComponent.prototype, "data", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", Boolean)
], TimeLineComponent.prototype, "isLoading", void 0);
__decorate([
    core_1.Input(),
    __metadata("design:type", pagination_model_1.Pagination)
], TimeLineComponent.prototype, "pagination", void 0);
__decorate([
    core_1.Output(),
    __metadata("design:type", core_1.EventEmitter)
], TimeLineComponent.prototype, "refresh", void 0);
TimeLineComponent = __decorate([
    core_1.Component({
        selector: 'timeline',
        template: __webpack_require__(344),
        host: {
            '[class.timeline-container]': 'true',
            '[class.left]': 'true'
        }
    })
], TimeLineComponent);
exports.TimeLineComponent = TimeLineComponent;


/***/ }),
/* 272 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var in_progress_component_1 = __webpack_require__(90);
var InProgressDirective = (function () {
    function InProgressDirective(cfResolver, vcRef, injector) {
        this.cfResolver = cfResolver;
        this.vcRef = vcRef;
        this.injector = injector;
    }
    InProgressDirective.prototype.ngOnChanges = function (changes) {
        for (var propName in changes) {
            var changedProp = changes[propName];
            var to = changedProp.currentValue;
            if (to) {
                this.createInProgress();
            }
            else {
                this.destroyComponents();
            }
        }
    };
    InProgressDirective.prototype.ngOnDestroy = function () {
        this.destroyComponents();
    };
    InProgressDirective.prototype.destroyComponents = function () {
        this.inProgressRef && this.inProgressRef.destroy();
    };
    InProgressDirective.prototype.createInProgress = function () {
        var inProgressFactory = this.cfResolver.resolveComponentFactory(in_progress_component_1.InProgressComponent);
        this.inProgressRef = this.vcRef.createComponent(inProgressFactory, null, this.injector);
        var instance = this.inProgressRef.instance;
    };
    return InProgressDirective;
}());
__decorate([
    core_1.Input('in-progress'),
    __metadata("design:type", Boolean)
], InProgressDirective.prototype, "serviceCallInProgress", void 0);
InProgressDirective = __decorate([
    core_1.Directive({
        selector: '[in-progress]'
    }),
    __metadata("design:paramtypes", [core_1.ComponentFactoryResolver,
        core_1.ViewContainerRef,
        core_1.Injector])
], InProgressDirective);
exports.InProgressDirective = InProgressDirective;


/***/ }),
/* 273 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var state_service_1 = __webpack_require__(2);
var PermissionDirective = (function () {
    function PermissionDirective(stateService, templateRef, viewContainer) {
        this.stateService = stateService;
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    Object.defineProperty(PermissionDirective.prototype, "permission", {
        set: function (requiredPermission) {
            if (this.stateService.hasPrivilege(requiredPermission)) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                this.viewContainer.clear();
            }
        },
        enumerable: true,
        configurable: true
    });
    return PermissionDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], PermissionDirective.prototype, "permission", null);
PermissionDirective = __decorate([
    core_1.Directive({
        selector: '[permission]'
    }),
    __metadata("design:paramtypes", [state_service_1.StateService,
        core_1.TemplateRef,
        core_1.ViewContainerRef])
], PermissionDirective);
exports.PermissionDirective = PermissionDirective;
var NoPermissionDirective = (function () {
    function NoPermissionDirective(stateService, templateRef, viewContainer) {
        this.stateService = stateService;
        this.templateRef = templateRef;
        this.viewContainer = viewContainer;
    }
    Object.defineProperty(NoPermissionDirective.prototype, "noPermission", {
        set: function (requiredPermission) {
            if (!this.stateService.hasPrivilege(requiredPermission)) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                this.viewContainer.clear();
            }
        },
        enumerable: true,
        configurable: true
    });
    return NoPermissionDirective;
}());
__decorate([
    core_1.Input(),
    __metadata("design:type", String),
    __metadata("design:paramtypes", [String])
], NoPermissionDirective.prototype, "noPermission", null);
NoPermissionDirective = __decorate([
    core_1.Directive({
        selector: '[noPermission]'
    }),
    __metadata("design:paramtypes", [state_service_1.StateService,
        core_1.TemplateRef,
        core_1.ViewContainerRef])
], NoPermissionDirective);
exports.NoPermissionDirective = NoPermissionDirective;


/***/ }),
/* 274 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var JobClosure = (function () {
    function JobClosure() {
    }
    return JobClosure;
}());
exports.JobClosure = JobClosure;
var jobClosureStatuses;
(function (jobClosureStatuses) {
    jobClosureStatuses[jobClosureStatuses["New"] = 0] = "New";
    jobClosureStatuses[jobClosureStatuses["Requested"] = 10] = "Requested";
    jobClosureStatuses[jobClosureStatuses["Active"] = 20] = "Active";
})(jobClosureStatuses = exports.jobClosureStatuses || (exports.jobClosureStatuses = {}));


/***/ }),
/* 275 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var DocumentRevision = (function () {
    function DocumentRevision() {
    }
    return DocumentRevision;
}());
exports.DocumentRevision = DocumentRevision;
var documentType;
(function (documentType) {
    documentType[documentType["New"] = 0] = "New";
    documentType[documentType["Active"] = 10] = "Active";
    documentType[documentType["Archive"] = 20] = "Archive";
})(documentType = exports.documentType || (exports.documentType = {}));
exports.jobDocumentRevisionFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'documents',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'documentName',
            columnHeader: 'Document',
            allowDownloadFile: true
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'revisionNumber',
            columnHeader: 'Revision'
        })
    ]
});


/***/ }),
/* 276 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Notification = (function () {
    function Notification(message, type) {
        this.message = message;
        this.type = type;
    }
    return Notification;
}());
exports.Notification = Notification;


/***/ }),
/* 277 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var moment = __webpack_require__(0);
var ProductionReport = (function () {
    function ProductionReport() {
    }
    return ProductionReport;
}());
exports.ProductionReport = ProductionReport;
var productionReportStatuses;
(function (productionReportStatuses) {
    productionReportStatuses[productionReportStatuses["ProductionReportStatus1"] = 1] = "ProductionReportStatus1";
    productionReportStatuses[productionReportStatuses["ProductionReportStatus2"] = 2] = "ProductionReportStatus2";
    productionReportStatuses[productionReportStatuses["ProductionReportStatus3"] = 3] = "ProductionReportStatus3";
})(productionReportStatuses = exports.productionReportStatuses || (exports.productionReportStatuses = {}));
exports.productionReportFullDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'production report',
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'productionDate',
            columnHeader: 'Date',
            formatter: function (record) {
                if (record.productionDate) {
                    return moment(record.productionDate).format('MM/DD/YYYY');
                }
                return '';
            }
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'shiftId',
            columnHeader: 'Shift'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'statusId',
            columnHeader: 'Status',
            formatter: function (record) {
                if (record.statusId) {
                    return productionReportStatuses[record.statusId];
                }
                return '';
            }
        })
    ]
});


/***/ }),
/* 278 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var data_table_config_model_1 = __webpack_require__(8);
var RiskAssessment = (function () {
    function RiskAssessment() {
    }
    return RiskAssessment;
}());
exports.RiskAssessment = RiskAssessment;
var riskAssessmentstatuses;
(function (riskAssessmentstatuses) {
    riskAssessmentstatuses[riskAssessmentstatuses["New"] = 0] = "New";
    riskAssessmentstatuses[riskAssessmentstatuses["Requested"] = 10] = "Requested";
    riskAssessmentstatuses[riskAssessmentstatuses["Submitted"] = 20] = "Submitted";
})(riskAssessmentstatuses = exports.riskAssessmentstatuses || (exports.riskAssessmentstatuses = {}));
exports.riskAssessmentDataTableConfig = new data_table_config_model_1.DataTableConfig({
    entityTypeName: 'risk assessments',
    sortColumn: 'revision',
    sortDirection: data_table_config_model_1.SortDirection.desc,
    columns: [
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'revision',
            columnHeader: 'Revision'
        }),
        new data_table_config_model_1.DataTableColumn({
            propertyName: 'statusId',
            columnHeader: 'Status',
            formatter: function (record) {
                return riskAssessmentstatuses[record.statusId];
            }
        })
    ]
});


/***/ }),
/* 279 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UserLogin = (function () {
    function UserLogin() {
    }
    return UserLogin;
}());
exports.UserLogin = UserLogin;


/***/ }),
/* 280 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var UserClientLocation = (function () {
    function UserClientLocation() {
    }
    return UserClientLocation;
}());
exports.UserClientLocation = UserClientLocation;


/***/ }),
/* 281 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var PhoneNumberPipe = (function () {
    function PhoneNumberPipe() {
    }
    PhoneNumberPipe.prototype.transform = function (value) {
        var numberOnly = value.replace(/[^0-9]/g, "");
        switch (numberOnly.length) {
            case 7:
                return numberOnly.slice(0, 3) + '-' + numberOnly.slice(3);
            case 10:
                return numberOnly.slice(0, 3) + '-' + numberOnly.slice(3, 6) + '-' + numberOnly.slice(6);
            default:
                return value;
        }
    };
    return PhoneNumberPipe;
}());
PhoneNumberPipe = __decorate([
    core_1.Pipe({ name: 'phone' })
], PhoneNumberPipe);
exports.PhoneNumberPipe = PhoneNumberPipe;


/***/ }),
/* 282 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = __webpack_require__(1);
var ShortDescriptionPipe = (function () {
    function ShortDescriptionPipe() {
    }
    ShortDescriptionPipe.prototype.transform = function (value) {
        if (value != null && value.split(/\s+/).length > 120) {
            return value.split(/\s+/).slice(1, 25).join(" ") + ' ...';
        }
        else {
            return value;
        }
    };
    return ShortDescriptionPipe;
}());
ShortDescriptionPipe = __decorate([
    core_1.Pipe({ name: 'shortDescription' })
], ShortDescriptionPipe);
exports.ShortDescriptionPipe = ShortDescriptionPipe;


/***/ }),
/* 283 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var ticky = __webpack_require__(353);

module.exports = function debounce (fn, args, ctx) {
  if (!fn) { return; }
  ticky(function run () {
    fn.apply(ctx || null, args || []);
  });
};


/***/ }),
/* 284 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var atoa = __webpack_require__(227);
var debounce = __webpack_require__(283);

module.exports = function emitter (thing, options) {
  var opts = options || {};
  var evt = {};
  if (thing === undefined) { thing = {}; }
  thing.on = function (type, fn) {
    if (!evt[type]) {
      evt[type] = [fn];
    } else {
      evt[type].push(fn);
    }
    return thing;
  };
  thing.once = function (type, fn) {
    fn._once = true; // thing.off(fn) still works!
    thing.on(type, fn);
    return thing;
  };
  thing.off = function (type, fn) {
    var c = arguments.length;
    if (c === 1) {
      delete evt[type];
    } else if (c === 0) {
      evt = {};
    } else {
      var et = evt[type];
      if (!et) { return thing; }
      et.splice(et.indexOf(fn), 1);
    }
    return thing;
  };
  thing.emit = function () {
    var args = atoa(arguments);
    return thing.emitterSnapshot(args.shift()).apply(this, args);
  };
  thing.emitterSnapshot = function (type) {
    var et = (evt[type] || []).slice(0);
    return function () {
      var args = atoa(arguments);
      var ctx = this || thing;
      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }
      et.forEach(function emitter (listen) {
        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }
        if (listen._once) { thing.off(type, listen); }
      });
      return thing;
    };
  };
  return thing;
};


/***/ }),
/* 285 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var customEvent = __webpack_require__(287);
var eventmap = __webpack_require__(286);
var doc = global.document;
var addEvent = addEventEasy;
var removeEvent = removeEventEasy;
var hardCache = [];

if (!global.addEventListener) {
  addEvent = addEventHard;
  removeEvent = removeEventHard;
}

module.exports = {
  add: addEvent,
  remove: removeEvent,
  fabricate: fabricateEvent
};

function addEventEasy (el, type, fn, capturing) {
  return el.addEventListener(type, fn, capturing);
}

function addEventHard (el, type, fn) {
  return el.attachEvent('on' + type, wrap(el, type, fn));
}

function removeEventEasy (el, type, fn, capturing) {
  return el.removeEventListener(type, fn, capturing);
}

function removeEventHard (el, type, fn) {
  var listener = unwrap(el, type, fn);
  if (listener) {
    return el.detachEvent('on' + type, listener);
  }
}

function fabricateEvent (el, type, model) {
  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();
  if (el.dispatchEvent) {
    el.dispatchEvent(e);
  } else {
    el.fireEvent('on' + type, e);
  }
  function makeClassicEvent () {
    var e;
    if (doc.createEvent) {
      e = doc.createEvent('Event');
      e.initEvent(type, true, true);
    } else if (doc.createEventObject) {
      e = doc.createEventObject();
    }
    return e;
  }
  function makeCustomEvent () {
    return new customEvent(type, { detail: model });
  }
}

function wrapperFactory (el, type, fn) {
  return function wrapper (originalEvent) {
    var e = originalEvent || global.event;
    e.target = e.target || e.srcElement;
    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };
    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };
    e.which = e.which || e.keyCode;
    fn.call(el, e);
  };
}

function wrap (el, type, fn) {
  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);
  hardCache.push({
    wrapper: wrapper,
    element: el,
    type: type,
    fn: fn
  });
  return wrapper;
}

function unwrap (el, type, fn) {
  var i = find(el, type, fn);
  if (i) {
    var wrapper = hardCache[i].wrapper;
    hardCache.splice(i, 1); // free up a tad of memory
    return wrapper;
  }
}

function find (el, type, fn) {
  var i, item;
  for (i = 0; i < hardCache.length; i++) {
    item = hardCache[i];
    if (item.element === el && item.type === type && item.fn === fn) {
      return i;
    }
  }
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 286 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var eventmap = [];
var eventname = '';
var ron = /^on/;

for (eventname in global) {
  if (ron.test(eventname)) {
    eventmap.push(eventname.slice(2));
  }
}

module.exports = eventmap;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 287 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
var NativeCustomEvent = global.CustomEvent;

function useNative () {
  try {
    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });
    return  'cat' === p.type && 'bar' === p.detail.foo;
  } catch (e) {
  }
  return false;
}

/**
 * Cross-browser `CustomEvent` constructor.
 *
 * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent
 *
 * @public
 */

module.exports = useNative() ? NativeCustomEvent :

// IE >= 9
'function' === typeof document.createEvent ? function CustomEvent (type, params) {
  var e = document.createEvent('CustomEvent');
  if (params) {
    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);
  } else {
    e.initCustomEvent(type, false, false, void 0);
  }
  return e;
} :

// IE <= 8
function CustomEvent (type, params) {
  var e = document.createEventObject();
  e.type = type;
  if (params) {
    e.bubbles = Boolean(params.bubbles);
    e.cancelable = Boolean(params.cancelable);
    e.detail = params.detail;
  } else {
    e.bubbles = false;
    e.cancelable = false;
    e.detail = void 0;
  }
  return e;
}

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 288 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var cache = {};
var start = '(?:^|\\s)';
var end = '(?:\\s|$)';

function lookupClass (className) {
  var cached = cache[className];
  if (cached) {
    cached.lastIndex = 0;
  } else {
    cache[className] = cached = new RegExp(start + className + end, 'g');
  }
  return cached;
}

function addClass (el, className) {
  var current = el.className;
  if (!current.length) {
    el.className = className;
  } else if (!lookupClass(className).test(current)) {
    el.className += ' ' + className;
  }
}

function rmClass (el, className) {
  el.className = el.className.replace(lookupClass(className), ' ').trim();
}

module.exports = {
  add: addClass,
  rm: rmClass
};


/***/ }),
/* 289 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var emitter = __webpack_require__(284);
var crossvent = __webpack_require__(285);
var classes = __webpack_require__(288);
var doc = document;
var documentElement = doc.documentElement;

function dragula (initialContainers, options) {
  var len = arguments.length;
  if (len === 1 && Array.isArray(initialContainers) === false) {
    options = initialContainers;
    initialContainers = [];
  }
  var _mirror; // mirror image
  var _source; // source container
  var _item; // item being dragged
  var _offsetX; // reference x
  var _offsetY; // reference y
  var _moveX; // reference move x
  var _moveY; // reference move y
  var _initialSibling; // reference sibling when grabbed
  var _currentSibling; // reference sibling now
  var _copy; // item used for copying
  var _renderTimer; // timer for setTimeout renderMirrorImage
  var _lastDropTarget = null; // last container item was over
  var _grabbed; // holds mousedown context until first mousemove

  var o = options || {};
  if (o.moves === void 0) { o.moves = always; }
  if (o.accepts === void 0) { o.accepts = always; }
  if (o.invalid === void 0) { o.invalid = invalidTarget; }
  if (o.containers === void 0) { o.containers = initialContainers || []; }
  if (o.isContainer === void 0) { o.isContainer = never; }
  if (o.copy === void 0) { o.copy = false; }
  if (o.copySortSource === void 0) { o.copySortSource = false; }
  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }
  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }
  if (o.direction === void 0) { o.direction = 'vertical'; }
  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }
  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }

  var drake = emitter({
    containers: o.containers,
    start: manualStart,
    end: end,
    cancel: cancel,
    remove: remove,
    destroy: destroy,
    canMove: canMove,
    dragging: false
  });

  if (o.removeOnSpill === true) {
    drake.on('over', spillOver).on('out', spillOut);
  }

  events();

  return drake;

  function isContainer (el) {
    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);
  }

  function events (remove) {
    var op = remove ? 'remove' : 'add';
    touchy(documentElement, op, 'mousedown', grab);
    touchy(documentElement, op, 'mouseup', release);
  }

  function eventualMovements (remove) {
    var op = remove ? 'remove' : 'add';
    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);
  }

  function movements (remove) {
    var op = remove ? 'remove' : 'add';
    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8
    crossvent[op](documentElement, 'click', preventGrabbed);
  }

  function destroy () {
    events(true);
    release({});
  }

  function preventGrabbed (e) {
    if (_grabbed) {
      e.preventDefault();
    }
  }

  function grab (e) {
    _moveX = e.clientX;
    _moveY = e.clientY;

    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;
    if (ignore) {
      return; // we only care about honest-to-god left clicks and touch events
    }
    var item = e.target;
    var context = canStart(item);
    if (!context) {
      return;
    }
    _grabbed = context;
    eventualMovements();
    if (e.type === 'mousedown') {
      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208
        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176
      } else {
        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155
      }
    }
  }

  function startBecauseMouseMoved (e) {
    if (!_grabbed) {
      return;
    }
    if (whichMouseButton(e) === 0) {
      release({});
      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope
    }
    // truthy check fixes #239, equality fixes #207
    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {
      return;
    }
    if (o.ignoreInputTextSelection) {
      var clientX = getCoord('clientX', e);
      var clientY = getCoord('clientY', e);
      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);
      if (isInput(elementBehindCursor)) {
        return;
      }
    }

    var grabbed = _grabbed; // call to end() unsets _grabbed
    eventualMovements(true);
    movements();
    end();
    start(grabbed);

    var offset = getOffset(_item);
    _offsetX = getCoord('pageX', e) - offset.left;
    _offsetY = getCoord('pageY', e) - offset.top;

    classes.add(_copy || _item, 'gu-transit');
    renderMirrorImage();
    drag(e);
  }

  function canStart (item) {
    if (drake.dragging && _mirror) {
      return;
    }
    if (isContainer(item)) {
      return; // don't drag container itself
    }
    var handle = item;
    while (getParent(item) && isContainer(getParent(item)) === false) {
      if (o.invalid(item, handle)) {
        return;
      }
      item = getParent(item); // drag target should be a top element
      if (!item) {
        return;
      }
    }
    var source = getParent(item);
    if (!source) {
      return;
    }
    if (o.invalid(item, handle)) {
      return;
    }

    var movable = o.moves(item, source, handle, nextEl(item));
    if (!movable) {
      return;
    }

    return {
      item: item,
      source: source
    };
  }

  function canMove (item) {
    return !!canStart(item);
  }

  function manualStart (item) {
    var context = canStart(item);
    if (context) {
      start(context);
    }
  }

  function start (context) {
    if (isCopy(context.item, context.source)) {
      _copy = context.item.cloneNode(true);
      drake.emit('cloned', _copy, context.item, 'copy');
    }

    _source = context.source;
    _item = context.item;
    _initialSibling = _currentSibling = nextEl(context.item);

    drake.dragging = true;
    drake.emit('drag', _item, _source);
  }

  function invalidTarget () {
    return false;
  }

  function end () {
    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    drop(item, getParent(item));
  }

  function ungrab () {
    _grabbed = false;
    eventualMovements(true);
    movements(true);
  }

  function release (e) {
    ungrab();

    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    var clientX = getCoord('clientX', e);
    var clientY = getCoord('clientY', e);
    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);
    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);
    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {
      drop(item, dropTarget);
    } else if (o.removeOnSpill) {
      remove();
    } else {
      cancel();
    }
  }

  function drop (item, target) {
    var parent = getParent(item);
    if (_copy && o.copySortSource && target === _source) {
      parent.removeChild(_item);
    }
    if (isInitialPlacement(target)) {
      drake.emit('cancel', item, _source, _source);
    } else {
      drake.emit('drop', item, target, _source, _currentSibling);
    }
    cleanup();
  }

  function remove () {
    if (!drake.dragging) {
      return;
    }
    var item = _copy || _item;
    var parent = getParent(item);
    if (parent) {
      parent.removeChild(item);
    }
    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);
    cleanup();
  }

  function cancel (revert) {
    if (!drake.dragging) {
      return;
    }
    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;
    var item = _copy || _item;
    var parent = getParent(item);
    var initial = isInitialPlacement(parent);
    if (initial === false && reverts) {
      if (_copy) {
        if (parent) {
          parent.removeChild(_copy);
        }
      } else {
        _source.insertBefore(item, _initialSibling);
      }
    }
    if (initial || reverts) {
      drake.emit('cancel', item, _source, _source);
    } else {
      drake.emit('drop', item, parent, _source, _currentSibling);
    }
    cleanup();
  }

  function cleanup () {
    var item = _copy || _item;
    ungrab();
    removeMirrorImage();
    if (item) {
      classes.rm(item, 'gu-transit');
    }
    if (_renderTimer) {
      clearTimeout(_renderTimer);
    }
    drake.dragging = false;
    if (_lastDropTarget) {
      drake.emit('out', item, _lastDropTarget, _source);
    }
    drake.emit('dragend', item);
    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;
  }

  function isInitialPlacement (target, s) {
    var sibling;
    if (s !== void 0) {
      sibling = s;
    } else if (_mirror) {
      sibling = _currentSibling;
    } else {
      sibling = nextEl(_copy || _item);
    }
    return target === _source && sibling === _initialSibling;
  }

  function findDropTarget (elementBehindCursor, clientX, clientY) {
    var target = elementBehindCursor;
    while (target && !accepted()) {
      target = getParent(target);
    }
    return target;

    function accepted () {
      var droppable = isContainer(target);
      if (droppable === false) {
        return false;
      }

      var immediate = getImmediateChild(target, elementBehindCursor);
      var reference = getReference(target, immediate, clientX, clientY);
      var initial = isInitialPlacement(target, reference);
      if (initial) {
        return true; // should always be able to drop it right back where it was
      }
      return o.accepts(_item, target, _source, reference);
    }
  }

  function drag (e) {
    if (!_mirror) {
      return;
    }
    e.preventDefault();

    var clientX = getCoord('clientX', e);
    var clientY = getCoord('clientY', e);
    var x = clientX - _offsetX;
    var y = clientY - _offsetY;

    _mirror.style.left = x + 'px';
    _mirror.style.top = y + 'px';

    var item = _copy || _item;
    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);
    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);
    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;
    if (changed || dropTarget === null) {
      out();
      _lastDropTarget = dropTarget;
      over();
    }
    var parent = getParent(item);
    if (dropTarget === _source && _copy && !o.copySortSource) {
      if (parent) {
        parent.removeChild(item);
      }
      return;
    }
    var reference;
    var immediate = getImmediateChild(dropTarget, elementBehindCursor);
    if (immediate !== null) {
      reference = getReference(dropTarget, immediate, clientX, clientY);
    } else if (o.revertOnSpill === true && !_copy) {
      reference = _initialSibling;
      dropTarget = _source;
    } else {
      if (_copy && parent) {
        parent.removeChild(item);
      }
      return;
    }
    if (
      (reference === null && changed) ||
      reference !== item &&
      reference !== nextEl(item)
    ) {
      _currentSibling = reference;
      dropTarget.insertBefore(item, reference);
      drake.emit('shadow', item, dropTarget, _source);
    }
    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }
    function over () { if (changed) { moved('over'); } }
    function out () { if (_lastDropTarget) { moved('out'); } }
  }

  function spillOver (el) {
    classes.rm(el, 'gu-hide');
  }

  function spillOut (el) {
    if (drake.dragging) { classes.add(el, 'gu-hide'); }
  }

  function renderMirrorImage () {
    if (_mirror) {
      return;
    }
    var rect = _item.getBoundingClientRect();
    _mirror = _item.cloneNode(true);
    _mirror.style.width = getRectWidth(rect) + 'px';
    _mirror.style.height = getRectHeight(rect) + 'px';
    classes.rm(_mirror, 'gu-transit');
    classes.add(_mirror, 'gu-mirror');
    o.mirrorContainer.appendChild(_mirror);
    touchy(documentElement, 'add', 'mousemove', drag);
    classes.add(o.mirrorContainer, 'gu-unselectable');
    drake.emit('cloned', _mirror, _item, 'mirror');
  }

  function removeMirrorImage () {
    if (_mirror) {
      classes.rm(o.mirrorContainer, 'gu-unselectable');
      touchy(documentElement, 'remove', 'mousemove', drag);
      getParent(_mirror).removeChild(_mirror);
      _mirror = null;
    }
  }

  function getImmediateChild (dropTarget, target) {
    var immediate = target;
    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {
      immediate = getParent(immediate);
    }
    if (immediate === documentElement) {
      return null;
    }
    return immediate;
  }

  function getReference (dropTarget, target, x, y) {
    var horizontal = o.direction === 'horizontal';
    var reference = target !== dropTarget ? inside() : outside();
    return reference;

    function outside () { // slower, but able to figure out any position
      var len = dropTarget.children.length;
      var i;
      var el;
      var rect;
      for (i = 0; i < len; i++) {
        el = dropTarget.children[i];
        rect = el.getBoundingClientRect();
        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }
        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }
      }
      return null;
    }

    function inside () { // faster, but only available if dropped inside a child element
      var rect = target.getBoundingClientRect();
      if (horizontal) {
        return resolve(x > rect.left + getRectWidth(rect) / 2);
      }
      return resolve(y > rect.top + getRectHeight(rect) / 2);
    }

    function resolve (after) {
      return after ? nextEl(target) : target;
    }
  }

  function isCopy (item, container) {
    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);
  }
}

function touchy (el, op, type, fn) {
  var touch = {
    mouseup: 'touchend',
    mousedown: 'touchstart',
    mousemove: 'touchmove'
  };
  var pointers = {
    mouseup: 'pointerup',
    mousedown: 'pointerdown',
    mousemove: 'pointermove'
  };
  var microsoft = {
    mouseup: 'MSPointerUp',
    mousedown: 'MSPointerDown',
    mousemove: 'MSPointerMove'
  };
  if (global.navigator.pointerEnabled) {
    crossvent[op](el, pointers[type], fn);
  } else if (global.navigator.msPointerEnabled) {
    crossvent[op](el, microsoft[type], fn);
  } else {
    crossvent[op](el, touch[type], fn);
    crossvent[op](el, type, fn);
  }
}

function whichMouseButton (e) {
  if (e.touches !== void 0) { return e.touches.length; }
  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261
  if (e.buttons !== void 0) { return e.buttons; }
  var button = e.button;
  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575
    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);
  }
}

function getOffset (el) {
  var rect = el.getBoundingClientRect();
  return {
    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),
    top: rect.top + getScroll('scrollTop', 'pageYOffset')
  };
}

function getScroll (scrollProp, offsetProp) {
  if (typeof global[offsetProp] !== 'undefined') {
    return global[offsetProp];
  }
  if (documentElement.clientHeight) {
    return documentElement[scrollProp];
  }
  return doc.body[scrollProp];
}

function getElementBehindPoint (point, x, y) {
  var p = point || {};
  var state = p.className;
  var el;
  p.className += ' gu-hide';
  el = doc.elementFromPoint(x, y);
  p.className = state;
  return el;
}

function never () { return false; }
function always () { return true; }
function getRectWidth (rect) { return rect.width || (rect.right - rect.left); }
function getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }
function getParent (el) { return el.parentNode === doc ? null : el.parentNode; }
function isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }
function isEditable (el) {
  if (!el) { return false; } // no parents were editable
  if (el.contentEditable === 'false') { return false; } // stop the lookup
  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain
  return isEditable(getParent(el)); // contentEditable is set to 'inherit'
}

function nextEl (el) {
  return el.nextElementSibling || manually();
  function manually () {
    var sibling = el;
    do {
      sibling = sibling.nextSibling;
    } while (sibling && sibling.nodeType !== 1);
    return sibling;
  }
}

function getEventHost (e) {
  // on touchend event, we have to use `e.changedTouches`
  // see http://stackoverflow.com/questions/7192563/touchend-event-properties
  // see https://github.com/bevacqua/dragula/issues/34
  if (e.targetTouches && e.targetTouches.length) {
    return e.targetTouches[0];
  }
  if (e.changedTouches && e.changedTouches.length) {
    return e.changedTouches[0];
  }
  return e;
}

function getCoord (coord, e) {
  var host = getEventHost(e);
  var missMap = {
    pageX: 'clientX', // IE8
    pageY: 'clientY' // IE8
  };
  if (coord in missMap && !(coord in host) && missMap[coord] in host) {
    coord = missMap[coord];
  }
  return host[coord];
}

module.exports = dragula;

/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(38)))

/***/ }),
/* 290 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = {
  XmlEntities: __webpack_require__(292),
  Html4Entities: __webpack_require__(291),
  Html5Entities: __webpack_require__(98),
  AllHtmlEntities: __webpack_require__(98)
};


/***/ }),
/* 291 */
/***/ (function(module, exports) {

var HTML_ALPHA = ['apos', 'nbsp', 'iexcl', 'cent', 'pound', 'curren', 'yen', 'brvbar', 'sect', 'uml', 'copy', 'ordf', 'laquo', 'not', 'shy', 'reg', 'macr', 'deg', 'plusmn', 'sup2', 'sup3', 'acute', 'micro', 'para', 'middot', 'cedil', 'sup1', 'ordm', 'raquo', 'frac14', 'frac12', 'frac34', 'iquest', 'Agrave', 'Aacute', 'Acirc', 'Atilde', 'Auml', 'Aring', 'Aelig', 'Ccedil', 'Egrave', 'Eacute', 'Ecirc', 'Euml', 'Igrave', 'Iacute', 'Icirc', 'Iuml', 'ETH', 'Ntilde', 'Ograve', 'Oacute', 'Ocirc', 'Otilde', 'Ouml', 'times', 'Oslash', 'Ugrave', 'Uacute', 'Ucirc', 'Uuml', 'Yacute', 'THORN', 'szlig', 'agrave', 'aacute', 'acirc', 'atilde', 'auml', 'aring', 'aelig', 'ccedil', 'egrave', 'eacute', 'ecirc', 'euml', 'igrave', 'iacute', 'icirc', 'iuml', 'eth', 'ntilde', 'ograve', 'oacute', 'ocirc', 'otilde', 'ouml', 'divide', 'oslash', 'ugrave', 'uacute', 'ucirc', 'uuml', 'yacute', 'thorn', 'yuml', 'quot', 'amp', 'lt', 'gt', 'OElig', 'oelig', 'Scaron', 'scaron', 'Yuml', 'circ', 'tilde', 'ensp', 'emsp', 'thinsp', 'zwnj', 'zwj', 'lrm', 'rlm', 'ndash', 'mdash', 'lsquo', 'rsquo', 'sbquo', 'ldquo', 'rdquo', 'bdquo', 'dagger', 'Dagger', 'permil', 'lsaquo', 'rsaquo', 'euro', 'fnof', 'Alpha', 'Beta', 'Gamma', 'Delta', 'Epsilon', 'Zeta', 'Eta', 'Theta', 'Iota', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Xi', 'Omicron', 'Pi', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'Phi', 'Chi', 'Psi', 'Omega', 'alpha', 'beta', 'gamma', 'delta', 'epsilon', 'zeta', 'eta', 'theta', 'iota', 'kappa', 'lambda', 'mu', 'nu', 'xi', 'omicron', 'pi', 'rho', 'sigmaf', 'sigma', 'tau', 'upsilon', 'phi', 'chi', 'psi', 'omega', 'thetasym', 'upsih', 'piv', 'bull', 'hellip', 'prime', 'Prime', 'oline', 'frasl', 'weierp', 'image', 'real', 'trade', 'alefsym', 'larr', 'uarr', 'rarr', 'darr', 'harr', 'crarr', 'lArr', 'uArr', 'rArr', 'dArr', 'hArr', 'forall', 'part', 'exist', 'empty', 'nabla', 'isin', 'notin', 'ni', 'prod', 'sum', 'minus', 'lowast', 'radic', 'prop', 'infin', 'ang', 'and', 'or', 'cap', 'cup', 'int', 'there4', 'sim', 'cong', 'asymp', 'ne', 'equiv', 'le', 'ge', 'sub', 'sup', 'nsub', 'sube', 'supe', 'oplus', 'otimes', 'perp', 'sdot', 'lceil', 'rceil', 'lfloor', 'rfloor', 'lang', 'rang', 'loz', 'spades', 'clubs', 'hearts', 'diams'];
var HTML_CODES = [39, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 34, 38, 60, 62, 338, 339, 352, 353, 376, 710, 732, 8194, 8195, 8201, 8204, 8205, 8206, 8207, 8211, 8212, 8216, 8217, 8218, 8220, 8221, 8222, 8224, 8225, 8240, 8249, 8250, 8364, 402, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 931, 932, 933, 934, 935, 936, 937, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 977, 978, 982, 8226, 8230, 8242, 8243, 8254, 8260, 8472, 8465, 8476, 8482, 8501, 8592, 8593, 8594, 8595, 8596, 8629, 8656, 8657, 8658, 8659, 8660, 8704, 8706, 8707, 8709, 8711, 8712, 8713, 8715, 8719, 8721, 8722, 8727, 8730, 8733, 8734, 8736, 8743, 8744, 8745, 8746, 8747, 8756, 8764, 8773, 8776, 8800, 8801, 8804, 8805, 8834, 8835, 8836, 8838, 8839, 8853, 8855, 8869, 8901, 8968, 8969, 8970, 8971, 9001, 9002, 9674, 9824, 9827, 9829, 9830];

var alphaIndex = {};
var numIndex = {};

var i = 0;
var length = HTML_ALPHA.length;
while (i < length) {
    var a = HTML_ALPHA[i];
    var c = HTML_CODES[i];
    alphaIndex[a] = String.fromCharCode(c);
    numIndex[c] = a;
    i++;
}

/**
 * @constructor
 */
function Html4Entities() {}

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.prototype.decode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&(#?[\w\d]+);?/g, function(s, entity) {
        var chr;
        if (entity.charAt(0) === "#") {
            var code = entity.charAt(1).toLowerCase() === 'x' ?
                parseInt(entity.substr(2), 16) :
                parseInt(entity.substr(1));

            if (!(isNaN(code) || code < -32768 || code > 65535)) {
                chr = String.fromCharCode(code);
            }
        } else {
            chr = alphaIndex[entity];
        }
        return chr || s;
    });
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.decode = function(str) {
    return new Html4Entities().decode(str);
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.prototype.encode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var alpha = numIndex[str.charCodeAt(i)];
        result += alpha ? "&" + alpha + ";" : str.charAt(i);
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.encode = function(str) {
    return new Html4Entities().encode(str);
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.prototype.encodeNonUTF = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var cc = str.charCodeAt(i);
        var alpha = numIndex[cc];
        if (alpha) {
            result += "&" + alpha + ";";
        } else if (cc < 32 || cc > 126) {
            result += "&#" + cc + ";";
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.encodeNonUTF = function(str) {
    return new Html4Entities().encodeNonUTF(str);
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.prototype.encodeNonASCII = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
Html4Entities.encodeNonASCII = function(str) {
    return new Html4Entities().encodeNonASCII(str);
};

module.exports = Html4Entities;


/***/ }),
/* 292 */
/***/ (function(module, exports) {

var ALPHA_INDEX = {
    '&lt': '<',
    '&gt': '>',
    '&quot': '"',
    '&apos': '\'',
    '&amp': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&apos;': '\'',
    '&amp;': '&'
};

var CHAR_INDEX = {
    60: 'lt',
    62: 'gt',
    34: 'quot',
    39: 'apos',
    38: 'amp'
};

var CHAR_S_INDEX = {
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    '\'': '&apos;',
    '&': '&amp;'
};

/**
 * @constructor
 */
function XmlEntities() {}

/**
 * @param {String} str
 * @returns {String}
 */
XmlEntities.prototype.encode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/<|>|"|'|&/g, function(s) {
        return CHAR_S_INDEX[s];
    });
};

/**
 * @param {String} str
 * @returns {String}
 */
 XmlEntities.encode = function(str) {
    return new XmlEntities().encode(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
XmlEntities.prototype.decode = function(str) {
    if (!str || !str.length) {
        return '';
    }
    return str.replace(/&#?[0-9a-zA-Z]+;?/g, function(s) {
        if (s.charAt(1) === '#') {
            var code = s.charAt(2).toLowerCase() === 'x' ?
                parseInt(s.substr(3), 16) :
                parseInt(s.substr(2));

            if (isNaN(code) || code < -32768 || code > 65535) {
                return '';
            }
            return String.fromCharCode(code);
        }
        return ALPHA_INDEX[s] || s;
    });
};

/**
 * @param {String} str
 * @returns {String}
 */
 XmlEntities.decode = function(str) {
    return new XmlEntities().decode(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
XmlEntities.prototype.encodeNonUTF = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLength = str.length;
    var result = '';
    var i = 0;
    while (i < strLength) {
        var c = str.charCodeAt(i);
        var alpha = CHAR_INDEX[c];
        if (alpha) {
            result += "&" + alpha + ";";
            i++;
            continue;
        }
        if (c < 32 || c > 126) {
            result += '&#' + c + ';';
        } else {
            result += str.charAt(i);
        }
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
 XmlEntities.encodeNonUTF = function(str) {
    return new XmlEntities().encodeNonUTF(str);
 };

/**
 * @param {String} str
 * @returns {String}
 */
XmlEntities.prototype.encodeNonASCII = function(str) {
    if (!str || !str.length) {
        return '';
    }
    var strLenght = str.length;
    var result = '';
    var i = 0;
    while (i < strLenght) {
        var c = str.charCodeAt(i);
        if (c <= 255) {
            result += str[i++];
            continue;
        }
        result += '&#' + c + ';';
        i++;
    }
    return result;
};

/**
 * @param {String} str
 * @returns {String}
 */
 XmlEntities.encodeNonASCII = function(str) {
    return new XmlEntities().encodeNonASCII(str);
 };

module.exports = XmlEntities;


/***/ }),
/* 293 */
/***/ (function(module, exports) {

module.exports = "\n<router-outlet></router-outlet>";

/***/ }),
/* 294 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Address</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/admin/addresses']\">Addresses</a>\n        </li>\n        <li *ngIf=\"address\">\n            <a [routerLink]=\"['/admin/addresses', address.id]\" class=\"active\">Edit Address</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li>\n            <a data-toggle=\"tab\" href=\"#riskassessment\" aria-expanded=\"true\"><span>Risk Assessments</span></a>\n        </li>\n        <li *permission=\"'addresses-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#riskassessment\">\n                        <span>Risk Assessments</span>\n                    </li>\n                    <li *permission=\"'addresses-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#riskassessment\" selected=\"\">Risk Assessments</option>\n                <option *permission=\"'addresses-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveAddress()\" role=\"form\" #addressform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Address Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n\n                                <input-focus label=\"Attention\" [propertyName]=\"attention\" class=\"form-group form-group-default\" [(ngModel)]=\"address.attention\" name=\"attention\"></input-focus>\n                                <input-focus required label=\"Street Address 1\" [propertyName]=\"streetAddress1\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.streetAddress1\" name=\"streetAddress1\"></input-focus>\n                                <input-focus label=\"Street Address 2\" [propertyName]=\"streetAddress2\" class=\"form-group form-group-default\" [(ngModel)]=\"address.streetAddress2\" name=\"streetAddress2\"></input-focus>\n                                <input-focus required label=\"City\" [propertyName]=\"city\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.city\" name=\"city\"></input-focus>\n                                <select-focus required label=\"State\" [data]=\"states\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"stateId\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.stateId\" name=\"stateId\"></select-focus>\n                                <input-focus label=\"Postal Code\" [propertyName]=\"postalCode\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.postalCode\" name=\"postalCode\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!addressform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Address <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/admin/addresses'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div *permission=\"'addresses'\" class=\"tab-pane\" id=\"riskassessment\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Risk Assessments\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                               \n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'addresses-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive Address\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b>Archiving an Address.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('deleteAddress')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Address\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'addresses-delete'\" id=\"deleteAddress\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('deleteAddress')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to delete the address.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Deleting address cannot be undone.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deleteAddress();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('deleteAddress')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n";

/***/ }),
/* 295 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">Addresses</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'addresses-add'\" (click)=\"openModal('addAddress')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Address</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"addressesLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        Addresses Listing\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table *permission=\"'addresses-edit'\" [data]=\"addresses\" (select)=\"selectAddress($event)\" [config]=\"addressesConfig\" (refresh)=\"loadAddresses($event)\" [pagination]=\"addressesPagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'addresses-add'\" id=\"addAddress\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addAddress')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Address</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <address [(address)]=\"newAddress\" [processing]=\"processing\" (save)=\"createAddress($event)\"></address>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n";

/***/ }),
/* 296 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Add AR Term</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/admin/ar-terms']\">AR Terms</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/admin/ar-terms/add']\" class=\"active\">Add AR Term</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Tab panes -->\n    <div class=\"row column-seperation\">\n        <form (ngSubmit)=\"saveARTerm()\" role=\"form\" #arTermform=\"ngForm\">\n            <div class=\"col-md-6\">\n                <!-- START PANEL -->\n                <div class=\"panel panel-default\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            Basic Information\n                        </div>\n                    </div>\n                    <div class=\"panel-body\" [in-progress]=\"processing\">\n                        <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"arTerm.name\" name=\"name\"></input-focus>\n                        <input-focus required label=\"Days\" [propertyName]=\"days\" class=\"form-group form-group-default required\" [(ngModel)]=\"arTerm.days\" name=\"days\"></input-focus>\n                        <button type=\"submit\" [disabled]=\"!arTermform.form.valid || processing\" class=\"btn btn-primary\">\n                            Save AR Term\n                            <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                        </button>&nbsp;\n                        <a class=\"btn btn-default\" [routerLink]=\"(['/admin/ar-terms'])\">Cancel</a>\n                    </div>\n                </div>\n                <!-- END PANEL -->\n            </div>\n        </form>\n    </div>\n</div>\n";

/***/ }),
/* 297 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit AR Term</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/admin/ar-terms']\">AR Terms</a>\n        </li>\n        <li *ngIf=\"arTerm\">\n            <a [routerLink]=\"['/admin/ar-terms/detail', arTerm.id]\" class=\"active\">Edit {{arTerm.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li *permission=\"'arterms-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#delete\" aria-expanded=\"false\"><span>Delete</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li *permission=\"'arterms-delete'\" data-option=\"\" data-value=\"#delete\">\n                        <span>Delete</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option *permission=\"'arterms-delete'\" value=\"#delete\">Delete</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveARTerm()\" role=\"form\" #arTermform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Basic Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"arTerm.name\" name=\"name\"></input-focus>\n                                <input-focus required label=\"Days\" [propertyName]=\"days\" class=\"form-group form-group-default required\" [(ngModel)]=\"arTerm.days\" name=\"days\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!arTermform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save AR Term\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/admin/ar-terms'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div *permission=\"'arterms-delete'\" class=\"tab-pane\" id=\"delete\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Delete AR Term\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b>Deleting an AR Term cannot be undone.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('deleteARTerm')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Delete AR Term\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'arterms-delete'\" id=\"deleteARTerm\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('deleteARTerm')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to delete the {{arTerm.name}} AR Term.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Deleting an AR Term cannot be undone.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deleteARTerm();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('deleteARTerm')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n";

/***/ }),
/* 298 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">AR Terms</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'arterms-add'\" [routerLink]=\"(['/admin/ar-terms/add'])\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add AR Term</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areTermsLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        AR Terms Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-12\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"arTerms\" [config]=\"termsConfig\" (refresh)=\"loadARTerms($event)\" [pagination]=\"termsPagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 299 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Add Role</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/admin/roles']\">Roles</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/admin/roles/add']\" class=\"active\">Add Role</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveRole()\" role=\"form\" #roleform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Basic Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"role.name\" name=\"name\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!roleform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Role\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/admin/roles'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 300 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Role</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/admin/roles']\">Roles</a>\n        </li>\n        <li *ngIf=\"role\">\n            <a [routerLink]=\"['/admin/roles/detail', role.id]\" class=\"active\">{{role.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#permissions\" aria-expanded=\"false\"><span>Permissions</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#users\" aria-expanded=\"false\"><span>Users</span></a>\n        </li>\n        <li *permission=\"'roles-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#delete\" aria-expanded=\"false\"><span>Delete</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#permissions\">\n                        <span>Permissions</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#users\">\n                        <span>Users</span>\n                    </li>\n                    <li *permission=\"'roles-delete'\" data-option=\"\" data-value=\"#delete\">\n                        <span>Delete</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#permissions\">Permissions</option>\n                <option value=\"#users\">Users</option>\n                <option *permission=\"'roles-delete'\" value=\"#delete\">Delete</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveRole()\" role=\"form\" #roleform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Basic Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"role.name\" name=\"name\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!roleform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Role\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/admin/roles'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"permissions\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"permissionsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Job Permissions\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" *ngIf=\"permissionGroups\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Jobs</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Jobs\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Corporate Approvals</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Job Request']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Rates &amp; Services</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Job Rates']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Production Reports</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Production Reports']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Job Closures</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Job Closure']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->  \n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"permissionsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Work Instruction Permissions\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" *ngIf=\"permissionGroups\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Work Instructions</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Work Instructions']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Approvals</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Work Instruction Request']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Risk Assessments</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Risk Assessment']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Job Audits</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Job Audit']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Process Audits</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Process Audit']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL --> \n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"permissionsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Client Permissions\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" *ngIf=\"permissionGroups\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Client Access</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Client Access']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->                     \n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"permissionsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                General Permissions\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" *ngIf=\"permissionGroups\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Clients</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Clients\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Locations</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Locations\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Contacts</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Contacts\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>AR Terms</h5>\n                                    <div *ngFor=\"let p of permissionGroups['AR Terms']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Employees</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Employees\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Pass Down Logs</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Pass Down Log']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Workplace Risk Assessments</h5>\n                                    <div *ngFor=\"let p of permissionGroups['Workplace Risk Assessment']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Scanners</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Scanners\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Dashboards</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Dashboards\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->             \n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"permissionsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Admin Permissions\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" *ngIf=\"permissionGroups\">\n                            <div class=\"row\">\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Users</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Users\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>User Roles</h5>\n                                    <div *ngFor=\"let p of permissionGroups['User Roles']\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Permissions</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Permissions\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                                <div class=\"col-xs-6 col-sm-4 col-md-3\">\n                                    <h5>Addresses</h5>\n                                    <div *ngFor=\"let p of permissionGroups.Addresses\" class=\"checkbox check-primary\">\n                                        <input (click)=\"togglePermission(p)\" [checked]=\"isInRole(p.id)\" type=\"checkbox\" value=\"{{p.id}}\" [id]=\"'permission' + p.id\">\n                                        <label [for]=\"'permission' + p.id\">{{p.label}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"users\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"usersLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                User Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <div class=\"col-xs-12\">\n                                    <input type=\"text\" id=\"userSearchFor\" name=\"userSearchFor\" (change)=\"userFilterChanged()\" [(ngModel)]=\"userSearchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                                </div>\n                            </div>\n                            <div class=\"clearfix\"></div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"users\" [config]=\"usersConfig\" (refresh)=\"loadUsers($event)\" [pagination]=\"usersPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'roles-delete'\" class=\"tab-pane\" id=\"delete\">\n            <div class=\"row column-seperation\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Delete Role\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <p>&nbsp;</p>\n                                        <p><b>Deleting a role cannot be undone.</b></p>\n                                        <p>Before doing so, all associated users must be removed from this role.</p>\n                                        <p>&nbsp;</p>\n                                        <button (click)=\"openModal('deleteRole')\" type=\"submit\" [disabled]=\"(users && users.length > 0) || processing || usersLoading\" class=\"btn btn-danger\">\n                                            Delete Role\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal id=\"addPermission\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addPermission')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Permission</h5>\n            </div>\n            <form role=\"form\" #permissionaddform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <!-- START PANEL -->\n                            <div class=\"panel panel-default\">\n                                <div class=\"panel-body\" [in-progress]=\"processing\">\n                                    <select-focus required label=\"Permission To Add\" [data]=\"availablePermissions\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"newPermissionId\" class=\"form-group form-group-default required\" [(ngModel)]=\"newPermissionId\" name=\"newPermissionId\"></select-focus>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"addPermission();\" [disabled]=\"!permissionaddform.form.valid\" type=\"button\" class=\"btn btn-primary btn-block m-t-5\">Add Permission</button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addPermission')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n</div>\n    </div>\n</modal>\n\n<modal *permission=\"'roles-delete'\" id=\"deleteRole\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('deleteRole')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to delete the {{role.name}} role.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Deleting a role cannot be undone.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deleteRole();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('deleteRole')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 301 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">Roles</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'roles-add'\" [routerLink]=\"(['/admin/roles/add'])\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Role</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areRolesLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        Role Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-12\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"roles\" [config]=\"rolesConfig\" (refresh)=\"loadRoles($event)\" [pagination]=\"rolePagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 302 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Users</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areUsersLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        User Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-8\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                        <div class=\"col-xs-4\">\n                            <button (click)=\"filterClear()\" class=\"btn btn-primary\">Reset</button>\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"users\" [config]=\"userConfig\" (refresh)=\"loadUsers($event)\" [pagination]=\"usersPagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 303 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = "\n<!-- START PAGE-CONTAINER -->\n<div class=\"login-wrapper \">\n    <!-- START Auth Background Pic Wrapper-->\n    <div class=\"bg-pic\">\n        <!-- START Background Pic-->\n        <img src=\"" + __webpack_require__(355) + "\" alt=\"\" class=\"lazy\">\n        <!-- END Background Pic-->\n        <!-- START Background Caption-->\n        <div class=\"bg-caption pull-bottom sm-pull-bottom text-white p-l-20 m-b-20\">\n            <h2 class=\"semi-bold text-white\">\n            </h2>\n            <p class=\"small\">\n                &copy; 2017 Preferred Precision Group, LLC.\n            </p>\n        </div>\n        <!-- END Background Caption-->\n    </div>\n    <!-- END Auth Background Pic Wrapper-->\n    <!-- START Auth Right Container-->\n    <router-outlet></router-outlet>\n   \n    <!-- END Auth Right Container-->\n</div>\n<!-- END PAGE CONTAINER -->";

/***/ }),
/* 304 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = "<div class=\"login-container bg-white\">\n    <div class=\"p-l-50 m-l-20 p-r-50 m-r-20 p-t-50 m-t-30 sm-p-l-15 sm-p-r-15 sm-p-t-40\">\n        <img src=\"" + __webpack_require__(53) + "\" alt=\"logo\" data-src=\"../../../assets/images/logo.png\" data-src-retina=\"../../../assets/images/logo_2x.png\" width=\"78\" height=\"22\">\n        <p class=\"p-t-35\">Sign into PPG intelligo</p>\n        <!-- START Login Form -->\n        <form id=\"form-login\" class=\"p-t-15\" (ngSubmit)=\"login()\" #loginform=\"ngForm\">\n            <input-focus required label=\"Email Address\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default required\" [(ngModel)]=\"loginModel.emailAddress\" name=\"emailAddress\" #emailAddress></input-focus>\n            <password-focus required label=\"Password\" [propertyName]=\"password\" class=\"form-group form-group-default required\" [(ngModel)]=\"loginModel.password\" name=\"password\"></password-focus>\n            <div class=\"row\">\n                <div class=\"col-md-6 text-left\">\n                    <button type=\"submit\" class=\"btn btn-primary btn-cons m-t-10\" [disabled]=\"!loginform.form.valid || submitPending\">\n                        Sign In\n                        <span *ngIf=\"submitPending\"><i class=\"fa fa-spinner fa-spin\"></i></span>\n                    </button>\n                </div>\n                <div class=\"col-md-6 text-right\">\n                    <a style=\"display:none;\" href=\"#\" class=\"text-info small\">Help? Contact Support</a>\n                </div>\n            </div>\n            <!-- END Form Control-->\n           \n        </form>\n        <!--END Login Form-->\n    </div>\n</div>\n\n\n";

/***/ }),
/* 305 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Add Client</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/clients']\">Client Listing</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/clients/add']\" class=\"active\">Add Client</a>\n        </li>\n    </ul>\n</div>\n\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\"><div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\"><span class=\"cs-placeholder\">Hello World</span><div class=\"cs-options\"><ul><li data-option=\"\" data-value=\"#home\"><span>Hello World</span></li><li data-option=\"\" data-value=\"#profile\"><span>Hello Two</span></li><li data-option=\"\" data-value=\"#messages\"><span>Hello Three</span></li></ul></div><select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\"><option value=\"#home\" selected=\"\">Hello World</option><option value=\"#profile\">Hello Two</option><option value=\"#messages\">Hello Three</option></select><div class=\"cs-backdrop\"></div></div></div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveClient()\" role=\"form\" #clientaddform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Client Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.name\" name=\"name\"></input-focus>\n                                <input-focus required label=\"Alias\" [propertyName]=\"alias\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.alias\" name=\"alias\"></input-focus>\n                                <select-focus required label=\"AR Terms\" [data]=\"arTerms\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"arTermsId\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.arTermsId\" name=\"arTermsId\"></select-focus>\n                                <input-focus [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" required label=\"Corporate Phone\" [propertyName]=\"phoneNumber\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.phoneNumber\" name=\"phoneNumber\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999 99'\"maxlength=\"17\" minlength=\"17\" label=\"Corporate Fax\" [propertyName]=\"faxNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"client.faxNumber\" name=\"faxNumber\"></input-focus>\n                                <input-focus label=\"Website\" placeholder=\"http://...\" [propertyName]=\"website\" class=\"form-group form-group-default\" [(ngModel)]=\"client.website\" name=\"website\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!clientaddform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Add Client\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/clients'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 306 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Client</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"client\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/clients']\">Client Listing</a>\n        </li>\n        <li *ngIf=\"client\">\n            <a [routerLink]=\"['/clients', client.id]\" class=\"active\">{{client.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#profile\" aria-expanded=\"false\"><span>Profile</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#location\" aria-expanded=\"false\"><span>Locations</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#job\" aria-expanded=\"false\"><span>Jobs</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#contact\" aria-expanded=\"false\"><span>Contacts</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'clients-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#profile\">\n                        <span>Profile</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#location\">\n                        <span>Locations</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#job\">\n                        <span>Jobs</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#contact\">\n                        <span>Contacts</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'clients-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#profile\">Profile</option>\n                <option value=\"#location\">Locations</option>\n                <option value=\"#job\">Jobs</option>\n                <option value=\"#contact\">Contacts</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'clients-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n               \n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"profile\">\n            <div class=\"row\">\n                <form (ngSubmit)=\"saveClient()\" role=\"form\" #clientaddform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Profile Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.name\" name=\"name\"></input-focus>\n                                <input-focus required label=\"Alias\" [propertyName]=\"alias\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.alias\" name=\"alias\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" required label=\"Corporate Phone\" [propertyName]=\"phoneNumber\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.phoneNumber\" name=\"phoneNumber\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" label=\"Corporate Fax\" [propertyName]=\"faxNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"client.faxNumber\" name=\"faxNumber\"></input-focus>\n                                <input-focus label=\"Website\" placeholder=\"http://...\" [propertyName]=\"website\" class=\"form-group form-group-default\" [(ngModel)]=\"client.website\" name=\"website\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!clientaddform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Client\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/clients'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    \n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus *ngIf=\"allAddresses\" required label=\"Corporate Address\" [data]=\"allAddresses\" dataTextField=\"condensedName\" dataValueField=\"id\" [propertyName]=\"corporateAddressId\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.corporateAddressId\" name=\"corporateAddressId\"></select-focus>\n                                <select-focus *ngIf=\"arTerms\" required label=\"AR Terms\" [data]=\"arTerms\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"arTermsId\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.arTermsId\" name=\"arTermsId\"></select-focus>\n                                <select-focus *ngIf=\"allAddresses\" required label=\"Billing Address\" [data]=\"allAddresses\" dataTextField=\"condensedName\" dataValueField=\"id\" [propertyName]=\"billingAddressId\" class=\"form-group form-group-default required\" [(ngModel)]=\"client.billingAddressId\" name=\"billingAddressId\"></select-focus>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"location\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"locationsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Location Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'locations-add'\" (click)=\"openModal('addLocation')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Location</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"locations\" [config]=\"locationsConfig\" (refresh)=\"loadLocations($event)\" [pagination]=\"locationsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"job\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"jobsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Job Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'jobs-add'\"  (click)=\"openModal('addJob')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Job</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"jobs\" [config]=\"jobsConfig\" (refresh)=\"loadJobs($event)\" [pagination]=\"jobsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"contact\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"contactsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Contact Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'contacts-add'\" (click)=\"openModal('addContact')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Contact</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"contacts\" [config]=\"contactsConfig\"  (refresh)=\"loadContacts($event)\" [pagination]=\"contactsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'clients-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{client.ame}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a client will deactivate their employee's user accounts in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveClient')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Client\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'clients-delete'\" id=\"archiveClient\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveClient')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive {{client.name}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a client will deactivate any user accounts for their employees.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveClient();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveClient')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'locations-add'\" id=\"addLocation\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addLocation')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Location</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <location [(location)]=\"newLocation\" [addresses]=\"allAddresses\" [processing]=\"processing\" (save)=\"saveLocation($event)\"></location>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'contacts-add'\" id=\"addContact\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addContact')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Contact</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <contact [(contact)]=\"newContact\" [locations]=\"allLocations\" [processing]=\"processing\" (save)=\"createContact($event)\"></contact>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-add'\" id=\"addJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Job</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <job-add [client]=\"client\" [locations]=\"locations\" [(job)]=\"newJob\" [processing]=\"processing\" (save)=\"createJob($event)\"></job-add>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 307 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">Clients</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'clients-add'\" [routerLink]=\"(['/clients/add'])\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Client</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areClientsLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        Client Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-12\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"clients\" [config]=\"clientsConfig\" (refresh)=\"loadClients($event)\" [pagination]=\"clientPagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 308 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Contact</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/clients']\">Client Listing</a>\n        </li>\n        <li *ngIf=\"contact\">\n            <a [routerLink]=\"['/clients/', contact.clientId]\">Client</a>\n        </li>\n        <li *ngIf=\"contact\">\n            <a [routerLink]=\"['/clients/', contact.clientId, 'contacts', contact.id]\" class=\"active\">{{contact.firstName}} {{contact.lastName}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Profile</span></a>\n        </li>\n        <!--<li class=\"\">\n            <a data-toggle=\"tab\" href=\"#address\" aria-expanded=\"false\"><span>Address</span></a>\n        </li>-->\n        <li [style.pointer-events] =\"!contact.emailAddress?'none':''\">\n            <a data-toggle=\"tab\" href=\"#user\" aria-expanded=\"false\"><span>User Access</span></a>\n        </li>\n        <li class=\"\" *ngIf=\"user && user.id > 0\">\n            <a data-toggle=\"tab\" href=\"#profile\" aria-expanded=\"false\"><span>Profile Photo</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'contacts-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Profile</span>\n                    </li>\n                    <!--<li data-option=\"\" data-value=\"#address\">\n                        <span>Address</span>\n                    </li>-->\n                    <li [style.pointer-events] =\"!contact.emailAddress?'none':''\" data-option=\"\" data-value=\"#user\">\n                        <span>User Access</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#profile\" *ngIf=\"user && user.id > 0\">\n                        <span>Profile Photo</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'contacts-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Profile</option>\n                <!--<option value=\"#address\">Address</option>-->\n                <option value=\"#user\" [style.pointer-events] =\"!contact.emailAddress?'none':''\">User Access</option>\n                <option value=\"#profile\" *ngIf=\"user && user.id > 0\">Profile Photo</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'contacts-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <form (ngSubmit)=\"saveContact()\" role=\"form\" #contactaddform=\"ngForm\">\n                <div class=\"row column-seperation\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Contact Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"First Name\" [propertyName]=\"firstName\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.firstName\" name=\"firstName\"></input-focus>\n                                <input-focus required label=\"Last Name\" [propertyName]=\"lastName\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.lastName\" name=\"lastName\"></input-focus>\n                                <input-focus required label=\"Title\" [propertyName]=\"title\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.title\" name=\"title\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!contactaddform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                 \n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus [mask]=\"'(999) 999-9999 999999'\" label=\"Office Phone\" [propertyName]=\"officePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.officePhoneNumber\" name=\"officePhoneNumber\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999 999999'\" label=\"Mobile Phone\" [propertyName]=\"mobilePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.mobilePhoneNumber\" name=\"mobilePhoneNumber\"></input-focus>\n                                <input-focus label=\"Email Address\" [placeholder]=\"'Not a @ppgquality.com address'\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.emailAddress\" name=\"emailAddress\"></input-focus>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"tab-pane\" id=\"user\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                User Access\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <form (ngSubmit)=\"saveUser()\" role=\"form\" #userform=\"ngForm\">\n                                <input-focus required label=\"Email Address\" [disabled]=\"true\" placeholder=\"@ppgquality.com email address\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.emailAddress\" name=\"emailAddress\"></input-focus>\n                                <input-focus inputType=\"password\" label=\"Password\" [propertyName]=\"password\" class=\"form-group form-group-default\" [(ngModel)]=\"user.password\" name=\"password\"></input-focus>\n                                <input-focus inputType=\"password\" label=\"Confirm Password\" [propertyName]=\"confirmPassword\" class=\"form-group form-group-default\" [(ngModel)]=\"user.confirmPassword\" name=\"confirmPassword\"></input-focus>\n                                <input-focus *ngIf=\"user && user.id > 0\" label=\"Last Login\" [propertyName]=\"lastLogin\" class=\"form-group form-group-default disabled\" [(ngModel)]=\"user.lastLogin\" name=\"lastLogin\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!userform.form.valid || processing\" class=\"btn btn-primary pull-left\">\n                                    Save User\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>\n                            </form>\n\n                            <input *ngIf=\"user && !user.isArchived\" [disabled]=\"processing\" (click)=\"openModal('dectivateContact')\" type=\"button\" class=\"btn btn-danger pull-right\" value=\"Deactivate User\" />\n                            <input *ngIf=\"user && user.isArchived\" [disabled]=\"processing\" (click)=\"openModal('activateContact')\" type=\"button\" class=\"btn btn-success pull-right\" value=\"Reactivate User\" />\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n                <div class=\"col-md-6\" *ngIf=\"user && user.id > 0\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                User Roles\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div *ngFor=\"let role of roles\" class=\"col-sm-6\">\n                                    <div class=\"checkbox\">\n                                        <input (click)=\"toggleRoleCheck(role)\" [checked]=\"isInRole(role.id)\" type=\"checkbox\" value=\"{{role.id}}\" [id]=\"'role' + role.id\">\n                                        <label [for]=\"'role' + role.id\">{{role.name}}</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"profile\" *ngIf=\"user && user.id > 0\">\n            <div class=\"row column-seperation\">\n                <div *permission=\"'contacts-edit'\" class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Profile Photo\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <form (ngSubmit)=\"saveProfileImage()\" #photoform=\"ngForm\">\n                                        <p>\n                                            For best results, use an image 140 pixels x 140 pixels in size. Acceptable files are PNG, GIF, JPEG.\n                                        </p>\n                                        <div class=\"form-group form-group-default required\">\n                                            <label>Select an image file to upload</label>\n                                            <input #fileInput type=\"file\" name=\"profileImage\" accept=\".jpg,.png,.gif,.bmp,image/bmp,image/png,image/jpeg,image/gif\" />\n                                        </div>\n                                        <p>&nbsp;</p>\n                                        <button type=\"submit\" [disabled]=\"!photoform.form.valid || processing\" class=\"btn btn-primary\">\n                                            Upload Photo\n                                        </button>\n                                    </form>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n                <div class=\"col-md-6\" *ngIf=\"profileImage != null\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Current Photo\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p>\n                                        <span class=\"thumbnail-wrapper circular\">\n                                            <img [src]=\"profileImage\" class=\"photo\" />\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'contacts-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{contact.firstName}} {{contact.lastName}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving an contact will deactivate their user account in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveContact')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Contact\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'contacts-delete'\" id=\"archiveContact\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveContact')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive {{contact.firstName}} {{contact.lastName}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a user will deactivate any permissions they have in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveContact();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveContact')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'users-add'\" id=\"activateContact\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('activateContact')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to reactivate {{contact.firstName}} {{contact.lastName}}'s user access.</p>\n                        <p>This will allow them to access the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"reactivateUser();\" type=\"button\" class=\"btn btn-primary btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('activateContact')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'users-edit'\" id=\"dectivateContact\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('dectivateContact')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to deactivate {{contact.firstName}} {{contact.lastName}}'s user access.</p>\n                        <p><b class=\"text-danger\">Reminder: </b>This will prevent them from accessing the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deactivateUser();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('dectivateContact')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 309 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Location</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"location\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/clients']\">Client Listing</a>\n        </li>\n        <li *ngIf=\"location\">\n            <a [routerLink]=\"['/clients/', location.clientId]\">Client</a>\n        </li>\n        <li *ngIf=\"location\">\n            <a [routerLink]=\"['/clients/', location.clientId, 'locations', location.id]\" class=\"active\">{{location.name}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#profile\" aria-expanded=\"false\"><span>Profile</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#job\" aria-expanded=\"false\"><span>Jobs</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#contact\" aria-expanded=\"false\"><span>Contacts</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'locations-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#profile\">\n                        <span>Profile</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#job\">\n                        <span>Jobs</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#contact\">\n                        <span>Contacts</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'locations-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#profile\">Profile</option>\n                <option value=\"#job\">Jobs</option>\n                <option value=\"#contact\">Contacts</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'locations-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"profile\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Profile Information\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <location [(location)]=\"location\" hideCancel=\"true\" [addresses]=\"allAddresses\" [processing]=\"processing\" (save)=\"saveLocation($event)\"></location>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"job\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"jobsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Job Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'jobs-add'\" (click)=\"openModal('addJob')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Job</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"jobs\" [config]=\"jobsConfig\" (refresh)=\"loadJobs($event)\" [pagination]=\"jobsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"contact\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\" [in-progress]=\"contactsLoading\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Contact Listing\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'contacts-add'\" (click)=\"openModal('addContact')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Contact</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <data-table [data]=\"contacts\" [config]=\"contactsConfig\" (refresh)=\"loadContacts($event)\" [pagination]=\"contactsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'locations-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{location.ame}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a location will disable the ability to add jobs for this location.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveLocation')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Location\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'locations-delete'\" id=\"archiveLocation\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveLocation')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive {{location.name}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a location will prevent future jobs from being started here.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveLocation();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveLocation')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'contacts-add'\" id=\"addContact\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addContact')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Contact</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <contact [(contact)]=\"newContact\" [locations]=\"allLocations\" [processing]=\"processing\" (save)=\"createContact($event)\"></contact>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-add'\" id=\"addJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Job</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <job-add [location]=\"location\" [(job)]=\"newJob\" [processing]=\"processing\" (save)=\"createJob($event)\"></job-add>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 310 */
/***/ (function(module, exports) {

module.exports = "\nHi!  This is a really cool dashboard.  Trust me! <i class=\"fa fa-smile-o\">&nbsp;</i>\n";

/***/ }),
/* 311 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Add Employee</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/employees']\">Employees</a>\n        </li>\n        <li *ngIf=\"employee\">\n            <a [routerLink]=\"['/employees/add']\" class=\"active\">Add Employee</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\"><div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\"><span class=\"cs-placeholder\">Hello World</span><div class=\"cs-options\"><ul><li data-option=\"\" data-value=\"#home\"><span>Hello World</span></li><li data-option=\"\" data-value=\"#profile\"><span>Hello Two</span></li><li data-option=\"\" data-value=\"#messages\"><span>Hello Three</span></li></ul></div><select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\"><option value=\"#home\" selected=\"\">Hello World</option><option value=\"#profile\">Hello Two</option><option value=\"#messages\">Hello Three</option></select><div class=\"cs-backdrop\"></div></div></div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <form (ngSubmit)=\"saveEmployee()\" role=\"form\" #employeeaddform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Contact Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"First Name\" [propertyName]=\"firstName\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.firstName\" name=\"firstName\"></input-focus>\n                                <input-focus required label=\"Last Name\" [propertyName]=\"lastName\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.lastName\" name=\"lastName\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999'\" label=\"Home Phone\" [propertyName]=\"homePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.homePhoneNumber\" name=\"homePhoneNumber\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999'\" label=\"Mobile Phone\" [propertyName]=\"mobilePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.mobilePhoneNumber\" name=\"mobilePhoneNumber\"></input-focus>\n                                <input-focus label=\"Personal Email Address\" [placeholder]=\"'Not a @ppgquality.com location'\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.emailAddress\" name=\"emailAddress\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!employeeaddform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Add Employee\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/employees'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Corporate Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus required label=\"Type\" [data]=\"employeeTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"employeeTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.employeeTypeId\" name=\"employeeTypeId\"></select-focus>\n                                <select-focus required label=\"Status\" [data]=\"employeeStatuses\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"employeeStatusId\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.employeeStatusId\" name=\"employeeStatusId\"></select-focus>\n                                <input-focus [mask]=\"'999-99-9999'\" required label=\"Social Security Number\" [propertyName]=\"ssn\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.ssn\" name=\"ssn\"></input-focus>\n                                <input-focus label=\"Alias\" [propertyName]=\"alias\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.alias\" name=\"alias\"></input-focus>\n                                <input-focus label=\"Title\" [propertyName]=\"title\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.title\" name=\"title\"></input-focus>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 312 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Employee</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/employees']\">Employees</a>\n        </li>\n        <li *ngIf=\"employee\">\n            <a [routerLink]=\"['/employees/detail', employee.id]\" class=\"active\">{{employee.firstName}} {{employee.lastName}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#address\" aria-expanded=\"false\"><span>Address</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#user\" aria-expanded=\"false\"><span>User Access</span></a>\n        </li>\n        <li class=\"\" *ngIf=\"user && user.id > 0\">\n            <a data-toggle=\"tab\" href=\"#clientaccess\" aria-expanded=\"false\"><span>Client Access</span></a>\n        </li>\n        <li class=\"\" *ngIf=\"user && user.id > 0\">\n            <a data-toggle=\"tab\" href=\"#profile\" aria-expanded=\"false\"><span>Profile Photo</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'employees-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#address\">\n                        <span>Address</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#user\">\n                        <span>User Access</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#clientaccess\" *ngIf=\"user && user.id > 0\">\n                        <span>Client Access</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#profile\" *ngIf=\"user && user.id > 0\">\n                        <span>Profile Photo</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'employees-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#address\">Address</option>\n                <option value=\"#user\">User Access</option>\n                <option value=\"#clientaccess\" *ngIf=\"user && user.id > 0\">Client Access</option>\n                <option value=\"#profile\" *ngIf=\"user && user.id > 0\">Profile Photo</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'employees-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n    \n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <form (ngSubmit)=\"saveEmployee()\" role=\"form\" #employeeaddform=\"ngForm\">\n                <div class=\"row column-seperation\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Contact Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <input-focus required label=\"First Name\" [propertyName]=\"firstName\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.firstName\" name=\"firstName\"></input-focus>\n                                <input-focus required label=\"Last Name\" [propertyName]=\"lastName\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.lastName\" name=\"lastName\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999'\" label=\"Home Phone\" [propertyName]=\"homePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.homePhoneNumber\" name=\"homePhoneNumber\"></input-focus>\n                                <input-focus [mask]=\"'(999) 999-9999'\" label=\"Mobile Phone\" [propertyName]=\"mobilePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.mobilePhoneNumber\" name=\"mobilePhoneNumber\"></input-focus>\n                                <input-focus label=\"Personal Email Address\" [placeholder]=\"'Not a @ppgquality.com address'\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.emailAddress\" name=\"emailAddress\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!employeeaddform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Employee\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/employees'])\">Cancel</a>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Corporate Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus required label=\"Type\" [data]=\"employeeTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"employeeTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.employeeTypeId\" name=\"employeeTypeId\"></select-focus>\n                                <select-focus required label=\"Status\" [data]=\"employeeStatuses\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"employeeStatusId\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.employeeStatusId\" name=\"employeeStatusId\"></select-focus>\n                                <input-focus [mask]=\"'999-99-9999'\" required label=\"Social Security Number\" [propertyName]=\"ssn\" class=\"form-group form-group-default required\" [(ngModel)]=\"employee.ssn\" name=\"ssn\"></input-focus>\n                                <input-focus label=\"Alias\" [propertyName]=\"alias\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.alias\" name=\"alias\"></input-focus>\n                                <input-focus label=\"Title\" [propertyName]=\"title\" class=\"form-group form-group-default\" [(ngModel)]=\"employee.title\" name=\"title\"></input-focus>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </form>\n        </div>\n        <div class=\"tab-pane\" id=\"address\">\n                <div class=\"row column-seperation\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Home Address\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <address [address]=\"address\" hideCancel=\"true\" [processing]=\"processing\" (save)=\"saveAddress($event)\"></address>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n        </div>\n        <div class=\"tab-pane\" id=\"user\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                User Access\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <form (ngSubmit)=\"saveUser()\" role=\"form\" #userform=\"ngForm\">\n                                <input-focus required label=\"Email Address\" placeholder=\"@ppgquality.com email address\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default required\" [(ngModel)]=\"user.emailAddress\" name=\"emailAddress\"></input-focus>\n                                <input-focus label=\"Passord\" [propertyName]=\"password\" class=\"form-group form-group-default\" [(ngModel)]=\"user.password\" name=\"password\"></input-focus>\n                                <input-focus label=\"Confirm Password\" [propertyName]=\"confirmPassword\" class=\"form-group form-group-default\" [(ngModel)]=\"user.confirmPassword\" name=\"confirmPassword\"></input-focus>\n                                <input-focus *ngIf=\"user && user.id > 0\" label=\"Last Login\" [propertyName]=\"lastLogin\" class=\"form-group form-group-default disabled\" [(ngModel)]=\"user.lastLogin\" name=\"lastLogin\"></input-focus>\n                                <button type=\"submit\" [disabled]=\"!userform.form.valid || processing\" class=\"btn btn-primary pull-left\">\n                                    Save User\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>\n                            </form>\n\n                            <input *ngIf=\"user && !user.isArchived\" [disabled]=\"processing\" (click)=\"openModal('dectivateEmployee')\" type=\"button\" class=\"btn btn-danger pull-right\" value=\"Deactivate User\" />\n                            <input *ngIf=\"user && user.isArchived\" [disabled]=\"processing\" (click)=\"openModal('activateEmployee')\" type=\"button\" class=\"btn btn-success pull-right\" value=\"Reactivate User\" />\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n                <div class=\"col-md-6\" *ngIf=\"user && user.id > 0\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                User Roles\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                           <div class=\"row\">\n                               <div *ngFor=\"let role of roles\" class=\"col-sm-6\">\n                                   <div class=\"checkbox\">\n                                       <input (click)=\"toggleRoleCheck(role)\" [checked]=\"isInRole(role.id)\" type=\"checkbox\" value=\"{{role.id}}\" [id]=\"'role' + role.id\">\n                                       <label [for]=\"'role' + role.id\">{{role.name}}</label>\n                                   </div>\n                               </div>\n                           </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"clientaccess\" *ngIf=\"user && user.id > 0\">\n            <div class=\"row column-seperation\">\n                <div *permission=\"'employees-edit'\" class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Full Access\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"clientprocessing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <input id=\"chkaccesstoall\" (click)=\"toggleAccessClientCheck($event)\"  [checked] =\"isWildCard\" type=\"checkbox\" > Provide access to all clients &amp; locations\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                    <!-- START PANEL -->\n                    <div *ngIf=\"!isWildCard\" class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Specific Client Access\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"clientprocessing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                        <ng2-dual-list-box [data]=\"clients\" valueField=\"id\" textField=\"name\" availableText=\"Available Clients\" selectedText=\"Assigned Clients\"\n                                                           (onItemsMoved)=\"onClientMove($event)\" [(ngModel)]=\"selectedClients\"></ng2-dual-list-box>\n                                    </div>\n                                </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                    <!-- START PANEL -->\n                    <div *ngIf=\"!isWildCard\" class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Specific Location Access\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-3\">\n                                    <select-focus  label=\"Client\" [data]=\"locationClients\" (change)=\"loadLocations($event)\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"clientId\" class=\"form-group form-group-default\" [(ngModel)]=\"selectedclientId\" name=\"clientId\"></select-focus>\n                                </div>\n                                <div class=\"col-sm-12\" [in-progress]=\"locationprocessing\">\n                                    <ng2-dual-list-box [data]=\"locations\" valueField=\"id\" textField=\"name\" availableText=\"Available Locations\" selectedText=\"Assigned Locations\"\n                                                       (onItemsMoved)=\"onLocationMove($event)\" [(ngModel)]=\"selectedLocations\" #locationdualbox></ng2-dual-list-box>\n                                </div>\n                            </div>\n                         </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n             </div>\n        </div>\n        <div class=\"tab-pane\" id=\"profile\" *ngIf=\"user && user.id > 0\">\n            <div class=\"row column-seperation\">\n                <div *permission=\"'employees-edit'\" class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Profile Photo\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <form (ngSubmit)=\"saveProfileImage()\" #photoform=\"ngForm\">\n                                        <p>\n                                            For best results, use an image 140 pixels x 140 pixels in size. Acceptable files are PNG, GIF, JPEG.\n                                        </p>\n                                        <div class=\"form-group form-group-default required\">\n                                            <label>Select an image file to upload</label>\n                                            <input #fileInput type=\"file\" name=\"profileImage\" accept=\".jpg,.png,.gif,.bmp,image/bmp,image/png,image/jpeg,image/gif\" />\n                                        </div>\n                                        <p>&nbsp;</p>\n                                        <button type=\"submit\" [disabled]=\"!photoform.form.valid || processing\" class=\"btn btn-primary\">\n                                            Upload Photo\n                                        </button>\n                                    </form> \n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n                <div class=\"col-md-6\" *ngIf=\"profileImage != null\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Current Photo\n                            </div>\n                        </div>\n                        <div class=\"panel-body\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p>\n                                        <span class=\"thumbnail-wrapper circular\">\n                                           <img [src]=\"profileImage\" class=\"photo\" />\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'employees-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{employee.firstName}} {{employee.lastName}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving an employee will deactivate their user account in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveEmployee')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Employee\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'employees-delete'\" id=\"archiveEmployee\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveEmployee')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive {{employee.firstName}} {{employee.lastName}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a user will deactivate any permissions they have in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveEmployee();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveEmployee')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'users-add'\" id=\"activateEmployee\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('activateEmployee')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to reactivate {{employee.firstName}} {{employee.lastName}}'s user access.</p>\n                        <p>This will allow them to access the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"reactivateUser();\" type=\"button\" class=\"btn btn-primary btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('activateEmployee')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'users-edit'\" id=\"dectivateEmployee\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('dectivateEmployee')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to deactivate {{employee.firstName}} {{employee.lastName}}'s user access.</p>\n                        <p><b class=\"text-danger\">Reminder: </b>This will prevent them from accessing the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deactivateUser();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('dectivateEmployee')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 313 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">Employees</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'employees-add'\" [routerLink]=\"(['/employees/add'])\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Employee</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areEmployeesLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        Employee Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-12\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"employees\" [config]=\"employeesConfig\" (refresh)=\"loadEmployees($event)\" [pagination]=\"employeePagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 314 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Address</h3>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs']\">Job Listing</a>\n        </li>\n        <li *ngIf=\"job\">\n            <a [routerLink]=\"['/jobs', jobId]\">{{job.jobCode}}</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs', jobId,'closure']\" class=\"active\">Job Closure</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <form  role=\"form\" #jobclosureform=\"ngForm\">\n            <div class=\"col-md-12\">\n                \n                <!-- START PANEL -->\n                <div class=\"panel panel-transparent\" [in-progress]=\"jobClosureLoading\">\n                    <div class=\"panel-body\">\n                        <div class=\"pull-right\">\n                            <span *ngIf=\"showRequest\"><button (click)=\"requestJobClosure($event)\" [disabled]=\"!isEnableRequest || !isAllChecked ||!jobclosureform.form.valid || processing\" class=\"btn btn-primary\"><i class=\"fa fa-sticky-note\"></i> {{requestBtnText}}</button></span>\n                            <span *ngIf=\"showApprove\"><button (click)=\"ApproveJobClosure()\" class=\"btn btn-success\"><i class=\"fa fa-check-square-o\"></i> {{approveBtnText}}</button></span>\n                            <span *ngIf=\"showDecline\"><button (click)=\"DeclineJobClosure()\" class=\"btn btn-danger\"><i class=\"fa fa-ban\"></i> {{declineBtnText}}</button></span>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-md-6\">\n                                <div class=\"panel-heading\">\n                                    <div class=\"panel-title\">\n                                        Summary\n                                    </div>\n                                    <div class=\"clearfix\"></div>\n                                    <div>\n                                        <input required type=\"checkbox\" id=\"1\" [checked]=\"jobClosure.documentsCollected\" (change)=\"toggleCheckListCheck($event)\"  /> Collect all PPG documents for file retention <br />\n                                        <input required type=\"checkbox\" id=\"2\" [checked]=\"jobClosure.boundrySamplesReturned\" (change)=\"toggleCheckListCheck($event)\" /> Return all boundary samples to the customer <br />\n                                        <input required type=\"checkbox\" id=\"3\" [checked]=\"jobClosure.boundriesRemoved\" (change)=\"toggleCheckListCheck($event)\" /> Remove any tapes, signs, temporary boundaries from area <br />\n                                        <input required type=\"checkbox\" id=\"4\" [checked]=\"jobClosure.areaCleaned\" (change)=\"toggleCheckListCheck($event)\" /> Clean and 5S the work area <br />\n                                        <input required type=\"checkbox\" id=\"5\" [checked]=\"jobClosure.ppgMaterialsCollected\" (change)=\"toggleCheckListCheck($event)\" /> Collect any materias and supplies that belong to PPG <br />\n                                        <input required type=\"checkbox\" id=\"6\" [checked]=\"jobClosure.clientFixturesReturned\" (change)=\"toggleCheckListCheck($event)\" /> Return any fixtures or gauges issued by the customer <br />\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-md-6\">\n                                <div class=\"panel-heading\">\n                                    <div class=\"panel-title\">\n                                        Lesson Learned\n                                    </div>\n                                    <div class=\"clearfix\"></div>\n                                    <div>\n                                        <textarea-focus required label=\"What could have been done to make this project more efficient?\" [propertyName]=\"efficiencySuggestions\" class=\"form-group form-group-default required\" [(ngModel)]=\"jobClosure.efficiencySuggestions\" name=\"efficiencySuggestions\"></textarea-focus>\n                                        <textarea-focus required label=\"What did we do well on this project?\" [propertyName]=\"areasDoneWell\" class=\"form-group form-group-default required\" [(ngModel)]=\"jobClosure.areasDoneWell\" name=\"areasDoneWell\"></textarea-focus>\n                                        <textarea-focus required label=\"What could we improve on during this project?\" required [propertyName]=\"areasNeedingImprovement\" class=\"form-group form-group-default required\" [(ngModel)]=\"jobClosure.areasNeedingImprovement\" name=\"areasNeedingImprovement\"></textarea-focus>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- END PANEL -->\n            </div>\n        </form>\n</div>\n</div>\n";

/***/ }),
/* 315 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Job</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"job\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs']\">Job Listing</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs', job.id]\" class=\"active\">{{job.jobCode}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#profile\" aria-expanded=\"false\"><span>Profile</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#workInstructions\" aria-expanded=\"false\"><span>Work Instructions</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#productionreports\" aria-expanded=\"false\"><span>Production Reports</span></a>\n        </li>\n       <li *permission=\"'jobs-rates'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#ratesservices\" aria-expanded=\"false\"><span>Rates & Services</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#documents\" aria-expanded=\"false\"><span>Documents</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'jobs-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#profile\">\n                        <span>Profile</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#workInstructions\">\n                        <span>Work Instructions</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#productionreports\">\n                        <span>Production Reports</span>\n                    </li>\n                    <li *permission=\"'jobs-rates'\" data-option=\"\" data-value=\"#ratesservices\">\n                        <span>Rates & Services</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#documents\">\n                        <span>Documents</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'jobs-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#profile\">Profile</option>\n                <option value=\"#workInstructions\">Work Instructions</option>\n                <option value=\"#productionreports\">Production Reports</option>\n                <option *permission=\"'jobs-rates'\" value=\"#ratesservices\">Rates & Services</option>\n                <option value=\"#documents\">Documents</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'jobs-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n               \n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"profile\">\n            <div class=\"row\">\n                <div class=\"pull-right\">\n                    <span *ngIf=\"showJobClosure\"><a [routerLink]=\"(['/jobs/',job.id,'closure'])\" class=\"btn btn-danger\"><i class=\"fa fa-sticky-note\"></i> Close Job</a></span>\n                </div>\n                <div class=\"clearfix\"></div>\n                <form (ngSubmit)=\"saveJob()\" role=\"form\" #jobform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                    Profile Information\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus *ngIf=\"!isContact\" (change)=\"loadClientData()\" required label=\"Client\" [data]=\"clients\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"clientId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.clientId\" name=\"clientId\"></select-focus>\n                                <select-focus [disabled]=\"!job.clientId || job.clientId == 0\" required label=\"Location\" [data]=\"locations\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"locationId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.locationId\" name=\"locationId\"></select-focus>\n\n                                <select-focus required label=\"Type\" [data]=\"jobTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"jobTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.jobTypeId\" name=\"jobTypeId\"></select-focus>\n\n                                <textarea-focus required label=\"Description\" placeholder=\"Describe the work to be performed\" [propertyName]=\"description\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.description\" name=\"description\" rows=\"7\"></textarea-focus>\n                                                            \n                                <button type=\"submit\" [disabled]=\"!jobform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Job <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                                </button> &nbsp;\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n                                   \n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus required label=\"Client Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"quoteApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.quoteApprovalContactId\" name=\"quoteApprovalContactId\"></select-focus>\n                                <select-focus required label=\"Location Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"workInstructionApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.workInstructionApprovalContactId\" name=\"workInstructionApprovalContactId\"></select-focus>\n\n                                <input-focus label=\"PO Number\" [propertyName]=\"poNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"job.poNumber\" name=\"poNumber\"></input-focus>\n                                <input-focus label=\"Start Date\" [propertyName]=\"startDate\" class=\"form-group form-group-default\" [(ngModel)]=\"job.startDate\" name=\"startDate\"></input-focus>\n                                <input-focus label=\"Part Description\" [propertyName]=\"partDescription\" class=\"form-group form-group-default\" [(ngModel)]=\"job.partDescription\" name=\"partDescription\"></input-focus>\n                                <div>\n                                    <input type=\"checkbox\" [(ngModel)]=\"job.useIdentifiers\" name=\"useIdentifiers\" [checked]=\"job.useIdentifiers\" (click)=\"checkUnCheckUseIdentifiers()\" />\n                                    <label>Use Identifiers</label>\n                                </div>                               \n                          </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"workInstructions\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Work Instructions\n                            </div>\n                        </div>\n                        <div *ngIf=\"workInstructions\" class=\"panel-body\" [in-progress]=\"workInstructionsLoading\">                            \n                            <data-table [data]=\"workInstructions\" [config]=\"workInstructionsConfig\" (refresh)=\"loadWorkInstructions($event)\" [pagination]=\"workInstructionsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"productionreports\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Production Reports\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"productionReportsLoading\">\n                            <data-table [data]=\"productionReports\" [config]=\"productionReportsConfig\" (refresh)=\"loadProductionReports($event)\" [pagination]=\"productionReportsPagination\"></data-table>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-rates'\" class=\"tab-pane\" id=\"ratesservices\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Services\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'jobs-rates-add'\" (click)=\"openModal('addService')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Service</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"jobServicesLoading\">\n                            <div class=\"dataTables_wrapper form-inline no-footer\">\n                                <div>\n                                    <table class=\"table dataTable no-footer\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n                                        <thead>\n                                            <tr role=\"row\">\n                                                <th *ngFor=\"let column of jobServicesConfig.columns\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                                                <th class=\"v-align-middle\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr ngForm #Serviceeditform=\"ngForm\" *ngFor=\"let record of jobServices;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                                                <td class=\"v-align-middle\">\n                                                    <span>{{jobServicesConfig.columns[0].formatter(record)}}</span>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift1Count\" name=\"shift1Count\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift2Count\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift2Count\" name=\"shift2Count\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift3Count\" name=\"shift3Count\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <button name=\"s\" *permission=\"'jobs-rates-edit'\" [disabled]=\"!Serviceeditform.valid || processing\" (click)=\"saveService(record)\" type=\"submit\" class=\"btn btn-complete\">Save</button>\n                                                    <button name=\"d\" *permission=\"'jobs-rates-delete'\" (click)=\"openServiceModal('delete' + jobServicesConfig.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Rates\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"jobServicesLoading\">\n                            <div class=\"dataTables_wrapper form-inline no-footer\">\n                                <div>\n                                    <table class=\"table dataTable no-footer ratesServicesPadding\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n                                        <thead>\n                                            <tr role=\"row\">\n                                                <th *ngFor=\"let column of jobRatesConfig.columns\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                                                <th class=\"v-align-middle\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr ngForm #Servicerateseditform=\"ngForm\" *ngFor=\"let record of jobServices;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                                                <td class=\"v-align-middle\">\n                                                    <span>{{jobRatesConfig.columns[0].formatter(record)}}</span>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift1Rate\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift1Rate\" name=\"shift1Rate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift2Rate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift2Rate\" name=\"shift2Rate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift3Rate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.shift3Rate\" name=\"shift3Rate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"saturdayRate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.saturdayRate\" name=\"saturdayRate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"sundayRate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.sundayRate\" name=\"sundayRate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"holidayRate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.holidayRate\" name=\"holidayRate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"overtimeRate\" min=\"0\" class=\"form-group form-group-default ratesServices required\" [(ngModel)]=\"record.overtimeRate\" name=\"overtimeRate\" (keypress)=\"keyPress($event)\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <button name=\"s\" *permission=\"'jobs-rates-edit'\" [disabled]=\"!Servicerateseditform.valid || processing\" (click)=\"saveService(record)\" type=\"submit\" class=\"btn btn-complete\">Save</button>\n                                                    <button name=\"d\" *permission=\"'jobs-rates-delete'\" (click)=\"openServiceRatesModal('delete' + jobRatesConfig.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>        \n        <div class=\"tab-pane\" id=\"documents\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Documents\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"documentsProcessing\">\n                            <data-table  [data]=\"jobDocuments\" [config]=\"jobDocumentsConfig\" (refresh)=\"loadDocuments($event)\" (download)=\"fetchDocument($event)\" [pagination]=\"jobDocumentsPagination\"></data-table>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"transactionsProcessing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{job.jobCode}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a job will prevent further time/data entry in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveJob')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Job\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'jobs-delete'\" id=\"archiveJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive job #{{job.jobCode}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a job will prevent further time/data entry in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveJob();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveJob')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-rates-add'\" id=\"addService\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addService')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Service</h5>\n            </div>\n            <form (ngSubmit)=\"addService()\" role=\"form\" #serviceform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <select-focus required label=\"Type\" [data]=\"serviceTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"serviceId\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.serviceId\" name=\"serviceId\"></select-focus>\n                            <input-focus label=\"Shift1 Count\" inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift1Count\" name=\"shift1Count\"></input-focus>\n                            <input-focus label=\"Shift2 Count\" inputType=\"number\" required [propertyName]=\"shift2Rate\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift2Count\" name=\"shift2Count\"></input-focus>\n                            <input-focus label=\"Shift3 Count\" inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift3Count\" name=\"shift3Count\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!serviceform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Service <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addService')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal [id]=\"'delete' + jobServicesConfig.entityTypeName\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('delete' + jobServicesConfig.entityTypeName)\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">{{deleteText || 'Are you sure?'}}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        {{deleteMessage || 'Are you sure you want to delete this record?'}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button *permission=\"'jobs-rates-delete'\" (click)=\"deleteServiceRecord('delete' + jobServicesConfig.entityTypeName);\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeServiceModal('delete' + jobServicesConfig.entityTypeName)\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 316 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Job</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"job\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs']\">Job Listing</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs', job.id]\" class=\"active\">{{job.jobCode}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#details\" aria-expanded=\"false\"><span>Details</span></a>\n        </li>\n        <li *permission=\"'jobs-rates'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#services\" aria-expanded=\"false\"><span>Services</span></a>\n        </li>\n        <li *permission=\"'jobs-rates'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#rates\" aria-expanded=\"false\"><span>Rates</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'jobs-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#details\">\n                        <span>Details</span>\n                    </li>\n                    <li *permission=\"'jobs-rates'\" data-option=\"\" data-value=\"#services\">\n                        <span>Services</span>\n                    </li>\n                    <li *permission=\"'jobs-rates'\" data-option=\"\" data-value=\"#rates\">\n                        <span>Rates</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'jobs-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#details\">Details</option>\n                <option *permission=\"'jobs-rates'\" value=\"#services\">Services</option>\n                <option *permission=\"'jobs-rates'\" value=\"#rates\">Rates</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'jobs-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                    <div class=\"panel col-md-12\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Profile Information\n                            </div>\n                            <div class=\"pull-right\">\n                                <span *ngIf=\"showRequest\"><button *permission=\"'jobs-add'\" (click)=\"quoteRequest()\" [disabled]=\"!isEnableRequest\" class=\"btn btn-primary\"><i class=\"fa fa-sticky-note\"></i> {{requestBtnText}}</button></span>\n                                <span *ngIf=\"showApprove\"><button *permission=\"'quote-approval'\" (click)=\"quoteApprove()\" class=\"btn btn-success\"><i class=\"fa fa-check-square-o\"></i> {{approveBtnText}}</button></span>\n                                <span *ngIf=\"showDecline\"><button *permission=\"'quote-approval'\" (click)=\"quoteDecline()\" class=\"btn btn-danger\"><i class=\"fa fa-ban\"></i> {{declineBtnText}}</button></span>\n                            </div>\n                        </div>\n                    </div>\n                <form (ngSubmit)=\"saveJob()\" role=\"form\" #jobform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus *ngIf=\"!isContact\" (change)=\"loadClientData()\" required label=\"Client\" [data]=\"clients\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"clientId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.clientId\" name=\"clientId\"></select-focus>\n                                <select-focus [disabled]=\"!job.clientId || job.clientId == 0\" required label=\"Location\" [data]=\"locations\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"locationId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.locationId\" name=\"locationId\"></select-focus>\n\n                                <select-focus required label=\"Type\" [data]=\"jobTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"jobTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.jobTypeId\" name=\"jobTypeId\"></select-focus>\n\n                                <textarea-focus required label=\"Description\" placeholder=\"Describe the work to be performed\" [propertyName]=\"description\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.description\" name=\"description\" rows=\"7\"></textarea-focus>\n                                <button type=\"submit\" [disabled]=\"!jobform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Job <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                                </button> &nbsp;\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <!--<div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n\n                    </div>\n                </div>-->\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus required label=\"Client Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"quoteApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.quoteApprovalContactId\" name=\"quoteApprovalContactId\"></select-focus>\n                                <select-focus required label=\"Location Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"workInstructionApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.workInstructionApprovalContactId\" name=\"workInstructionApprovalContactId\"></select-focus>\n\n                                <input-focus label=\"PO Number\" [propertyName]=\"poNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"job.poNumber\" name=\"poNumber\"></input-focus>\n                                <input-focus label=\"Start Date\" [propertyName]=\"startDate\" class=\"form-group form-group-default\" [(ngModel)]=\"job.startDate\" name=\"startDate\"></input-focus>\n                                <input-focus label=\"Part Description\" [propertyName]=\"partDescription\" class=\"form-group form-group-default\" [(ngModel)]=\"job.partDescription\" name=\"partDescription\"></input-focus>\n                                <div>\n                                    <input type=\"checkbox\" [(ngModel)]=\"job.useIdentifiers\" name=\"useIdentifiers\" [checked]=\"job.useIdentifiers\" (click)=\"checkUnCheckUseIdentifiers()\" />\n                                    <label>Use Identifiers</label>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"details\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Job Details\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"jobDefectsLoading\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Part Numbers\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addPartNumber')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Part Number</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"jobPartNumbersLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"jobPartNumbers\" (delete)=\"deletePartNumber($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the part number?\" [config]=\"jobPartNumbersConfig\" (refresh)=\"loadPartNumbers($event)\" [pagination]=\"jobPartNumbersPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showDefect\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Defects\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addDefect')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Defect</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"jobDefectsLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"jobDefects\" (delete)=\"deleteDefect($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the defect?\" [config]=\"jobDefectsConfig\" (refresh)=\"loadDefects($event)\" [pagination]=\"jobDefectPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showRework\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Rework\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addRework')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Rework</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"workInstructionReworkLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"workInstructionReworks\" (delete)=\"deleteWorkInstructionRework($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the rework?\" [config]=\"workInstructionReworkConfig\" (refresh)=\"loadWorkIstructionRework($event)\" [pagination]=\"workInstructionReworkPagination\"></data-table>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-rates'\" class=\"tab-pane\" id=\"services\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Services\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'jobs-rates-add'\" (click)=\"openModal('addService')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Service</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"JobServicesLoading\">\n                            <div class=\"dataTables_wrapper form-inline no-footer\">\n                                <div>\n                                    <table class=\"table dataTable no-footer\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n                                        <thead>\n                                            <tr role=\"row\">\n                                                <th *ngFor=\"let column of JobServicesConfig.columns\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                                                <th class=\"v-align-middle\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr ngForm #Serviceeditform=\"ngForm\" *ngFor=\"let record of JobServices;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                                                <td class=\"v-align-middle\">\n                                                    <span>{{JobServicesConfig.columns[0].formatter(record)}}</span>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift1Count\" name=\"shift1Count\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift2Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift2Count\" name=\"shift2Count\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift3Count\" name=\"shift3Count\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <button name=\"s\" *permission=\"'jobs-rates-edit'\" [disabled]=\"!Serviceeditform.valid || processing\" (click)=\"saveService(record)\" type=\"submit\" class=\"btn btn-complete\">Save</button>\n                                                    <button name=\"d\" *permission=\"'jobs-rates-delete'\" (click)=\"openServiceModal('delete' + JobServicesConfig.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                             </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-rates'\" class=\"tab-pane\" id=\"rates\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Rates\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"JobServicesLoading\">\n                            <div class=\"dataTables_wrapper form-inline no-footer\">\n                                <div>\n                                    <table class=\"table dataTable no-footer\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n                                        <thead>\n                                            <tr role=\"row\">\n                                                <th *ngFor=\"let column of jobserviceRateConfig.columns\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                                                <th class=\"v-align-middle\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr ngForm #Servicerateseditform=\"ngForm\" *ngFor=\"let record of JobServices;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                                                <td class=\"v-align-middle\">\n                                                    <span>{{jobserviceRateConfig.columns[0].formatter(record)}}</span>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift1Rate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.shift1Rate\" name=\"shift1Rate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift2Rate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.shift2Rate\" name=\"shift2Rate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift3Rate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.shift3Rate\" name=\"shift3Rate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"saturdayRate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.saturdayRate\" name=\"saturdayRate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"sundayRate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.sundayRate\" name=\"sundayRate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"holidayRate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.holidayRate\" name=\"holidayRate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"overtimeRate\" class=\"form-group form-group-default servicerate required\" [(ngModel)]=\"record.overtimeRate\" name=\"overtimeRate\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <button name=\"s\" *permission=\"'jobs-rates-edit'\" [disabled]=\"!Servicerateseditform.valid || processing\" (click)=\"saveService(record)\" type=\"submit\" class=\"btn btn-complete\">Save</button>\n                                                    <button name=\"d\" *permission=\"'jobs-rates-delete'\" (click)=\"openServiceRatesModal('delete' + jobserviceRateConfig.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                              </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"transactionsProcessing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{job.jobCode}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a job will prevent further time/data entry in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveJob')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Job\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'jobs-delete'\" id=\"archiveJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive job #{{job.jobCode}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a job will prevent further time/data entry in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveJob();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveJob')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-edit'\" id=\"addPartNumber\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addPartNumber')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Part Number</h5>\n            </div>\n            <form (ngSubmit)=\"addPartNumber()\" role=\"form\" #partNumberform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <input-focus label=\"Part Number\" required [propertyName]=\"partNumber\" class=\"form-group form-group-default required\" [(ngModel)]=\"newPartNumber.partNumber\" name=\"partNumber\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!partNumberform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Part Number <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addPartNumber')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-edit'\" id=\"addDefect\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addDefect')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Defect</h5>\n            </div>\n            <form (ngSubmit)=\"addDefect()\" role=\"form\" #defectform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Defect\" required [propertyName]=\"defectTitle\" class=\"form-group form-group-default required\" [(ngModel)]=\"newDefect.defectTitle\" name=\"defectTitle\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!defectform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Defect <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addDefect')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-rates-add'\" id=\"addService\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addService')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Service</h5>\n            </div>\n            <form (ngSubmit)=\"addService()\" role=\"form\" #serviceform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <select-focus required label=\"Type\" [data]=\"serviceTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"serviceId\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.serviceId\" name=\"serviceId\"></select-focus>\n                            <input-focus label=\"Shift1 Count\" inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift1Count\" name=\"shift1Count\"></input-focus>\n                            <input-focus label=\"Shift2 Count\" inputType=\"number\" required [propertyName]=\"shift2Rate\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift2Count\" name=\"shift2Count\"></input-focus>\n                            <input-focus label=\"Shift3 Count\" inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift3Count\" name=\"shift3Count\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!serviceform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Service <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addService')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n<modal *permission=\"'jobs-edit'\" id=\"addRework\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addRework')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Rework</h5>\n            </div>\n            <form (ngSubmit)=\"addWorkInstructionReWork()\" role=\"form\" #reworkform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Name\" required [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"newRework.name\" name=\"name\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!reworkform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Rework <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addRework')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal [id]=\"'delete' + JobServicesConfig.entityTypeName\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('delete' + JobServicesConfig.entityTypeName)\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">{{deleteText || 'Are you sure?'}}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        {{deleteMessage || 'Are you sure you want to delete this record?'}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button *permission=\"'jobs-rates-delete'\" (click)=\"deleteServiceRecord('delete' + JobServicesConfig.entityTypeName);\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeServiceModal('delete' + JobServicesConfig.entityTypeName)\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 317 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Job</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"job\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs']\">Job Listing</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs', job.id]\" class=\"active\">{{job.jobCode}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#details\" aria-expanded=\"false\"><span>Details</span></a>\n        </li>\n        <li *permission=\"'jobs-rates'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#services\" aria-expanded=\"false\"><span>Services</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li *permission=\"'jobs-delete'\" class=\"\">\n            <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#details\">\n                        <span>Details</span>\n                    </li>\n                    <li *permission=\"'jobs-rates'\" data-option=\"\" data-value=\"#services\">\n                        <span>Services</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li *permission=\"'jobs-delete'\" data-option=\"\" data-value=\"#archive\">\n                        <span>Archive</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#details\">Details</option>\n                <option *permission=\"'jobs-rates'\" value=\"#services\">Services</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option *permission=\"'jobs-delete'\" value=\"#archive\">Archive</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\">\n                <div class=\"panel col-md-12\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            Profile Information\n                        </div>\n                        <div class=\"pull-right\">\n                            <span *ngIf=\"showRequest\"><button *permission=\"'jobs-add'\" (click)=\"jobRequest()\" [disabled]=\"!isEnableRequest\" class=\"btn btn-primary\"><i class=\"fa fa-sticky-note\"></i> {{requestBtnText}}</button></span>\n                            <span *ngIf=\"showApprove\"><button *permission=\"'job-approval'\" (click)=\"jobApprove()\" class=\"btn btn-success\"><i class=\"fa fa-check-square-o\"></i> {{approveBtnText}}</button></span>\n                            <span *ngIf=\"showDecline\"><button *permission=\"'job-approval'\" (click)=\"jobDecline()\" class=\"btn btn-danger\"><i class=\"fa fa-ban\"></i> {{declineBtnText}}</button></span>\n                        </div>\n                    </div>\n                </div>\n                <form (ngSubmit)=\"saveJob()\" role=\"form\" #jobform=\"ngForm\">\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus *ngIf=\"!isContact\" (change)=\"loadClientData()\" required label=\"Client\" [data]=\"clients\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"clientId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.clientId\" name=\"clientId\"></select-focus>\n                                <select-focus [disabled]=\"!job.clientId || job.clientId == 0\" required label=\"Location\" [data]=\"locations\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"locationId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.locationId\" name=\"locationId\"></select-focus>\n\n                                <select-focus required label=\"Type\" [data]=\"jobTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"jobTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.jobTypeId\" name=\"jobTypeId\"></select-focus>\n\n                                <textarea-focus required label=\"Description\" placeholder=\"Describe the work to be performed\" [propertyName]=\"description\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.description\" name=\"description\" rows=\"7\"></textarea-focus>\n                                <button type=\"submit\" [disabled]=\"!jobform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Job <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                                </button> &nbsp;\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <!--<div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n\n                                </div>\n                            </div>-->\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <select-focus required label=\"Client Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"quoteApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.quoteApprovalContactId\" name=\"quoteApprovalContactId\"></select-focus>\n                                <select-focus required label=\"Location Contact\" [data]=\"contacts\" dataTextField=\"fullName\" dataValueField=\"id\" [propertyName]=\"workInstructionApprovalContactId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.workInstructionApprovalContactId\" name=\"workInstructionApprovalContactId\"></select-focus>\n\n                                <input-focus label=\"PO Number\" [propertyName]=\"poNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"job.poNumber\" name=\"poNumber\"></input-focus>\n                                <input-focus label=\"Start Date\" [propertyName]=\"startDate\" class=\"form-group form-group-default\" [(ngModel)]=\"job.startDate\" name=\"startDate\"></input-focus>\n                                <input-focus label=\"Part Description\" [propertyName]=\"partDescription\" class=\"form-group form-group-default\" [(ngModel)]=\"job.partDescription\" name=\"partDescription\"></input-focus>\n                                <div>\n                                    <input type=\"checkbox\" [(ngModel)]=\"job.useIdentifiers\" name=\"useIdentifiers\" [checked]=\"job.useIdentifiers\" (click)=\"checkUnCheckUseIdentifiers()\" />\n                                    <label>Use Identifiers</label>\n                                </div>\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </form>\n            </div>\n        </div>\n      <div class=\"tab-pane\" id=\"details\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Job Details\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"jobDefectsLoading\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Part Numbers\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addPartNumber')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Part Number</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"jobPartNumbersLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"jobPartNumbers\" (delete)=\"deletePartNumber($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the part number?\" [config]=\"jobPartNumbersConfig\" (refresh)=\"loadPartNumbers($event)\" [pagination]=\"jobPartNumbersPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showDefect\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Defects\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addDefect')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Defect</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"jobDefectsLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"jobDefects\" (delete)=\"deleteDefect($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the defect?\" [config]=\"jobDefectsConfig\" (refresh)=\"loadDefects($event)\" [pagination]=\"jobDefectPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showRework\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                           Rework\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addRework')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Rework</a>\n                                        </div>\n                                    </div>\n                                    <div [in-progress]=\"workInstructionReworkLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"workInstructionReworks\" (delete)=\"deleteWorkInstructionRework($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the rework?\" [config]=\"workInstructionReworkConfig\" (refresh)=\"loadWorkIstructionRework($event)\" [pagination]=\"workInstructionReworkPagination\"></data-table>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-rates'\" class=\"tab-pane\" id=\"services\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Services\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'jobs-rates-add'\" (click)=\"openModal('addService')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Service</a>\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"JobServicesLoading\">\n                            <div class=\"dataTables_wrapper form-inline no-footer\">\n                                <div>\n                                    <table class=\"table dataTable no-footer\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n                                        <thead>\n                                            <tr role=\"row\">\n                                                <th *ngFor=\"let column of JobServicesConfig.columns\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                                                <th class=\"v-align-middle\"></th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr ngForm #Serviceeditform=\"ngForm\" *ngFor=\"let record of JobServices;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                                                <td class=\"v-align-middle\">\n                                                    <span>{{JobServicesConfig.columns[0].formatter(record)}}</span>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift1Count\" name=\"shift1Count\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift2Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift2Count\" name=\"shift2Count\"></input-focus>\n                                                </td>\n                                                <td>\n                                                    <input-focus inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"record.shift3Count\" name=\"shift3Count\"></input-focus>\n                                                </td>\n                                                <td class=\"v-align-middle\">\n                                                    <button name=\"s\" *permission=\"'jobs-rates-edit'\" [disabled]=\"!Serviceeditform.valid || processing\" (click)=\"saveService(record)\" type=\"submit\" class=\"btn btn-complete\">Save</button>\n                                                    <button name=\"d\" *permission=\"'jobs-rates-delete'\" (click)=\"openServiceModal('delete' + JobServicesConfig.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <div class=\"row\" *ngIf=\"pagination\">\n                                    <pagination-summary *ngIf=\"config.showPaging\" [config]=\"config\" [pagination]=\"pagination\"></pagination-summary>\n                                    <pagination *ngIf=\"config.showPager\" (refresh)=\"refreshGrid($event)\" [pagination]=\"pagination\"></pagination>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"transactionsProcessing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div *permission=\"'jobs-delete'\" class=\"tab-pane\" id=\"archive\">\n            <div class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Archive {{job.jobCode}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a job will prevent further time/data entry in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveJob')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Job\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'jobs-delete'\" id=\"archiveJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive job #{{job.jobCode}}.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a job will prevent further time/data entry in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveJob();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveJob')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-edit'\" id=\"addPartNumber\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addPartNumber')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Part Number</h5>\n            </div>\n            <form (ngSubmit)=\"addPartNumber()\" role=\"form\" #partNumberform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <input-focus label=\"Part Number\" required [propertyName]=\"partNumber\" class=\"form-group form-group-default required\" [(ngModel)]=\"newPartNumber.partNumber\" name=\"partNumber\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!partNumberform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Part Number <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addPartNumber')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-edit'\" id=\"addDefect\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addDefect')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Defect</h5>\n            </div>\n            <form (ngSubmit)=\"addDefect()\" role=\"form\" #defectform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Defect\" required [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"newDefect.name\" name=\"name\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!defectform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Defect <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addDefect')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-edit'\" id=\"addRework\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addRework')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Rework</h5>\n            </div>\n            <form (ngSubmit)=\"addWorkInstructionReWork()\" role=\"form\" #reworkform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Name\" required [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"newRework.name\" name=\"name\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!reworkform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Rework <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addRework')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'jobs-rates-add'\" id=\"addService\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addService')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Service</h5>\n            </div>\n            <form (ngSubmit)=\"addService()\" role=\"form\" #serviceform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <select-focus required label=\"Type\" [data]=\"serviceTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"serviceId\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.serviceId\" name=\"serviceId\"></select-focus>\n                            <input-focus label=\"Shift1 Count\" inputType=\"number\" required [propertyName]=\"shift1Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift1Count\" name=\"shift1Count\"></input-focus>\n                            <input-focus label=\"Shift2 Count\" inputType=\"number\" required [propertyName]=\"shift2Rate\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift2Count\" name=\"shift2Count\"></input-focus>\n                            <input-focus label=\"Shift3 Count\" inputType=\"number\" required [propertyName]=\"shift3Count\" class=\"form-group form-group-default required\" [(ngModel)]=\"newService.shift3Count\" name=\"shift3Count\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!serviceform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Service <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addService')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal [id]=\"'delete' + JobServicesConfig.entityTypeName\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('delete' + JobServicesConfig.entityTypeName)\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">{{deleteText || 'Are you sure?'}}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        {{deleteMessage || 'Are you sure you want to delete this record?'}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button *permission=\"'jobs-rates-delete'\" (click)=\"deleteServiceRecord('delete' + JobServicesConfig.entityTypeName);\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeServiceModal('delete' + JobServicesConfig.entityTypeName)\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 318 */
/***/ (function(module, exports) {

module.exports = "<template #dynamicview></template>";

/***/ }),
/* 319 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"pull-left\">Jobs</h3>\n            <div class=\"pull-right\">\n                <a *permission=\"'jobs-add'\" (click)=\"openModal('addJob')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Job</a>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <div class=\"row\">\n        <div class=\"col-md-12\">\n            <!-- START PANEL -->\n            <div class=\"panel panel-transparent\" [in-progress]=\"areJobsLoading\">\n                <div class=\"panel-heading\">\n                    <div class=\"panel-title\">\n                        Job Listing\n                    </div>\n                    <div class=\"pull-right\">\n                        <div class=\"col-xs-12\">\n                            <input type=\"text\" id=\"searchFor\" name=\"searchFor\" (change)=\"filterChanged()\" [(ngModel)]=\"searchFor\" class=\"form-control pull-right\" placeholder=\"Search\">\n                        </div>\n                    </div>\n                    <div class=\"clearfix\"></div>\n                </div>\n                <div class=\"panel-body\">\n                    <data-table [data]=\"jobs\" [config]=\"jobsConfig\" (refresh)=\"loadJobs($event)\" [pagination]=\"jobPagination\"></data-table>\n                </div>\n            </div>\n            <!-- END PANEL -->\n        </div>\n    </div>\n</div>\n\n<modal *ngIf=\"canAddJob\" id=\"addJob\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addJob')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Job</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <job-add [(job)]=\"newJob\" [processing]=\"processing\" (save)=\"createJob($event)\"></job-add>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 320 */
/***/ (function(module, exports) {

module.exports = "\nHi!  This is a test page for PDF creation\n<br />\n<button type=\"submit\" (click)=\"GeneratePDF()\" class=\"btn btn-primary\">\n    Download PDF    \n</button>&nbsp;\n";

/***/ }),
/* 321 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Work Instruction Step</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"workInstructionStep\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs/',jobId,'work-instructions',workInstructionId]\">Work Instruction Steps</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs/',jobId,'work-instructions-steps',workInstructionId, workInstructionStep.id]\" class=\"active\">Step #{{workInstructionStep.sequence}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        \n        <li *ngIf=\"showArchive\" class=\"\">\n           <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n        </li>\n        \n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li *ngIf=\"showArchive\" class=\"\">\n                        <a data-toggle=\"tab\" href=\"#archive\" aria-expanded=\"false\"><span>Archive</span></a>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option *ngIf=\"showArchive\"  value=\"#archive\">Archive</option>\n              </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\" [in-progress]=\"processing\">\n                <form (ngSubmit)=\"saveWorkInstructionStep()\" role=\"form\" #workinstructionstepupdateform=\"ngForm\">\n                    <div class=\"panel col-md-12\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Overview\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n\n                                </div>\n                            </div>\n                            <div *ngIf=\"workInstructionStep\" class=\"panel-body\" [in-progress]=\"processing\">\n                                <textarea-focus [disabled]=\"!isAllowWorkInstruction\" label=\"Description\" required [propertyName]=\"description\" class=\"form-group form-group-default required\" [(ngModel)]=\"workInstructionStep.description\" name=\"description\"></textarea-focus>\n                                <button *ngIf=\"isAllowWorkInstruction\" type=\"submit\" [disabled]=\"!workinstructionstepupdateform.form.valid || processing\" class=\"btn btn-primary\">\n                                    Save Step\n                                    <span *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></span>\n                                </button>&nbsp;\n                                <a class=\"btn btn-default\" [routerLink]=\"(['/jobs/',jobId,'work-instructions',workInstructionId])\">Cancel</a>\n\n                            </div>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                    <div class=\"col-md-6\">\n                        <!-- START PANEL -->\n                        <div class=\"panel panel-default\">\n                            <div class=\"panel-heading\">\n                                <div class=\"panel-title\">\n\n                                </div>\n                            </div>\n                            <div class=\"panel-body\" [in-progress]=\"processing\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <div class=\"form-group form-group-default\">\n                                            <label>Select an image file to upload</label>\n                                            <input #fileInput type=\"file\" name=\"profileImage\" accept=\".jpg,.png,.gif,.bmp,image/bmp,image/png,image/jpeg,image/gif\" />\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-12\">\n                                        <p>\n                                            <span class=\"thumbnail\">\n                                                <img [src]=\"stepImage\" class=\"photo\" />\n                                            </span>\n                                        </p>\n                                        </div>\n                                    </div>\n                                       \n                                    </div>\n                                </div>\n                                <!-- END PANEL -->\n                            </div>\n                </form>\n        </div>\n        </div>\n        <div *permission=\"'workinstructions-archive'\" class=\"tab-pane\" id=\"archive\">\n            <div *ngIf=\"isAllowWorkInstruction\" class=\"row column-seperation\">\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div *ngIf=\"workInstructionStep\" class=\"panel-title\">\n                                Archive {{workInstructionStep.title}}\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <div class=\"row\">\n                                <div class=\"col-sm-12\">\n                                    <p>&nbsp;</p>\n                                    <p><b class=\"text-danger\">Archiving a step will prevent further time/data entry in the portal.</b></p>\n                                    <p>&nbsp;</p>\n                                    <button (click)=\"openModal('archiveStep')\" type=\"submit\" [disabled]=\"processing\" class=\"btn btn-danger\">\n                                        Archive Job\n                                    </button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'workinstructions-archive'\" id=\"archiveStep\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('archiveStep')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Are you sure?</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        <p>Please confirm that you wish to archive step #.</p>\n                        <p><b class=\"text-danger\">Reminder:</b> Archiving a step will prevent further time/data entry in the portal.</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"archiveWorkInstructionStep();\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('archiveStep')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>\n";

/***/ }),
/* 322 */
/***/ (function(module, exports) {

module.exports = "<div class=\"jumbotron  no-margin\" data-pages=\"parallax\">\n    <div class=\"container-fluid container-fixed-lg sm-p-l-20 sm-p-r-20\">\n        <div class=\"inner\" style=\"transform: translateY(0px); opacity: 1;\">\n            <h3 class=\"\">Edit Work Instruction</h3>\n        </div>\n    </div>\n</div>\n\n<div *ngIf=\"workinstruction && job\" class=\"container-fluid container-fixed-lg\">\n    <ul class=\"breadcrumb\">\n        <li>\n            <a [routerLink]=\"['/jobs/',workinstruction.jobId]\">Job {{job.jobCode}}</a>\n        </li>\n        <li>\n            <a [routerLink]=\"['/jobs/',workinstruction.jobId,'/work-instructions/', workinstruction.id]\" class=\"active\">Revision #{{workinstruction.revision}}</a>\n        </li>\n    </ul>\n</div>\n\n<div class=\"container-fluid container-fixed-lg bg-white\">\n    <!-- Nav tabs -->\n    <ul class=\"nav nav-tabs nav-tabs-linetriangle hidden-sm hidden-xs\" data-init-reponsive-tabs=\"dropdownfx\">\n        <li class=\"active\">\n            <a data-toggle=\"tab\" href=\"#overview\" aria-expanded=\"true\"><span>Overview</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#details\" aria-expanded=\"false\"><span>Details</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#steps\" aria-expanded=\"false\"><span>Steps</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#timeline\" aria-expanded=\"false\"><span>Timeline</span></a>\n        </li>\n        <li class=\"\">\n            <a data-toggle=\"tab\" href=\"#riskassessments\" aria-expanded=\"false\"><span>Risk Assessments</span></a>\n        </li>\n    </ul>\n    <div class=\"nav-tab-dropdown cs-wrapper full-width p-t-10 visible-xs visible-sm\">\n        <div class=\"cs-select cs-skin-slide full-width\" tabindex=\"0\">\n            <span class=\"cs-placeholder\">Options</span>\n            <div class=\"cs-options\">\n                <ul>\n                    <li data-option=\"\" data-value=\"#overview\">\n                        <span>Overview</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#details\">\n                        <span>Details</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#steps\">\n                        <span>Steps</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#timeline\">\n                        <span>Timeline</span>\n                    </li>\n                    <li data-option=\"\" data-value=\"#riskassessments\">\n                        <span>Risk Assessments</span>\n                    </li>\n                </ul>\n            </div>\n            <select class=\"cs-select cs-skin-slide full-width\" data-init-plugin=\"cs-select\">\n                <option value=\"#overview\" selected=\"\">Overview</option>\n                <option value=\"#partNumbers\">Part Numbers</option>\n                <option value=\"#steps\">Steps</option>\n                <option value=\"#details\">Details</option>\n                <option value=\"#timeline\">Timeline</option>\n                <option value=\"#riskassessments\">Risk Assessments</option>\n            </select>\n            <div class=\"cs-backdrop\"></div>\n        </div>\n    </div>\n\n    <!-- Tab panes -->\n    <div class=\"tab-content\">\n        <div class=\"tab-pane active\" id=\"overview\">\n            <div class=\"row column-seperation\" [in-progress]=\"cloneWorkInstructionLoading\">\n                <div class=\"panel col-md-12\">\n                    <div class=\"panel-heading\">\n                        <div class=\"panel-title\">\n                            Overview\n                        </div>\n                        <div class=\"pull-right\">\n                            <span><button [disabled]=\"true\" class=\"btn btn-primary\"><i class=\"fa fa-pencil\"></i> Pending Approval</button></span>\n                            <span *ngIf=\"!isAnyDraftWorkInstruction\"><button *permission=\"'workinstructions-clone'\" (click)=\"cloneWorkInstruction()\" class=\"btn btn-primary\"><i class=\"fa fa-clone\"></i> Clone Instructions</button></span>\n                            <span *ngIf=\"isDraftWorkInstructionStatus\"><button *permission=\"'workinstructions-edit'\" (click)=\"workInstructionRequest()\" class=\"btn btn-primary\"><i class=\"fa fa-sticky-note\"></i> Request Approval</button></span>\n                            <span *ngIf=\"isRequestedWorkInstructionStatus\"><button *permission=\"'workinstructions-approval'\" (click)=\"workInstructionApprove()\" class=\"btn btn-primary\"><i class=\"fa fa-check-square-o\"></i> Approve</button></span>\n                            <span *ngIf=\"isRequestedWorkInstructionStatus\"><button *permission=\"'workinstructions-approval'\" (click)=\"workInstructionDecline()\" class=\"btn btn-primary\"><i class=\"fa fa-ban\"></i> Decline</button></span>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"processing\">\n                            <input-focus label=\"Revision\" [propertyName]=\"revision\" class=\"form-group form-group-default\" disabled=\"true\" [(ngModel)]=\"workinstruction.revision\" name=\"revision\"></input-focus>\n                            <input-focus label=\"Status\" [propertyName]=\"workInstructionStatusId\" class=\"form-group form-group-default\" disabled=\"true\" [(ngModel)]=\"workInstructionStatus\" name=\"workInstructionStatusId\"></input-focus>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n                <div class=\"col-md-6\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Documents\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"cloneWorkInstructionLoading\">\n                            <ul style=\"list-style-type: none;\" *ngFor=\"let document of workInstructionDocuments\"><li><a (click)=\"fetchDocument(document)\">{{document.documentName}}</a></li></ul>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"details\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Job Details\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"jobDefectsLoading\">\n                            <div class=\"row\">\n                                <div class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Part Numbers\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addPartNumber')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Part Number</a>\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"workInstructionPartNumbers\" [in-progress]=\"workInstructionPartNumbersLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"workInstructionPartNumbers\" (delete)=\"deletePartNumber($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the part number?\" [config]=\"workInstructionPartNumbersConfig\" (refresh)=\"loadPartNumbers($event)\" [pagination]=\"workInstructionPartNumbersPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showDefect\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Defects\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addDefect')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Defect</a>\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"jobDefects\" [in-progress]=\"jobDefectsLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"jobDefects\" (delete)=\"deleteDefect($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the defect?\" [config]=\"jobDefectsConfig\" (refresh)=\"loadDefects($event)\" [pagination]=\"jobDefectPagination\"></data-table>\n                                    </div>\n                                </div>\n                                <div *ngIf=\"showRework\" class=\"col-md-4\">\n                                    <div class=\"panel-heading\">\n                                        <div class=\"panel-title pull-left\">\n                                            Rework\n                                        </div>\n                                        <div class=\"pull-right\">\n                                            <a *permission=\"'jobs-edit'\" (click)=\"openModal('addRework')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Rework</a>\n                                        </div>\n                                    </div>\n                                    <div *ngIf=\"workInstructionReworks\" [in-progress]=\"workInstructionReworkLoading\">\n                                        <data-table allowDelete=\"true\" [data]=\"workInstructionReworks\" (delete)=\"deleteWorkInstructionRework($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the rework?\" [config]=\"workInstructionReworkConfig\" (refresh)=\"loadWorkIstructionRework($event)\" [pagination]=\"workInstructionReworkPagination\"></data-table>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"steps\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-transparent\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title pull-left\">\n                                Work Instruction Steps\n                            </div>\n                            <div class=\"pull-right\">\n                                <a *permission=\"'workinstructions-edit'\" (click)=\"openModal('addStep')\" class=\"btn btn-primary\"><i class=\"fa fa-plus\"></i> Add Step</a>\n                            </div>\n                        </div>\n\n                        <!--<div [in-progress]=\"workInstructionStepsLoading\">\n                            <data-table allowDelete=\"true\" [data]=\"workInstructionSteps\" (delete)=\"deleteStep($event)\" deleteTitle=\"Are you sure?\" deleteMessage=\"Are you sure you want to delete the step?\" [config]=\"workInstructionStepsConfig\" (refresh)=\"loadSteps($event)\" [pagination]=\"workInstructionStepPagination\"></data-table>\n                        </div>-->\n                        <div class=\"panel-body\" [in-progress]=\"workInstructionStepsLoading\">\n                            <div>\n                                <div class='wrapper'>\n                                    <div *ngIf=\"workInstructionSteps\" class='container' [dragula]='\"bag-task1\"'>\n                                        <div *ngFor=\"let step of workInstructionSteps\" [attr.data-id]=\"step.id\" [attr.data-sequence]=\"step.sequence\">\n                                            <a [routerLink]=\"['/jobs', job.id, 'work-instructions', workinstruction.id, 'steps', step.id]\">{{step.description}}</a>\n                                            <button name=\"d\" (click)=\"deleteStep(step)\" class=\"btn btn-danger pull-right\">Delete</button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <!-- END PANEL -->\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"timeline\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Timeline\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"transactionsProcessing\">\n                            <timeline [(isLoading)]=\"transactionsLoading\" [(data)]=\"transactions\" (refresh)=\"loadTransactions($event)\" [(pagination)]=\"transactionPagination\"></timeline>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"tab-pane\" id=\"riskassessments\">\n            <div class=\"row\">\n                <div class=\"col-md-12\">\n                    <!-- START PANEL -->\n                    <div class=\"panel panel-default\">\n                        <div class=\"panel-heading\">\n                            <div class=\"panel-title\">\n                                Risk Assessments\n                            </div>\n                        </div>\n                        <div class=\"panel-body\" [in-progress]=\"riskassessmentsLoading\">\n                            <data-table [data]=\"riskAssessments\" [config]=\"riskassessmentsConfig\" (refresh)=\"loadRiskAssessments($event)\" [pagination]=\"riskassessmentsPagination\"></data-table>\n                        </div>\n                        <!-- END PANEL -->\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<modal *permission=\"'workinstructions-edit'\" id=\"addPartNumber\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addPartNumber')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Part Number</h5>\n            </div>\n            <form (ngSubmit)=\"addPartNumber()\" role=\"form\" #partNumberform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <input-focus label=\"Part Number\" required [propertyName]=\"partNumber\" class=\"form-group form-group-default required\" [(ngModel)]=\"newPartNumber.partNumber\" name=\"partNumber\"></input-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!partNumberform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Part Number <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addPartNumber')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'workinstructions-edit'\" id=\"addDefect\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addDefect')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Defect</h5>\n            </div>\n            <form (ngSubmit)=\"addDefect()\" role=\"form\" #defectform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Defect\" required [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"newDefect.name\" name=\"name\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!defectform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Defect <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addDefect')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'workinstructions-edit'\" id=\"addStep\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addStep')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Step</h5>\n            </div>\n            <form (ngSubmit)=\"addStep()\" role=\"form\" #stepform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Description\" required [propertyName]=\"Description\" class=\"form-group form-group-default required\" [(ngModel)]=\"newStep.description\" name=\"stepDescription\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!stepform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Step <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addStep')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>\n\n<modal *permission=\"'workinstructions-edit'\" id=\"addRework\" class=\"modal fade\" role=\"dialog\">\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('addRework')\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">Add Rework</h5>\n            </div>\n            <form (ngSubmit)=\"addWorkInstructionReWork()\" role=\"form\" #reworkform=\"ngForm\">\n                <div class=\"modal-body\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <textarea-focus label=\"Name\" required [propertyName]=\"name\" class=\"form-group form-group-default required\" [(ngModel)]=\"newRework.name\" name=\"name\"></textarea-focus>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-4\"></div>\n                        <div class=\"col-sm-4\">\n                            <button type=\"submit\" [disabled]=\"!reworkform.valid || processing\" class=\"btn btn-danger btn-block m-t-5\">\n                                Save Rework <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n                            </button>\n                        </div>\n                        <div class=\"col-sm-4\">\n                            <button (click)=\"closeModal('addRework')\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 323 */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"copyright sm-text-center\">\n    <p class=\"small no-margin pull-left sm-pull-reset\">\n        <span class=\"hint-text\">Copyright &copy; 2017</span>\n        <span class=\"font-montserrat\">Preferred Precision Group, LLC</span>.\n        <span class=\"hint-text\">All rights reserved.</span>\n        <span class=\"sm-block\">\n            <a href=\"#\" class=\"m-l-10 m-r-10\">Terms of use</a> | <a href=\"#\" class=\"m-l-10\">Privacy Policy</a>\n        </span>\n    </p>\n    <p class=\"small no-margin pull-right sm-pull-reset\">\n        <span class=\"hint-text\"></span>\n    </p>\n    <div class=\"clearfix\"></div>\n</div>";

/***/ }),
/* 324 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = "\n<!-- START MOBILE CONTROLS -->\n<div class=\"container-fluid relative\">\n    <!-- LEFT SIDE -->\n    <div class=\"pull-left full-height visible-sm visible-xs\">\n        <!-- START ACTION BAR -->\n        <div class=\"header-inner\">\n            <a (click)=\"toggleSidebar()\" class=\"btn-link toggle-sidebar visible-sm-inline-block visible-xs-inline-block padding-5\" data-toggle=\"sidebar\">\n                <span class=\"icon-set menu-hambuger\"></span>\n            </a>\n        </div>\n        <!-- END ACTION BAR -->\n    </div>\n    <div class=\"pull-center hidden-md hidden-lg\">\n        <div class=\"header-inner\">\n            <div class=\"brand inline\">\n                <img src=\"" + __webpack_require__(53) + "\" alt=\"logo\" data-src=\"../../assets/images/logo.png\" data-src-retina=\"../../assets/images/logo_2x.png\" width=\"78\" height=\"22\">\n            </div>\n        </div>\n    </div>\n    <!-- RIGHT SIDE -->\n    <!--<div class=\"pull-right full-height visible-sm visible-xs\">\n        <div class=\"header-inner\">\n            <a href=\"#\" class=\"btn-link visible-sm-inline-block visible-xs-inline-block\" data-toggle=\"quickview\" data-toggle-element=\"#quickview\">\n                <span class=\"icon-set menu-hambuger-plus\"></span>\n            </a>\n        </div>\n    </div>--> \n</div>\n<!-- END MOBILE CONTROLS -->\n<div class=\" pull-left sm-table hidden-xs hidden-sm\">\n    <div class=\"header-inner\">\n        <div class=\"brand inline\">\n            <img src=\"" + __webpack_require__(53) + "\" alt=\"logo\" data-src=\"../../assets/images/logo.png\" data-src-retina=\"../../assets/images/logo_2x.png\" width=\"78\" height=\"22\">\n        </div>\n        <!-- START NOTIFICATION LIST -->\n        <notification-popup></notification-popup>\n        <!-- END NOTIFICATIONS LIST -->\n        <!--<a href=\"#\" class=\"search-link\" data-toggle=\"search\"><i class=\"pg-search\"></i>Type anywhere to <span class=\"bold\">search</span></a>-->\n    </div>\n</div>\n<!--<div class=\" pull-right\">\n    <div class=\"header-inner\">\n        <a href=\"#\" class=\"btn-link icon-set menu-hambuger-plus m-l-20 sm-no-margin hidden-sm hidden-xs\" data-toggle=\"quickview\" data-toggle-element=\"#quickview\"></a>\n    </div>\n</div>-->\n<div class=\" pull-right\">\n    <!-- START User Info-->\n    <div class=\"visible-lg visible-md m-t-10\">\n        <div class=\"pull-left p-r-10 p-t-10 fs-16 font-heading\">\n            <span class=\"semi-bold\">{{currentUser.firstName}}</span> <span class=\"text-master\">{{currentUser.lastName}}</span>\n        </div>\n        <div class=\"dropdown pull-right\">\n            <button class=\"profile-dropdown-toggle\" type=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                <span class=\"thumbnail-wrapper d32 circular inline m-t-5\">\n                    <img [src]=\"profileImage\" alt=\"\" width=\"32\" height=\"32\">\n                </span>\n            </button>\n            <ul class=\"dropdown-menu profile-dropdown\" role=\"menu\">\n                <!--<li>\n                    <a href=\"#\"><i class=\"pg-settings_small\"></i> Settings</a>\n                </li>\n                <li>\n                    <a href=\"#\"><i class=\"pg-signals\"></i> Help</a>\n                </li>-->\n                <li class=\"bg-master-lighter\">\n                    <a [routerLink]=\"['/auth/logout']\" class=\"clearfix\">\n                        <span class=\"pull-left\">Logout</span>\n                        <span class=\"pull-right\"><i class=\"pg-power\"></i></span>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    </div>\n    <!-- END User Info-->\n</div>";

/***/ }),
/* 325 */
/***/ (function(module, exports) {

module.exports = "\n<app-sidebar class=\"page-sidebar\" [ngClass]=\"{'visible': !settingService.layout.isCollapsed }\"></app-sidebar>\n\n<div class=\"page-container\">\n    <app-header class=\"header\"></app-header>\n\n    <div class=\"page-content-wrapper\">\n        <div class=\"content\">\n            <notification-bar></notification-bar>\n            <router-outlet></router-outlet>\n        </div>\n\n        <p>&nbsp;</p>\n        <p>&nbsp;</p>\n\n        <app-footer class=\"container-fluid container-fixed-lg footer\"></app-footer>\n     \n    </div>\n</div>\n\n";

/***/ }),
/* 326 */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"pgn-wrapper\" data-position=\"top-right\">\n    <div [@visibilityChanged] *ngFor=\"let notice of notifications; let i = index\" class=\"pgn pgn-bar\">\n        <div class=\"alert alert-{{notice.type}}\">\n            <button type=\"button\" class=\"close\" (click)=\"closeNotice(i)\">\n                <span aria-hidden=\"true\">×</span>\n                <span class=\"sr-only\">Close</span>\n            </button>\n            <span>\n                {{notice.message}}\n            </span>\n        </div>\n    </div>\n</div>\n";

/***/ }),
/* 327 */
/***/ (function(module, exports) {

module.exports = "<ul *ngIf=\"1==1\" class=\"notification-list no-margin hidden-sm hidden-xs b-grey b-l b-r no-style p-l-30 p-r-20\">\n    <li class=\"p-r-15 inline\">\n        <div class=\"dropdown\">\n            <a href=\"javascript:;\" id=\"notification-center\" class=\"icon-set globe-fill\" data-toggle=\"dropdown\" >\n                <span *ngIf=\"hasUnread\" class=\"bubble\"></span>\n            </a>\n            <!-- START Notification Dropdown -->\n            <div class=\"dropdown-menu notification-toggle\" role=\"menu\" aria-labelledby=\"notification-center\">\n                <!-- START Notification -->\n                <div class=\"notification-panel\">\n                    <!-- START Notification Body-->\n                    <div class=\"notification-body scrollable\">\n                        <!-- START Notification Item-->\n                        <div *ngFor=\"let transaction of transactions\" class=\"notification-item clearfix\" [ngClass]=\"{'unread': !transaction.isRead}\">\n                            <div class=\"heading\">\n                                <a (click)=\"routeNotification(transaction)\" class=\"pull-left {{transaction.isRead == false ? transaction.taskstatusClass : ''}}\" [class.text-danger]=\"transaction.isEscalated\">\n                                    <i class=\"fa\" [ngClass]=\"transaction.iconClass\">&nbsp;</i>\n                                    <span [ngClass]=\"{'bold': !transaction.isRead}\">{{transaction.description}}</span>\n                                    <!--<span class=\"fs-12 m-l-10\">Take Action</span>-->\n                                </a>\n                                <span class=\"pull-right time\">{{transaction.transactionDate | timeAgo}}</span>\n                            </div>\n                            <!-- START Notification Item Right Side-->\n                            <div class=\"option\" [ngClass]=\"{'bg-danger-lighter': transaction.isEscalated}\">\n                                <a (click)=\"markTransactionAsRead(transaction)\" class=\"mark\" [ngClass]=\"{'text-danger': transaction.isEscalated}\"></a>\n                            </div>\n                            <!-- END Notification Item Right Side-->\n                        </div>\n                        <!-- END Notification Item-->\n                    </div>\n                    <!-- END Notification Body-->\n                    <!-- START Notification Footer-->\n                    <div class=\"notification-footer text-center\">\n                        <a *ngIf=\"transactions.length == 0\">You have no notifications.</a>\n                        <a *ngIf=\"transactions.length > 0 && hasUnread\" (click)=\"markAllRead()\" class=\"\">Mark all notifications as read.</a>\n                        <a *ngIf=\"transactions.length > 0 && !hasUnread\" class=\"\">No unread notifications.</a>\n                    </div>\n                    <!-- START Notification Footer-->\n                </div>\n                <!-- END Notification -->\n            </div>\n            <!-- END Notification Dropdown -->\n        </div>\n    </li>\n</ul>";

/***/ }),
/* 328 */
/***/ (function(module, exports) {

module.exports = "\n<a *ngIf=\"menuItem.text\" (click)=\"navigate()\">{{menuItem.text}}</a>\n<span *ngIf=\"menuItem.text\" (click)=\"navigate()\" [ngClass]=\"{'icon-thumbnail': true, 'bg-menu-light': menuItem.routeIsActive}\"><i *ngIf=\"menuItem.icon\" class=\"fa {{menuItem.icon}}\"></i><span *ngIf=\"!menuItem.icon\">{{menuItem.initials}}</span></span>";

/***/ }),
/* 329 */
/***/ (function(module, exports) {

module.exports = "\n<a *ngIf=\"menuItem.text\" (click)=\"navigate()\" [class.detailed]=\"menuItem.alert\">\n    <span class=\"title\">{{menuItem.text}}</span>\n    <span *ngIf=\"menuItem.alert\" class=\"details\">{{menuItem.alert}}</span>\n    <span class=\"arrow\" *ngIf=\"hasSubmenu && !menuItem.alert\" [class.open]=\"menuItem.isExpanded\"></span>\n</a>\n<span *ngIf=\"menuItem.text\" (click)=\"navigate()\" [ngClass]=\"'icon-thumbnail ' + (menuItem.routeIsActive && menuItem.iconBgClass ? menuItem.iconBgClass : '')\"><i *ngIf=\"menuItem.icon\" class=\"fa {{menuItem.icon}}\"></i><span *ngIf=\"!menuItem.icon\">{{menuItem.initials}}</span></span>\n<ul [@expansionChanged]=\"menuItem.isExpanded\" *ngIf=\"!settingService.layout.isCollapsed && hasSubmenu && menuItem.text\" class=\"sub-menu\">\n    <li *ngFor=\"let submenu of menuItem.submenu\" [class.active]=\"submenu.routeIsActive\">\n        <menu-sublevel [menuItem]=\"submenu\"></menu-sublevel>\n    </li>\n</ul>";

/***/ }),
/* 330 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = "\n<div id=\"appMenu\" class=\"sidebar-overlay-slide from-top\">\n</div>\n<!-- BEGIN SIDEBAR HEADER -->\n<div class=\"sidebar-header\">\n    <img src=\"" + __webpack_require__(356) + "\" alt=\"logo\" class=\"brand\" data-src=\"../../assets/images/logo_white.png\" data-src-retina=\"../../assets/images/logo_white_2x.png\" width=\"78\" height=\"22\">\n    <div class=\"sidebar-header-controls\">\n        <div class=\"btn btn-xs sidebar-slide-toggle btn-link m-l-20\"></div>\n        <!--<button data-pages-toggle=\"#appMenu\" class=\"btn btn-xs sidebar-slide-toggle btn-link m-l-20\" type=\"button\">\n            <i class=\"fa fa-angle-down fs-16\"></i>\n        </button>-->\n        <button data-toggle-pin=\"sidebar\" class=\"btn btn-link visible-lg-inline\" type=\"button\" (click)=\"toggleSidebarPinned()\">\n            <i class=\"fa fs-12\"></i>\n        </button>\n    </div>\n</div>\n<!-- END SIDEBAR HEADER -->\n<!-- BEGIN SIDEBAR MENU -->\n<div class=\"sidebar-menu\">\n    <ul class=\"menu-items\">\n        <li [class.open]=\"menuItem.isExpanded\"  [class.m-t-30]=\"index == 0\" *ngFor=\"let menuItem of menuItems; let index = index\" [class.active]=\"menuItem.routeIsActive\">\n            <menu-toplevel [menuItem]=\"menuItem\"></menu-toplevel>\n        </li>\n    </ul>\n    <div class=\"clearfix\"></div>\n</div>";

/***/ }),
/* 331 */
/***/ (function(module, exports) {

module.exports = "<div class=\"dataTables_wrapper form-inline no-footer\">\n    <div>\n        <table class=\"table dataTable no-footer\" [ngClass]=\"{'table-hover': hoverRows, 'table-condensed': condenseRows, 'table-striped': stripedRows}\" role=\"grid\">\n            <thead>\n                <tr role=\"row\">\n                    <th *ngFor=\"let column of config.columns\" (click)=\"setSort(column)\" [ngClass]=\"{'sorting': ((config.sortColumn != column.propertyName) && column.allowSorting), 'sorting-asc': (column.allowSorting && config.sortColumn == column.propertyName && config.sortDirection == 0), 'sorting-desc': (column.allowSorting && config.sortColumn == column.propertyName && config.sortDirection == 1) }\" rowspan=\"1\" colspan=\"1\">{{column.columnHeader}}</th>\n                    <th *ngIf=\"allowDelete\" class=\"v-align-middle\"></th> \n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let record of data;let i = index\" role=\"row\" [ngClass]=\"{'even': i % 2 != 0, 'odd': i % 2 == 0}\">\n                    <td *ngFor=\"let column of config.columns\" class=\"v-align-middle\">\n                        <a *ngIf=\"column.routerLink\" [routerLink]=\"column.routerLink(record)\">\n                            <span *ngIf=\"column.formatter\">{{column.formatter(record)}}</span>\n                            <span *ngIf=\"!column.formatter\">{{record[column.propertyName]}}</span>\n                        </a>\n                        <a *ngIf=\"!column.routerLink && column.allowSelect\" (click)=\"selectRecord(record)\">\n                            <span *ngIf=\"column.formatter\">{{column.formatter(record)}}</span>\n                            <span *ngIf=\"!column.formatter\">{{record[column.propertyName]}}</span>\n                        </a>\n                        <span *ngIf=\"!column.allowSelect && !column.routerLink && column.formatter\">{{column.formatter(record)}}</span>\n                        <span *ngIf=\"!column.allowSelect && !column.routerLink && !column.formatter && !column.allowDownloadFile\">{{record[column.propertyName]}}</span>\n                        <a *ngIf=\"column.allowDownloadFile\" (click)=\"downloadFile(record)\">{{record[column.propertyName]}}</a>\n                        \n                    </td>\n                    <td *ngIf=\"allowDelete\" class=\"v-align-middle\">\n                        <button name=\"d\" (click)=\"openModal('delete' + config.entityTypeName, record)\" class=\"btn btn-danger\">Delete</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"row\" *ngIf=\"pagination\">\n        <pagination-summary *ngIf=\"config.showPaging\" [config]=\"config\" [pagination]=\"pagination\"></pagination-summary>\n        <pagination *ngIf=\"config.showPager\" (refresh)=\"refreshGrid($event)\" [pagination]=\"pagination\"></pagination>\n    </div>\n</div>\n\n\n<modal [id]=\"'delete' + config.entityTypeName\" class=\"modal fade\" role=\"dialog\" >\n    <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header clearfix text-left\">\n                <button type=\"button\" class=\"close\" (click)=\"closeModal('delete' + config.entityTypeName)\">\n                    <i class=\"pg-close fs-14\"></i>\n                </button>\n                <h5 class=\"text-left p-b-5\">{{deleteText || 'Are you sure?'}}</h5>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12\">\n                        {{deleteMessage || 'Are you sure you want to delete this record?'}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"row\">\n                    <div class=\"col-sm-4\"></div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"deleteRecord('delete' + config.entityTypeName);\" type=\"button\" class=\"btn btn-danger btn-block m-t-5\">Confirm</button>\n                    </div>\n                    <div class=\"col-sm-4\">\n                        <button (click)=\"closeModal('delete' + config.entityTypeName)\" class=\"btn btn-default btn-block m-t-5\" type=\"button\">Cancel</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</modal>";

/***/ }),
/* 332 */
/***/ (function(module, exports) {

module.exports = "\n\n<label [ngClass]=\"{'fade': hasValue}\">{{label}}</label>\n<input #inputElement type=\"file\" [name]=\"propertyName\" [placeholder]=\"placeholder\" class=\"form-control\" [(ngModel)]=\"value\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" />\n\n";

/***/ }),
/* 333 */
/***/ (function(module, exports) {

module.exports = "\n<form (ngSubmit)=\"saveAddress()\" role=\"form\" #addressform=\"ngForm\">\n    <input-focus label=\"Attention\" [propertyName]=\"attention\" class=\"form-group form-group-default\" [(ngModel)]=\"address.attention\" name=\"attention\"></input-focus>\n    <input-focus required label=\"Street Address 1\" [propertyName]=\"streetAddress1\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.streetAddress1\" name=\"streetAddress1\"></input-focus>\n    <input-focus label=\"Street Address 2\" [propertyName]=\"streetAddress2\" class=\"form-group form-group-default\" [(ngModel)]=\"address.streetAddress2\" name=\"streetAddress2\"></input-focus>\n    <input-focus required label=\"City\" [propertyName]=\"city\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.city\" name=\"city\"></input-focus>\n    <select-focus required label=\"State\" [data]=\"states\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"stateId\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.stateId\" name=\"stateId\"></select-focus>\n    <input-focus label=\"Postal Code\" [mask]=\"'99999-9999'\" minlength=\"5\" maxlength=\"10\" [propertyName]=\"postalCode\" class=\"form-group form-group-default required\" [(ngModel)]=\"address.postalCode\" name=\"postalCode\"></input-focus>\n    <button type=\"submit\" [disabled]=\"!addressform.form.valid || processing\" class=\"btn btn-primary\">\n        Save Address <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n    </button> &nbsp;\n    <a *ngIf=\"!hideCancel\" class=\"btn\" (click)=\"close()\">Cancel</a>\n</form>";

/***/ }),
/* 334 */
/***/ (function(module, exports) {

module.exports = "\n<form (ngSubmit)=\"saveContact()\" role=\"form\" #contactform=\"ngForm\">\n    <input-focus label=\"First Name\" required [propertyName]=\"firstName\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.firstName\" name=\"firstName\"></input-focus>\n    <input-focus label=\"Last Name\" required [propertyName]=\"lastName\" class=\"form-group form-group-default required\" [(ngModel)]=\"contact.lastName\" name=\"lastName\"></input-focus>\n    <input-focus label=\"Title\" [propertyName]=\"title\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.title\" name=\"title\"></input-focus>\n    <select-focus *ngIf=\"locations\" label=\"Location\" [data]=\"locations\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"locationId\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.locationId\" name=\"locationId\"></select-focus>\n    <input-focus label=\"Email Address\" placeholder=\"[Used for email notifications]\" [propertyName]=\"emailAddress\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.emailAddress\" name=\"emailAddress\"></input-focus>\n    <input-focus label=\"Office Phone\" [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" [propertyName]=\"officePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.officePhoneNumber\" name=\"officePhoneNumber\"></input-focus>\n    <input-focus label=\"Moble Phone\" [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" placeholder=\"[Used for SMS notifications]\" [propertyName]=\"mobilePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.mobilePhoneNumber\" name=\"mobilePhoneNumber\"></input-focus>\n    <input-focus label=\"Office Phone\" [mask]=\"'(999) 999-9999 99'\" maxlength=\"17\" minlength=\"17\" [propertyName]=\"officePhoneNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.officePhoneNumber\" name=\"officePhoneNumber\"></input-focus>\n    <input-focus label=\"Pager\" [propertyName]=\"pagerNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.pagerNumber\" name=\"pagerNumber\"></input-focus>\n    <input-focus label=\"Fax\" [propertyName]=\"faxNumber\" class=\"form-group form-group-default\" [(ngModel)]=\"contact.faxNumber\" name=\"faxNumber\"></input-focus>\n    <button type=\"submit\" [disabled]=\"!contactform.form.valid || processing\" class=\"btn btn-primary\">\n        Save Contact <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n    </button>\n    <a *ngIf=\"!hideCancel\" class=\"btn\" (click)=\"close()\">Cancel</a>\n</form>";

/***/ }),
/* 335 */
/***/ (function(module, exports) {

module.exports = "\n<form (ngSubmit)=\"saveJob()\" role=\"form\" #jobform=\"ngForm\">\n    <select-focus [isDisabled]=\"isclientDisabled\" (change)=\"loadLocations()\" *ngIf=\"!client && !location && !isclientHide\" required label=\"Client\" [data]=\"clients\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"clientId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.clientId\" name=\"clientId\"></select-focus>\n    <select-focus *ngIf=\"!location\" [isDisabled]=\"iscontactDisabled\" required label=\"Location\" [data]=\"locations\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"locationId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.locationId\" name=\"locationId\"></select-focus>\n\n    <select-focus required label=\"Type\" [data]=\"jobTypes\" dataTextField=\"name\" dataValueField=\"id\" [propertyName]=\"jobTypeId\" class=\"form-group form-group-default required\" [(ngModel)]=\"job.jobTypeId\" name=\"jobTypeId\"></select-focus>\n\n    <textarea-focus label=\"Description\" [propertyName]=\"description\" class=\"form-group form-group-default\" [(ngModel)]=\"job.description\" name=\"description\"></textarea-focus>\n    <button type=\"submit\" [disabled]=\"!jobform.form.valid || processing\" class=\"btn btn-primary\">\n        Save Job <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n    </button> &nbsp;\n    <a *ngIf=\"!hideCancel\" class=\"btn\" (click)=\"close()\">Cancel</a>\n</form>";

/***/ }),
/* 336 */
/***/ (function(module, exports) {

module.exports = "\n<form (ngSubmit)=\"saveLocation()\" role=\"form\" #locationform=\"ngForm\">\n    <input-focus label=\"Name\" [propertyName]=\"name\" class=\"form-group form-group-default\" [(ngModel)]=\"location.name\" name=\"name\"></input-focus>\n    <input-focus label=\"Alias\" [propertyName]=\"alias\" class=\"form-group form-group-default\" [(ngModel)]=\"location.alias\" name=\"alias\"></input-focus>\n    <select-focus required label=\"Address\" [data]=\"addresses\" dataTextField=\"condensedName\" dataValueField=\"id\" [propertyName]=\"addressId\" class=\"form-group form-group-default required\" [(ngModel)]=\"location.addressId\" name=\"addressId\"></select-focus>\n    <button type=\"submit\" [disabled]=\"!locationform.form.valid || processing\" class=\"btn btn-primary\">\n        Save Location <i *ngIf=\"processing\" class=\"fa fa-spinner fa-spin\"></i>\n    </button>\n    <a *ngIf=\"!hideCancel\" class=\"btn\" (click)=\"close()\">Cancel</a>\n</form>";

/***/ }),
/* 337 */
/***/ (function(module, exports) {

module.exports = "\n<label [ngClass]=\"{'fade': hasValue}\">{{label}}</label>\n<input #inputElement [type]=\"inputType\" [name]=\"propertyName\" [disabled]=\"disabled\" [placeholder]=\"placeholder\" class=\"form-control\" [(ngModel)]=\"value\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"  />\n";

/***/ }),
/* 338 */
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"pagination\" class=\"col-xs-12 col-sm-6 dataTables_info\" role=\"status\" aria-live=\"polite\">\n    Showing <b>{{pagination.startingRecordNumber | number}} to {{pagination.endingRecordNumber | number}}</b> of {{pagination.totalCount | number}} {{config.entityTypeName}}\n</div>";

/***/ }),
/* 339 */
/***/ (function(module, exports) {

module.exports = "\n<div *ngIf=\"pagination\" class=\"col-xs-12 col-sm-6 pull-right dataTables_paginate paging_simple_numbers\">\n    <ul class=\"\">\n        <li class=\"paginate_button previous\" [ngClass]=\"{'disabled': pagination.pageIndex == 0}\"><a (click)=\"previousPage()\" tabindex=\"0\"><i class=\"pg-arrow_left\"></i></a></li>\n        <li *ngFor=\"let page of pages\" class=\"paginate_button\" [ngClass]=\"{'active': page == pagination.pageIndex }\"><a (click)=\"changePageIndex(page)\" tabindex=\"0\">{{page + 1}}</a></li>\n        <li class=\"paginate_button next\" [ngClass]=\"{'disabled': pagination.pageIndex == pagination.totalPages - 1}\"><a (click)=\"nextPage()\" tabindex=\"0\"><i class=\"pg-arrow_right\"></i></a></li>\n    </ul>\n</div>";

/***/ }),
/* 340 */
/***/ (function(module, exports) {

module.exports = "\n\n<label [ngClass]=\"{'fade': hasValue}\">{{label}}</label>\n<input #inputElement type=\"password\" [name]=\"propertyName\" [placeholder]=\"placeholder\" class=\"form-control\" [(ngModel)]=\"value\" (focus)=\"onFocus()\" (blur)=\"onBlur()\" />\n\n";

/***/ }),
/* 341 */
/***/ (function(module, exports) {

module.exports = "\n<label [ngClass]=\"{'fade': hasValue}\">{{label}}</label>\n<select [disabled]=\"isDisabled\" #inputElement [name]=\"propertyName\" class=\"form-control\" [(ngModel)]=\"value\" (focus)=\"onFocus()\" (blur)=\"onBlur()\">\n    <option *ngFor=\"let opt of data\" [value]=\"opt[dataValueField]\">{{opt[dataTextField]}}</option>\n</select>\n";

/***/ }),
/* 342 */
/***/ (function(module, exports) {

module.exports = "\n\n<label [ngClass]=\"{'fade': hasValue}\">{{label}}</label>\n<textarea #inputElement rows=\"5\" [name]=\"propertyName\" [disabled]=\"disabled\" [placeholder]=\"placeholder\" class=\"form-control\" [(ngModel)]=\"value\" (focus)=\"onFocus()\" (blur)=\"onBlur()\"></textarea>\n\n";

/***/ }),
/* 343 */
/***/ (function(module, exports) {

module.exports = "\n    <div class=\"timeline-point\" [ngClass]=\"iconClass\">\n        <i class=\"fa\" [ngClass]=\"icon\"></i>\n    </div>\n    <!-- timeline-point -->\n    <div class=\"timeline-content\">\n        <!-- START CARD ELEMENT -->\n        <div class=\"card share full-width\">\n            <div class=\"circle\" data-toggle=\"tooltip\" title=\"{{transaction.resultingObject}}\">\n            </div>\n            <div class=\"card-header clearfix\">\n                <div class=\"user-pic\">\n                    <img width=\"33\" height=\"33\" [src]=\"profileImage\">\n                </div>\n                <h5>{{transaction.fullName}}</h5>\n                <h6>\n                    <span class=\"location semi-bold\"><i class=\"fa fa-clock-o\"></i> on {{transaction.transactionDate | date:'EEEE, MMMM d, y'}} at {{transaction.transactionDate | date:'h:mm a'}}</span>\n                </h6>\n            </div>\n            <div class=\"card-description\">\n                <p>{{transaction.description}}</p>\n            </div>\n        </div>\n        <!-- END CARD ELEMENT -->\n    </div>\n";

/***/ }),
/* 344 */
/***/ (function(module, exports) {

module.exports = "\n<section class=\"timeline\">\n    <timeline-item *ngFor=\"let transaction of data\" [transaction]=\"transaction\"></timeline-item>   \n\n    <div class=\"timeline-block timeline-more\" *ngIf=\"pagination.pageSize < pagination.totalCount\">\n        <div class=\"timeline-point\" (click)=\"loadMore()\">\n            <i *ngIf=\"!isLoading\" class=\"fa fa-ellipsis-h\"></i>\n            <i *ngIf=\"isLoading\" class=\"fa fa-spinner fa-pulse fa-spin\"></i>\n        </div>\n    </div>\n</section>";

/***/ }),
/* 345 */
/***/ (function(module, exports) {

module.exports = "\n<div class=\"portlet-progress\" style=\"background-color: rgba(255, 255, 255, 0.8); display: block;\">\n    <div class=\"progress-circle-indeterminate progress-circle-success\"></div>\n</div>";

/***/ }),
/* 346 */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./af": 99,
	"./af.js": 99,
	"./ar": 106,
	"./ar-dz": 100,
	"./ar-dz.js": 100,
	"./ar-kw": 101,
	"./ar-kw.js": 101,
	"./ar-ly": 102,
	"./ar-ly.js": 102,
	"./ar-ma": 103,
	"./ar-ma.js": 103,
	"./ar-sa": 104,
	"./ar-sa.js": 104,
	"./ar-tn": 105,
	"./ar-tn.js": 105,
	"./ar.js": 106,
	"./az": 107,
	"./az.js": 107,
	"./be": 108,
	"./be.js": 108,
	"./bg": 109,
	"./bg.js": 109,
	"./bm": 110,
	"./bm.js": 110,
	"./bn": 111,
	"./bn.js": 111,
	"./bo": 112,
	"./bo.js": 112,
	"./br": 113,
	"./br.js": 113,
	"./bs": 114,
	"./bs.js": 114,
	"./ca": 115,
	"./ca.js": 115,
	"./cs": 116,
	"./cs.js": 116,
	"./cv": 117,
	"./cv.js": 117,
	"./cy": 118,
	"./cy.js": 118,
	"./da": 119,
	"./da.js": 119,
	"./de": 122,
	"./de-at": 120,
	"./de-at.js": 120,
	"./de-ch": 121,
	"./de-ch.js": 121,
	"./de.js": 122,
	"./dv": 123,
	"./dv.js": 123,
	"./el": 124,
	"./el.js": 124,
	"./en-au": 125,
	"./en-au.js": 125,
	"./en-ca": 126,
	"./en-ca.js": 126,
	"./en-gb": 127,
	"./en-gb.js": 127,
	"./en-ie": 128,
	"./en-ie.js": 128,
	"./en-nz": 129,
	"./en-nz.js": 129,
	"./eo": 130,
	"./eo.js": 130,
	"./es": 133,
	"./es-do": 131,
	"./es-do.js": 131,
	"./es-us": 132,
	"./es-us.js": 132,
	"./es.js": 133,
	"./et": 134,
	"./et.js": 134,
	"./eu": 135,
	"./eu.js": 135,
	"./fa": 136,
	"./fa.js": 136,
	"./fi": 137,
	"./fi.js": 137,
	"./fo": 138,
	"./fo.js": 138,
	"./fr": 141,
	"./fr-ca": 139,
	"./fr-ca.js": 139,
	"./fr-ch": 140,
	"./fr-ch.js": 140,
	"./fr.js": 141,
	"./fy": 142,
	"./fy.js": 142,
	"./gd": 143,
	"./gd.js": 143,
	"./gl": 144,
	"./gl.js": 144,
	"./gom-latn": 145,
	"./gom-latn.js": 145,
	"./gu": 146,
	"./gu.js": 146,
	"./he": 147,
	"./he.js": 147,
	"./hi": 148,
	"./hi.js": 148,
	"./hr": 149,
	"./hr.js": 149,
	"./hu": 150,
	"./hu.js": 150,
	"./hy-am": 151,
	"./hy-am.js": 151,
	"./id": 152,
	"./id.js": 152,
	"./is": 153,
	"./is.js": 153,
	"./it": 154,
	"./it.js": 154,
	"./ja": 155,
	"./ja.js": 155,
	"./jv": 156,
	"./jv.js": 156,
	"./ka": 157,
	"./ka.js": 157,
	"./kk": 158,
	"./kk.js": 158,
	"./km": 159,
	"./km.js": 159,
	"./kn": 160,
	"./kn.js": 160,
	"./ko": 161,
	"./ko.js": 161,
	"./ky": 162,
	"./ky.js": 162,
	"./lb": 163,
	"./lb.js": 163,
	"./lo": 164,
	"./lo.js": 164,
	"./lt": 165,
	"./lt.js": 165,
	"./lv": 166,
	"./lv.js": 166,
	"./me": 167,
	"./me.js": 167,
	"./mi": 168,
	"./mi.js": 168,
	"./mk": 169,
	"./mk.js": 169,
	"./ml": 170,
	"./ml.js": 170,
	"./mr": 171,
	"./mr.js": 171,
	"./ms": 173,
	"./ms-my": 172,
	"./ms-my.js": 172,
	"./ms.js": 173,
	"./my": 174,
	"./my.js": 174,
	"./nb": 175,
	"./nb.js": 175,
	"./ne": 176,
	"./ne.js": 176,
	"./nl": 178,
	"./nl-be": 177,
	"./nl-be.js": 177,
	"./nl.js": 178,
	"./nn": 179,
	"./nn.js": 179,
	"./pa-in": 180,
	"./pa-in.js": 180,
	"./pl": 181,
	"./pl.js": 181,
	"./pt": 183,
	"./pt-br": 182,
	"./pt-br.js": 182,
	"./pt.js": 183,
	"./ro": 184,
	"./ro.js": 184,
	"./ru": 185,
	"./ru.js": 185,
	"./sd": 186,
	"./sd.js": 186,
	"./se": 187,
	"./se.js": 187,
	"./si": 188,
	"./si.js": 188,
	"./sk": 189,
	"./sk.js": 189,
	"./sl": 190,
	"./sl.js": 190,
	"./sq": 191,
	"./sq.js": 191,
	"./sr": 193,
	"./sr-cyrl": 192,
	"./sr-cyrl.js": 192,
	"./sr.js": 193,
	"./ss": 194,
	"./ss.js": 194,
	"./sv": 195,
	"./sv.js": 195,
	"./sw": 196,
	"./sw.js": 196,
	"./ta": 197,
	"./ta.js": 197,
	"./te": 198,
	"./te.js": 198,
	"./tet": 199,
	"./tet.js": 199,
	"./th": 200,
	"./th.js": 200,
	"./tl-ph": 201,
	"./tl-ph.js": 201,
	"./tlh": 202,
	"./tlh.js": 202,
	"./tr": 203,
	"./tr.js": 203,
	"./tzl": 204,
	"./tzl.js": 204,
	"./tzm": 206,
	"./tzm-latn": 205,
	"./tzm-latn.js": 205,
	"./tzm.js": 206,
	"./uk": 207,
	"./uk.js": 207,
	"./ur": 208,
	"./ur.js": 208,
	"./uz": 210,
	"./uz-latn": 209,
	"./uz-latn.js": 209,
	"./uz.js": 210,
	"./vi": 211,
	"./vi.js": 211,
	"./x-pseudo": 212,
	"./x-pseudo.js": 212,
	"./yo": 213,
	"./yo.js": 213,
	"./zh-cn": 214,
	"./zh-cn.js": 214,
	"./zh-hk": 215,
	"./zh-hk.js": 215,
	"./zh-tw": 216,
	"./zh-tw.js": 216
};
function webpackContext(req) {
	return __webpack_require__(webpackContextResolve(req));
};
function webpackContextResolve(req) {
	var id = map[req];
	if(!(id + 1)) // check for number or string
		throw new Error("Cannot find module '" + req + "'.");
	return id;
};
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 346;

/***/ }),
/* 347 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var core_1 = __webpack_require__(1);
var dragula_directive_1 = __webpack_require__(217);
var dragula_provider_1 = __webpack_require__(51);
var DragulaModule = (function () {
    function DragulaModule() {
    }
    return DragulaModule;
}());
DragulaModule = __decorate([
    core_1.NgModule({
        exports: [dragula_directive_1.DragulaDirective],
        declarations: [dragula_directive_1.DragulaDirective],
        providers: [dragula_provider_1.DragulaService]
    })
], DragulaModule);
exports.DragulaModule = DragulaModule;


/***/ }),
/* 348 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DualListBoxModule", function() { return DualListBoxModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DualListBoxComponent", function() { return DualListBoxComponent; });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(54);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__angular_forms__ = __webpack_require__(22);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Rx__ = __webpack_require__(31);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Rx___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Rx__);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash__ = __webpack_require__(23);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_lodash___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_lodash__);







var DualListBoxComponent = (function () {
    /**
     * @param {?} fb
     */
    function DualListBoxComponent(fb) {
        this.fb = fb;
        // field to use for value of option
        this.valueField = 'id';
        // field to use for displaying option text
        this.textField = 'name';
        // time to debounce search output in ms
        this.debounceTime = 500;
        // show/hide button to move all items between boxes
        this.moveAllButton = true;
        // text displayed over the available items list box
        this.availableText = 'Available items';
        // text displayed over the selected items list box
        this.selectedText = 'Selected items';
        // set placeholder text in available items list box
        this.availableFilterPlaceholder = 'Filter...';
        // set placeholder text in selected items list box
        this.selectedFilterPlaceholder = 'Filter...';
        // event called when item or items from available items(left box) is selected
        this.onAvailableItemSelected = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        // event called when item or items from selected items(right box) is selected
        this.onSelectedItemsSelected = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        // event called when items are moved between boxes, returns state of both boxes and item moved
        this.onItemsMoved = new __WEBPACK_IMPORTED_MODULE_0__angular_core__["EventEmitter"]();
        // private variables to manage class
        this.searchTermAvailable = '';
        this.searchTermSelected = '';
        this.availableItems = [];
        this.selectedItems = [];
        this.availableListBoxControl = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormControl"]();
        this.selectedListBoxControl = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormControl"]();
        this.availableSearchInputControl = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormControl"]();
        this.selectedSearchInputControl = new __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormControl"]();
        // control value accessors
        this._onChange = function (_$$1) { };
        this._onTouched = function () { };
        this.listBoxForm = this.fb.group({
            availableListBox: this.availableListBoxControl,
            selectedListBox: this.selectedListBoxControl,
            availableSearchInput: this.availableSearchInputControl,
            selectedSearchInput: this.selectedSearchInputControl
        });
    }
    Object.defineProperty(DualListBoxComponent.prototype, "data", {
        /**
         * @param {?} items
         * @return {?}
         */
        set: function (items) {
            var _this = this;
            this.availableItems = (items || []).map(function (item, index) { return ({
                value: item[_this.valueField].toString(),
                text: item[_this.textField]
            }); }).slice();
        },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(DualListBoxComponent.prototype, "availableSearch", {
        /**
         * @param {?} searchTerm
         * @return {?}
         */
        set: function (searchTerm) {
            this.searchTermAvailable = searchTerm;
            this.availableSearchInputControl.setValue(searchTerm);
        },
        enumerable: true,
        configurable: true
    });
    
    Object.defineProperty(DualListBoxComponent.prototype, "selectedSearch", {
        /**
         * @param {?} searchTerm
         * @return {?}
         */
        set: function (searchTerm) {
            this.searchTermSelected = searchTerm;
            this.selectedSearchInputControl.setValue(searchTerm);
        },
        enumerable: true,
        configurable: true
    });
    
    /**
     * @return {?}
     */
    DualListBoxComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.availableListBoxControl
            .valueChanges
            .subscribe(function (items) { return _this.onAvailableItemSelected.emit(items); });
        this.selectedListBoxControl
            .valueChanges
            .subscribe(function (items) { return _this.onSelectedItemsSelected.emit(items); });
        this.availableSearchInputControl
            .valueChanges
            .debounceTime(this.debounceTime)
            .distinctUntilChanged()
            .subscribe(function (search) { return _this.searchTermAvailable = search; });
        this.selectedSearchInputControl
            .valueChanges
            .debounceTime(this.debounceTime)
            .distinctUntilChanged()
            .subscribe(function (search) { return _this.searchTermSelected = search; });
    };
    /**
     * Move all items from available to selected
     * @return {?}
     */
    DualListBoxComponent.prototype.moveAllItemsToSelected = function () {
        if (!this.availableItems.length) {
            return;
        }
        this.selectedItems = this.selectedItems.concat(this.availableItems);
        this.availableItems = [];
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: this.availableListBoxControl.value
        });
        this.availableListBoxControl.setValue([]);
        this.writeValue(this.getValues());
    };
    /**
     * Move all items from selected to available
     * @return {?}
     */
    DualListBoxComponent.prototype.moveAllItemsToAvailable = function () {
        if (!this.selectedItems.length) {
            return;
        }
        this.availableItems = this.availableItems.concat(this.selectedItems);
        this.selectedItems = [];
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: this.selectedListBoxControl.value
        });
        this.selectedListBoxControl.setValue([]);
        this.writeValue([]);
    };
    /**
     * Move marked items from available items to selected items
     * @return {?}
     */
    DualListBoxComponent.prototype.moveMarkedAvailableItemsToSelected = function () {
        // first move items to selected
        this.selectedItems = this.selectedItems.concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["intersectionWith"])(this.availableItems, this.availableListBoxControl.value, function (item, value) { return item.value === value; }));
        // now filter available items to not include marked values
        this.availableItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["differenceWith"])(this.availableItems, this.availableListBoxControl.value, function (item, value) { return item.value === value; }).slice();
        // clear marked available items and emit event
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: this.availableListBoxControl.value
        });
        this.availableListBoxControl.setValue([]);
        this.availableSearchInputControl.setValue('');
        this.writeValue(this.getValues());
    };
    /**
     * Move marked items from selected items to available items
     * @return {?}
     */
    DualListBoxComponent.prototype.moveMarkedSelectedItemsToAvailable = function () {
        // first move items to available
        this.availableItems = this.availableItems.concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["intersectionWith"])(this.selectedItems, this.selectedListBoxControl.value, function (item, value) { return item.value === value; }));
        // now filter available items to not include marked values
        this.selectedItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["differenceWith"])(this.selectedItems, this.selectedListBoxControl.value, function (item, value) { return item.value === value; }).slice();
        // clear marked available items and emit event
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: this.selectedListBoxControl.value
        });
        this.selectedListBoxControl.setValue([]);
        this.selectedSearchInputControl.setValue('');
        this.writeValue(this.getValues());
    };
    /**
     * Move single item from available to selected
     * @param {?} item
     * @return {?}
     */
    DualListBoxComponent.prototype.moveAvailableItemToSelected = function (item) {
        this.availableItems = this.availableItems.filter(function (listItem) { return listItem.value !== item.value; });
        this.selectedItems = this.selectedItems.concat([item]);
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: [item.value]
        });
        this.availableSearchInputControl.setValue('');
        this.availableListBoxControl.setValue([]);
        this.writeValue(this.getValues());
    };
    /**
     * Move single item from selected to available
     * @param {?} item
     * @return {?}
     */
    DualListBoxComponent.prototype.moveSelectedItemToAvailable = function (item) {
        this.selectedItems = this.selectedItems.filter(function (listItem) { return listItem.value !== item.value; });
        this.availableItems = this.availableItems.concat([item]);
        this.onItemsMoved.emit({
            available: this.availableItems,
            selected: this.selectedItems,
            movedItems: [item.value]
        });
        this.selectedSearchInputControl.setValue('');
        this.selectedListBoxControl.setValue([]);
        this.writeValue(this.getValues());
    };
    /**
     * Function to pass to ngFor to improve performance, tracks items
     * by the value field
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    DualListBoxComponent.prototype.trackByValue = function (index, item) {
        return item[this.valueField];
    };
    /**
     * @param {?} value
     * @return {?}
     */
    DualListBoxComponent.prototype.writeValue = function (value) {
        if (this.selectedItems && value && value.length > 0) {
            this.selectedItems = this.selectedItems.concat(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["intersectionWith"])(this.availableItems, value, function (item, value) { return item.value === value; }));
            this.availableItems = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["differenceWith"])(this.availableItems, value, function (item, value) { return item.value === value; }).slice();
        }
        this._onChange(value);
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    DualListBoxComponent.prototype.registerOnChange = function (fn) {
        this._onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    DualListBoxComponent.prototype.registerOnTouched = function (fn) {
        this._onTouched = fn;
    };
    /**
     * Utility method to get values from
     * selected items
     * @return {?}
     */
    DualListBoxComponent.prototype.getValues = function () {
        return (this.selectedItems || []).map(function (item) { return item.value; });
    };
    return DualListBoxComponent;
}());
DualListBoxComponent.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Component"], args: [{
                selector: 'ng2-dual-list-box',
                template: "<div class=\"row\" [formGroup]=\"listBoxForm\"> <div class=\"col-md-5 col-lg-5 col-sm-12\"> <h4 class=\"text-center vertical-spacing-5\">{{availableText}}</h4> <input type=\"text\" class=\"form-control vertical-spacing-5\" placeholder=\"{{availableFilterPlaceholder}}\" formControlName=\"availableSearchInput\" /> <select class=\"form-control list-box\" formControlName=\"availableListBox\" multiple> <option *ngFor=\"let item of availableItems | arrayFilter:['text', searchTermAvailable] | arraySort:['text', 'ASC'];trackBy:trackByValue\" [value]=\"item?.value\" (dblclick)=\"moveAvailableItemToSelected(item)\">{{item?.text}}</option> </select> </div> <div class=\"col-md-2 col-lg-2 col-sm-12 center-block text-center\"> <button type=\"button\" class=\"btn btn-default col-md-8 col-md-offset-2 atr top80 sm-spacing\" *ngIf=\"moveAllButton\" (click)=\"moveAllItemsToSelected()\"> <span class=\"glyphicon glyphicon-list\"></span> <span class=\"glyphicon glyphicon-chevron-right\"></span> </button> <button type=\"button\" class=\"btn btn-default col-md-8 col-md-offset-2 str vertical-spacing-5 sm-spacing\" [disabled]=\"!availableListBoxControl.value?.length\" (click)=\"moveMarkedAvailableItemsToSelected()\"> <span class=\"glyphicon glyphicon-chevron-right\"></span> </button> <button type=\"button\" class=\"btn btn-default col-md-8 col-md-offset-2 stl vertical-spacing-5 sm-spacing\" [disabled]=\"!selectedListBoxControl.value?.length\" (click)=\"moveMarkedSelectedItemsToAvailable()\"> <span class=\"glyphicon glyphicon-chevron-left\"></span> </button> <button type=\"button\" class=\"btn btn-default col-md-8 col-md-offset-2 atl bottom10 sm-spacing\" *ngIf=\"moveAllButton\" (click)=\"moveAllItemsToAvailable()\"> <span class=\"glyphicon glyphicon-chevron-left\"></span> <span class=\"glyphicon glyphicon-list\"></span> </button> </div> <div class=\"col-md-5 col-lg-5 col-sm-12\"> <h4 class=\"text-center vertical-spacing-5\">{{selectedText}}</h4> <input type=\"text\" class=\"form-control vertical-spacing-5\" placeholder=\"{{selectedFilterPlaceholder}}\" formControlName=\"selectedSearchInput\" /> <select class=\"form-control list-box\" formControlName=\"selectedListBox\" multiple> <option *ngFor=\"let item of selectedItems | arrayFilter:['text', searchTermSelected] | arraySort:['text', 'ASC'];trackBy:trackByValue\" [value]=\"item?.value\" (dblclick)=\"moveSelectedItemToAvailable(item)\">{{item?.text}}</option> </select> </div> </div>",
                styles: [".list-box { min-height: 200px; width: 100%; } .top100 { margin-top: 100px; } .top80 { margin-top: 80px; } .bottom10 { margin-bottom: 10px; } .vertical-spacing-5 { margin-top: 5px; margin-bottom: 5px; } .center-block { min-height: 50px; } /* Small Devices, Tablets */ @media only screen and (max-width : 768px) { .sm-spacing { margin-top: 10px; margin-bottom: 10px; } } /* Tablets in portrait */ @media only screen and (min-width : 768px) and (max-width : 992px) { .sm-spacing { margin-top: 10px; margin-bottom: 10px; } } /* Extra Small Devices, Phones */  @media only screen and (max-width : 480px) { .sm-spacing { margin-top: 10px; margin-bottom: 10px; } }"],
                providers: [{
                        provide: __WEBPACK_IMPORTED_MODULE_2__angular_forms__["NG_VALUE_ACCESSOR"],
                        useExisting: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__angular_core__["forwardRef"])(function () { return DualListBoxComponent; }),
                        multi: true
                    }]
            },] },
];
/**
 * @nocollapse
 */
DualListBoxComponent.ctorParameters = function () { return [
    { type: __WEBPACK_IMPORTED_MODULE_2__angular_forms__["FormBuilder"], },
]; };
DualListBoxComponent.propDecorators = {
    'data': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'availableSearch': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'selectedSearch': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'valueField': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'textField': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'debounceTime': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'moveAllButton': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'availableText': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'selectedText': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'availableFilterPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'selectedFilterPlaceholder': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Input"] },],
    'onAvailableItemSelected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'onSelectedItemsSelected': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
    'onItemsMoved': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Output"] },],
};

/**
 * Utility class to not hardcode sort directions
 */
var SortOptions = (function () {
    function SortOptions() {
    }
    return SortOptions;
}());
/**
 * Static property to defined ASC and DESC values
 * to avoid hardcoding and repeating
 * replaces string enums
 */
SortOptions.direction = {
    ASC: 'ASC',
    DESC: 'DESC'
};
/**
 * Pipe used to sort arrays by using lodash
 * Takes array and array of 2 strings(parameters), key and direction
 * direction must be either ASC or DESC
 */
var ArraySortPipe = (function () {
    function ArraySortPipe() {
    }
    /**
     * @param {?} array
     * @param {?} args
     * @return {?}
     */
    ArraySortPipe.prototype.transform = function (array, args) {
        array = array || [];
        if (typeof args === 'undefined' || args.length !== 2) {
            return array;
        }
        var key = args[0], direction = args[1];
        if (direction !== SortOptions.direction.ASC && direction !== SortOptions.direction.DESC) {
            return array;
        }
        // if there is no key we assume item is of string type
        return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4_lodash__["orderBy"])(array, function (item) { return item.hasOwnProperty(key) ? item[key] : item; }, direction.toLowerCase());
    };
    return ArraySortPipe;
}());
ArraySortPipe.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"], args: [{
                name: 'arraySort'
            },] },
];
/**
 * @nocollapse
 */
ArraySortPipe.ctorParameters = function () { return []; };
/**
 * Pipe used to filter array, takes input array and
 * array of 2 arguments, key of object and search term
 * if key does not exist, pipe assumes the item is string
 */
var ArrayFilterPipe = (function () {
    function ArrayFilterPipe() {
    }
    /**
     * @param {?} array
     * @param {?} args
     * @return {?}
     */
    ArrayFilterPipe.prototype.transform = function (array, args) {
        array = array || [];
        if (typeof args === 'undefined' || args.length !== 2) {
            return array;
        }
        var key = args[0], searchTerm = args[1];
        if (searchTerm.trim() === '') {
            return array;
        }
        return array.filter(function (item) { return item[key].toString().toLowerCase().search(searchTerm.toLowerCase().trim()) >= 0; });
    };
    return ArrayFilterPipe;
}());
ArrayFilterPipe.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["Pipe"], args: [{
                name: 'arrayFilter'
            },] },
];
/**
 * @nocollapse
 */
ArrayFilterPipe.ctorParameters = function () { return []; };

var DualListBoxModule = (function () {
    function DualListBoxModule() {
    }
    /**
     * @return {?}
     */
    DualListBoxModule.forRoot = function () {
        return {
            ngModule: DualListBoxModule
        };
    };
    return DualListBoxModule;
}());
DualListBoxModule.decorators = [
    { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__["NgModule"], args: [{
                imports: [
                    __WEBPACK_IMPORTED_MODULE_1__angular_common__["CommonModule"],
                    __WEBPACK_IMPORTED_MODULE_2__angular_forms__["ReactiveFormsModule"]
                ],
                declarations: [
                    ArraySortPipe,
                    ArrayFilterPipe,
                    DualListBoxComponent
                ],
                exports: [
                    DualListBoxComponent
                ]
            },] },
];
/**
 * @nocollapse
 */
DualListBoxModule.ctorParameters = function () { return []; };




/***/ }),
/* 349 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};


/***/ }),
/* 350 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};


/***/ }),
/* 351 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(349);
exports.encode = exports.stringify = __webpack_require__(350);


/***/ }),
/* 352 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var ansiRegex = __webpack_require__(226)();

module.exports = function (str) {
	return typeof str === 'string' ? str.replace(ansiRegex, '') : str;
};


/***/ }),
/* 353 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(setImmediate) {var si = typeof setImmediate === 'function', tick;
if (si) {
  tick = function (fn) { setImmediate(fn); };
} else {
  tick = function (fn) { setTimeout(fn, 0); };
}

module.exports = tick;
/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(363).setImmediate))

/***/ }),
/* 354 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = __webpack_require__(1);
var TimeAgoPipe = (function () {
    function TimeAgoPipe(changeDetectorRef, ngZone) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
    }
    TimeAgoPipe.prototype.transform = function (value) {
        var _this = this;
        this.removeTimer();
        var d = new Date(value);
        var now = new Date();
        var seconds = Math.round(Math.abs((now.getTime() - d.getTime()) / 1000));
        var timeToUpdate = this.getSecondsUntilUpdate(seconds) * 1000;
        this.timer = this.ngZone.runOutsideAngular(function () {
            if (typeof window !== 'undefined') {
                return window.setTimeout(function () {
                    _this.ngZone.run(function () { return _this.changeDetectorRef.markForCheck(); });
                }, timeToUpdate);
            }
            return null;
        });
        var minutes = Math.round(Math.abs(seconds / 60));
        var hours = Math.round(Math.abs(minutes / 60));
        var days = Math.round(Math.abs(hours / 24));
        var months = Math.round(Math.abs(days / 30.416));
        var years = Math.round(Math.abs(days / 365));
        if (seconds <= 45) {
            return 'a few seconds ago';
        }
        else if (seconds <= 90) {
            return 'a minute ago';
        }
        else if (minutes <= 45) {
            return minutes + ' minutes ago';
        }
        else if (minutes <= 90) {
            return 'an hour ago';
        }
        else if (hours <= 22) {
            return hours + ' hours ago';
        }
        else if (hours <= 36) {
            return 'a day ago';
        }
        else if (days <= 25) {
            return days + ' days ago';
        }
        else if (days <= 45) {
            return 'a month ago';
        }
        else if (days <= 345) {
            return months + ' months ago';
        }
        else if (days <= 545) {
            return 'a year ago';
        }
        else {
            return years + ' years ago';
        }
    };
    TimeAgoPipe.prototype.ngOnDestroy = function () {
        this.removeTimer();
    };
    TimeAgoPipe.prototype.removeTimer = function () {
        if (this.timer) {
            window.clearTimeout(this.timer);
            this.timer = null;
        }
    };
    TimeAgoPipe.prototype.getSecondsUntilUpdate = function (seconds) {
        var min = 60;
        var hr = min * 60;
        var day = hr * 24;
        if (seconds < min) {
            return 2;
        }
        else if (seconds < hr) {
            return 30;
        }
        else if (seconds < day) {
            return 300;
        }
        else {
            return 3600;
        }
    };
    return TimeAgoPipe;
}());
TimeAgoPipe = __decorate([
    core_1.Pipe({
        name: 'timeAgo',
        pure: false
    }),
    __metadata("design:paramtypes", [core_1.ChangeDetectorRef, core_1.NgZone])
], TimeAgoPipe);
exports.TimeAgoPipe = TimeAgoPipe;
//# sourceMappingURL=time-ago-pipe.js.map

/***/ }),
/* 355 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "991caa7c485a5f9451abb0318a8a7461.jpg";

/***/ }),
/* 356 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "fabe0df780bc0bdb4e2b97712e54bad2.png";

/***/ }),
/* 357 */
/***/ (function(module, exports, __webpack_require__) {

/*eslint-env browser*/

var clientOverlay = document.createElement('div');
clientOverlay.id = 'webpack-hot-middleware-clientOverlay';
var styles = {
  background: 'rgba(0,0,0,0.85)',
  color: '#E8E8E8',
  lineHeight: '1.2',
  whiteSpace: 'pre',
  fontFamily: 'Menlo, Consolas, monospace',
  fontSize: '13px',
  position: 'fixed',
  zIndex: 9999,
  padding: '10px',
  left: 0,
  right: 0,
  top: 0,
  bottom: 0,
  overflow: 'auto',
  dir: 'ltr',
  textAlign: 'left'
};

var ansiHTML = __webpack_require__(225);
var colors = {
  reset: ['transparent', 'transparent'],
  black: '181818',
  red: 'E36049',
  green: 'B3CB74',
  yellow: 'FFD080',
  blue: '7CAFC2',
  magenta: '7FACCA',
  cyan: 'C3C2EF',
  lightgrey: 'EBE7E3',
  darkgrey: '6D7891'
};

var Entities = __webpack_require__(290).AllHtmlEntities;
var entities = new Entities();

function showProblems(type, lines) {
  clientOverlay.innerHTML = '';
  lines.forEach(function(msg) {
    msg = ansiHTML(entities.encode(msg));
    var div = document.createElement('div');
    div.style.marginBottom = '26px';
    div.innerHTML = problemType(type) + ' in ' + msg;
    clientOverlay.appendChild(div);
  });
  if (document.body) {
    document.body.appendChild(clientOverlay);
  }
}

function clear() {
  if (document.body && clientOverlay.parentNode) {
    document.body.removeChild(clientOverlay);
  }
}

function problemType (type) {
  var problemColors = {
    errors: colors.red,
    warnings: colors.yellow
  };
  var color = problemColors[type] || colors.red;
  return (
    '<span style="background-color:#' + color + '; color:#fff; padding:2px 4px; border-radius: 2px">' +
      type.slice(0, -1).toUpperCase() +
    '</span>'
  );
}

module.exports = function(options) {
  for (var color in options.overlayColors) {
    if (color in colors) {
      colors[color] = options.overlayColors[color];
    }
    ansiHTML.setColors(colors);
  }

  for (var style in options.overlayStyles) {
    styles[style] = options.overlayStyles[style];
  }

  for (var key in styles) {
    clientOverlay.style[key] = styles[key];
  }

  return {
    showProblems: showProblems,
    clear: clear
  }
};

module.exports.clear = clear;
module.exports.showProblems = showProblems;


/***/ }),
/* 358 */
/***/ (function(module, exports, __webpack_require__) {

/**
 * Based heavily on https://github.com/webpack/webpack/blob/
 *  c0afdf9c6abc1dd70707c594e473802a566f7b6e/hot/only-dev-server.js
 * Original copyright Tobias Koppers @sokra (MIT license)
 */

/* global window __webpack_hash__ */

if (false) {
  throw new Error("[HMR] Hot Module Replacement is disabled.");
}

var hmrDocsUrl = "https://webpack.js.org/concepts/hot-module-replacement/"; // eslint-disable-line max-len

var lastHash;
var failureStatuses = { abort: 1, fail: 1 };
var applyOptions = { 				
  ignoreUnaccepted: true,
  ignoreDeclined: true,
  ignoreErrored: true,
  onUnaccepted: function(data) {
    console.warn("Ignored an update to unaccepted module " + data.chain.join(" -> "));
  },
  onDeclined: function(data) {
    console.warn("Ignored an update to declined module " + data.chain.join(" -> "));
  },
  onErrored: function(data) {
    console.error(data.error);
    console.warn("Ignored an error while updating module " + data.moduleId + " (" + data.type + ")");
  } 
}

function upToDate(hash) {
  if (hash) lastHash = hash;
  return lastHash == __webpack_require__.h();
}

module.exports = function(hash, moduleMap, options) {
  var reload = options.reload;
  if (!upToDate(hash) && module.hot.status() == "idle") {
    if (options.log) console.log("[HMR] Checking for updates on the server...");
    check();
  }

  function check() {
    var cb = function(err, updatedModules) {
      if (err) return handleError(err);

      if(!updatedModules) {
        if (options.warn) {
          console.warn("[HMR] Cannot find update (Full reload needed)");
          console.warn("[HMR] (Probably because of restarting the server)");
        }
        performReload();
        return null;
      }

      var applyCallback = function(applyErr, renewedModules) {
        if (applyErr) return handleError(applyErr);

        if (!upToDate()) check();

        logUpdates(updatedModules, renewedModules);
      };

      var applyResult = module.hot.apply(applyOptions, applyCallback);
      // webpack 2 promise
      if (applyResult && applyResult.then) {
        // HotModuleReplacement.runtime.js refers to the result as `outdatedModules`
        applyResult.then(function(outdatedModules) {
          applyCallback(null, outdatedModules);
        });
        applyResult.catch(applyCallback);
      }

    };

    var result = module.hot.check(false, cb);
    // webpack 2 promise
    if (result && result.then) {
        result.then(function(updatedModules) {
            cb(null, updatedModules);
        });
        result.catch(cb);
    }
  }

  function logUpdates(updatedModules, renewedModules) {
    var unacceptedModules = updatedModules.filter(function(moduleId) {
      return renewedModules && renewedModules.indexOf(moduleId) < 0;
    });

    if(unacceptedModules.length > 0) {
      if (options.warn) {
        console.warn(
          "[HMR] The following modules couldn't be hot updated: " +
          "(Full reload needed)\n" +
          "This is usually because the modules which have changed " +
          "(and their parents) do not know how to hot reload themselves. " +
          "See " + hmrDocsUrl + " for more details."
        );
        unacceptedModules.forEach(function(moduleId) {
          console.warn("[HMR]  - " + moduleMap[moduleId]);
        });
      }
      performReload();
      return;
    }

    if (options.log) {
      if(!renewedModules || renewedModules.length === 0) {
        console.log("[HMR] Nothing hot updated.");
      } else {
        console.log("[HMR] Updated modules:");
        renewedModules.forEach(function(moduleId) {
          console.log("[HMR]  - " + moduleMap[moduleId]);
        });
      }

      if (upToDate()) {
        console.log("[HMR] App is up to date.");
      }
    }
  }

  function handleError(err) {
    if (module.hot.status() in failureStatuses) {
      if (options.warn) {
        console.warn("[HMR] Cannot check for update (Full reload needed)");
        console.warn("[HMR] " + err.stack || err.message);
      }
      performReload();
      return;
    }
    if (options.warn) {
      console.warn("[HMR] Update check failed: " + err.stack || err.message);
    }
  }

  function performReload() {
    if (reload) {
      if (options.warn) console.warn("[HMR] Reloading page");
      window.location.reload();
    }
  }
};


/***/ }),
/* 359 */
/***/ (function(module, exports) {

module.exports = function() {
	throw new Error("define cannot be used indirect");
};


/***/ }),
/* 360 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(exports, {}))

/***/ }),
/* 361 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(12);

/***/ }),
/* 362 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(27);

/***/ }),
/* 363 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(345);

/***/ }),
/* 364 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(649);

/***/ }),
/* 365 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(651);

/***/ }),
/* 366 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = (__webpack_require__(9))(656);

/***/ }),
/* 367 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(223);
__webpack_require__(222);
module.exports = __webpack_require__(221);


/***/ })
/******/ ]);
//# sourceMappingURL=main-client.js.map